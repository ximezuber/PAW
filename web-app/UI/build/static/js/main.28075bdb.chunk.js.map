{"version":3,"sources":["Components/DropDownList.js","Constants.js","api/index.js","api/Constants.js","api/LocationCalls.js","api/SpecialtyCalls.js","api/PrepaidCalls.js","Components/Pages/Constants.js","Components/SearchBar.js","api/DoctorCalls.js","api/apiCalls.js","utils/paginationHelper.js","Components/Pages/Home.js","i18n/i18n.js","i18n/translations-en.js","i18n/translations-es.js","Components/NavBar.js","Components/Pages/AdminHome.js","Components/Modals/SinglePropertyAddModal.js","Components/Pages/Locations.js","Components/Pages/Specialties.js","Components/Modals/ClinicEditModal.js","api/ClinicCalls.js","Components/Pages/Clinics.js","Components/Pages/Prepaids.js","Components/Pages/SignUp.js","Components/Modals/ClinicPrepaidAddModal.js","Components/Pages/ClinicPrepaids.js","Components/Modals/DoctorAddModal.js","Components/Pages/Doctors.js","Components/Pages/Login.js","Components/Modals/EditDocProfileModal.js","Components/Modals/ImageSelectModal.js","api/ImageCalls.js","Components/Pages/DoctorHome.js","Components/Modals/DoctorClinicAddModal.js","Components/Modals/EditPriceModal.js","Components/Pages/DoctorClinics.js","utils/dateHelper.js","Components/Modals/ModifyScheduleModal.js","Components/Pages/DoctorClinicSchedule.js","api/AppointmentCalls.js","api/PatientCalls.js","Components/Pages/UserDoctorProfile.js","Components/Pages/Favorites.js","Components/Modals/EditUserProfileModal.js","Components/Pages/Profile.js","Components/Pages/Appointments.js","App.js","index.js"],"names":["DropDownList","props","useState","selectedElement","Dropdown","Toggle","id","variant","elementType","Menu","className","iterable","map","element","Item","eventKey","active","onClick","handleSelect","WEB_CONTEXT","BASE_URL","api","applyCaseMiddleware","axios","create","baseURL","preservedKeys","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","axiosInstance","PAGE_QUERY","USER_QUERY","LICENSE_QUERY","PATIENT_PATH","PREPAID_PATH","LOCATIONS_PATH","SPECIALTIES_PATH","DOCTORS_PATH","CLINICS_PATH","ALL_PATH","IMAGE_PATH","APPOINTMENT_PATH","getLocations","pag","a","get","cons","getAllLocations","addLocation","data","post","deleteLocation","name","delete","getLocation","getSpecialties","getAllSpecialties","addSpecialty","deleteSpecialty","getAllPrepaid","getPrepaid","deletePrepaid","addPrepaid","CURRENT","NEXT","PREV","FIRST","SearchBar","t","useTranslation","specialty","selectedSpecialty","setSelectedSpecialty","location","selectedLocation","setSelectedLocation","prepaid","selectedPrepaid","setSelectedPrepaid","firstName","setFirstName","lastName","setLastName","consultPrice","setConsultPrice","locations","setLocations","specialties","setSpecialties","prepaids","setPrepaids","fetchLocations","LocationCalls","response","ok","push","fetchSpecialties","SpecialtyCalls","fetchPrepaids","PrepaidCalls","useEffect","onChange","event","target","value","style","width","Form","FormGroup","controlId","Label","loc","spe","pre","Control","placeholder","Group","InputGroup","Text","FormControl","Button","handleSearch","getDoctorsAdmin","searchDocs","params","addDoctor","deleteDoctor","license","editDoctor","put","getClinics","getAllClinics","getDocByEmail","email","getDocByLicense","addDoctorToClinic","deleteDoctorsClinic","clinic","editPrice","clinicId","price","getSchedule","addSchedule","day","hour","deleteSchedule","login","password","setItem","URLSearchParams","append","then","resp","status","xAuthToken","signUp","makeGetCall","path","logout","removeItem","getPaths","linkHeader","links","split","paths","i","length","slice","Home","useSearchParams","searchParams","setSearchParams","doctors","setDoctors","setMessage","searchCriteria","setSearchCriteria","setPaths","loading","setLoading","setPages","paths1","fetchAllDoctorsWithAvailability","queryParams","DoctorCalls","link","handleSearchParams","criteria","search","fetchData","nextPage","prevPage","page","ApiCalls","Row","Col","xs","Container","doctor","Card","color","height","Body","Title","role","to","renderPrevButton","renderNextButton","marginRight","i18n","LanguageDetector","initReactI18next","init","resources","en","translation","NAVBAR","favourites","appointments","profile","clinics","USER","seeProfile","dataProfile","emptyFavorites","noApp","fav","doc","patient","ADMIN","seeDocs","seeClinics","seeLocations","seeSpecialties","seePrepaids","DOC","addDoc","subscribeClinic","image","CLINIC","addClinic","edit","FORM","enterFirstName","enterLastName","document","enterDocument","selectSpecialty","enterLicense","phoneNumber","enterPhone","enterEmail","enterPassword","repeatPassword","newPassword","prepaidNumber","enterPrepaidNumber","enterName","address","enterAddress","selectLocation","selectPrepaid","selectClinic","enterPrice","schedule","daySelect","hourSelect","none","maxPrice","dateTime","selectDateTime","errors","licenseInUse","emailInUse","specialtyNotFound","passwordMismatch","doctorNotFound","locationNotFound","clinicExists","clinicNotFoundEdit","clinicNotFoundDelete","locationNotFoundDelete","clinicDependency","locationExists","specialtyNotFoundDelete","doctorDependency","specialtyExists","prepaidNotFoundDelete","prepaidExists","clinicNotFound","prepaidNotFound","clinicPrepaidNotFoundDelete","docLoggedNotFound","doctorNotFoundEdit","noLoggedDoc","noDocEmail","required","numeric","passwordTooShort","alphabetic","invalidEmail","invalidDocumentLength","prepaidNumberTooLong","docClinicNotFound","imageBroken","notSupported","scheduleExists","scheduleNotFoundDelete","scheduleOtherClinicDelete","selectTime","datePast","outOfSchedule","appointmentExists","doctorAppointment","patientAppointment","noDocFound","noPatientEmail","favExists","noAppointmentFound","alreadySubscribed","actions","add","upload","makeApp","cancel","update","CAL","mon","tue","wed","thu","fri","sat","sun","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","deleteButton","prevButton","nextButton","closeButton","fieldRequired","scheduleButton","welcome","editProfileButton","changeImgButton","deleteImgButton","deleteProfile","cancelButton","with","nextApp","es","NavBar","navigate","useNavigate","useLocation","items","setItems","home","setHome","loggedIn","setLoggedIn","userNavbarItems","text","docNavBarItems","isAuth","getItems","getRoleHome","Navbar","expand","sticky","justifyContent","Brand","as","Link","item","Nav","class","setRole","ButtonGroup","changeLanguage","AdminHome","marginLeft","Img","src","verticalAlign","SinglePropertyAddModal","show","setShow","newProperty","setNewProperty","handleShow","size","property","Modal","onHide","Header","Footer","newProp","handleAdd","Locations","message","fetchPage","newLocation","Specialties","newSpecialty","ClinicEditModal","setAddress","setName","setLocation","getAction","action","hideModal","handleEdit","getClinic","getClinicPrepaid","getAllClinicPrepaid","addClinicPrepaid","prepaidId","editClinic","deleteClinic","deleteClinicPrepaid","Clinics","setClinics","editableClinic","setEditableClinic","setEditIndex","setAction","fetchClinics","ClinicCalls","fetchLocation","newClinic","editedClinic","index","Prepaids","deletePrepaids","newPrepaid","SignUp","setEmail","setPassword","setRepeatPassword","setDocument","setPrepaidNumber","firstNameErrors","setFirstNameErrors","lastNameErrors","setLastNameErrors","emailErrors","setEmailErrors","prepaidNumberErrors","setPrepaidNumberErrors","passwordErrors","setPasswordErrors","repeatPasswordErrors","setRepeatPasswordErrors","documentErrors","setDocumentErrors","invalidForm","setInvalidForm","isPresent","is","handleSignUp","e","preventDefault","xRole","test","onSubmit","type","disabled","ClinicPrepaidAddModal","setNewPrepaid","allPrepaids","filter","includes","ClinicPrepaids","useParams","prepaidClinics","setPrepaidClinics","allPrepaidClinics","setAllPrepaidClinics","setAllPrepaids","setClinic","fetchAllClinicPrepaids","fetchClinicPrepaids","fetchClinic","DoctorAddModal","setLicense","setPhoneNumber","Doctors","fetchDoctors","newDoctor","deleteDoctors","Login","handleLogin","bind","onChangeEmail","onChangePassword","state","this","setState","form","validateAll","checkBtn","context","_errors","resMessage","toString","ref","c","htmlFor","validations","display","Component","WrappedLogin","EditDocProfileModal","setNewPassword","handleClick","ImageSelectModal","selectedImage","setSelectedImage","files","formData","FormData","handleUpload","onUploadImage","uploadImage","img","getImage","deleteImage","DoctorHome","setDoctor","setImage","fetchDoctor","fetchImage","undefined","ImageCalls","handleUnauth","handleDeleteImage","handleDeleteProfile","DoctorClinicAddModal","selectedClinic","setSelectedClinic","setPrice","Number","allClinics","clinicName","selected","EditPriceModal","newPrice","setNewPrice","DoctorClinics","setAllClinics","allDoctorClinics","setAllDoctorClinics","clinicPath","handleDCResponse","docClinic","dc","fetchDoctorsClinics","fetchAllDoctorClinics","fetchAllClinics","newDocClinic","handleErrors","handleEditPrice","handleDelete","String","getWeekDate","weekDate","getMonth","monthInt","dateToString","app","dayOfWeek","month","year","ModifyScheduleModal","setDay","setHour","available","setAvailable","getAllSchedules","availableList","j","parseDays","dayString","selectedDay","s","selectedHour","DoctorClinicSchedule","setSchedule","cachedClinic","fetchEntity","fetchSchedule","list","sch","sched","getRow","row","rowSchedule","days","scheduleDay","Table","hours","getAllRows","getAvailableAppointments","makeAppointment","getAppointment","deleteAppointment","getFavoriteDoctors","deleteFavoriteDoctor","isFavorite","addFavoriteDoctor","getProfile","updateProfile","UserDoctorProfile","selectedDateTime","setSelectedDateTime","setIsFavorite","fetchAvailableAppointments","AppointmentCalls","apps","fetchIsFavorite","isUser","PatientCalls","handleMakeApp","time","makeFavorite","deleteFavorite","getDateTimes","appointment","alignSelf","date","dateFormated","Favorites","isLoading","setIsLoading","fetchFavorites","removeFromFavorites","EditUserProfileModal","handleProfileUpdate","handleOk","Profile","setId","setAppointments","cachedDoctor","fetchProfile","fetchAppointments","handleProfileUpdateOk","justifyItems","Appointments","cachedPatient","cachedDoctors","handleResponse","user","fetchAuthEntity","ap","App","AdminRoute","children","DoctorRoute","UserRoute","handleLogout","apiCalls","handleRoleLogin","exact","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.28075bdb.chunk.js","sourcesContent":["import {Dropdown} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport './DropDownList.css'\n\nfunction DropDownList(props) {\n\n    const [selectedElement, setSelectedElement] = useState(props.selectedElement)\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle  id={props.id} variant=\"secondary\">\n                {props.elementType}\n            </Dropdown.Toggle>\n            <Dropdown.Menu variant=\"dark\" className=\"dropdown-list\">\n                {props.iterable.map(element => {\n                    if(element === selectedElement) {\n                        return <Dropdown.Item\n                            eventKey={element} active\n                            onClick={() => {props.handleSelect(element)}}>\n                            {element}\n                        </Dropdown.Item>\n                    } else {\n                        return <Dropdown.Item eventKey={element}\n                                              onClick={() => {props.handleSelect(element)}}>\n                            {element}\n                        </Dropdown.Item>\n                    }\n                })}\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport default DropDownList","export const WEB_CONTEXT = \"paw-2019b-4\"\n// export const BASE_URL = \"http://pawserver.it.itba.edu.ar/\" + WEB_CONTEXT + \"/api\"\nexport const BASE_URL = \"http://localhost:8080/\" + WEB_CONTEXT + \"/api\"","import axios from 'axios';\nimport { create } from 'apisauce';\nimport applyCaseMiddleware from 'axios-case-converter';\nimport {BASE_URL} from \"../Constants\";\n\nconst options = {\n    preservedKeys: ['firstName', 'lastName', 'repeatPassword', 'newPassword',\n        'phoneNumber', 'X-AUTH-TOKEN', 'consultPrice', 'profileImage', 'prepaidNumber']\n}\nconst api = applyCaseMiddleware(axios.create({\n    baseURL: BASE_URL\n}), options);\n\napi.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['X-AUTH-TOKEN'] = token\n        }\n        return config;\n    },\n    error => {\n        Promise.reject(error);\n    });\n\nexport default create({ axiosInstance: api });","export const PAGE_QUERY = 'page=';\nexport const USER_QUERY = 'user='\nexport const PRICE_QUERY = 'price='\nexport const HOUR_QUERY = 'hour='\nexport const DAY_QUERY = 'day='\nexport const LICENSE_QUERY = 'license='\nexport const CLINIC_QUERY = 'clinic='\nexport const YEAR_QUERY = 'year='\nexport const MONTH_QUERY = 'month='\nexport const TIME_QUERY = 'time='\n\nexport const PATIENT_PATH = '/patients';\nexport const FAVORITE_PATH = '/favorites'\nexport const LOGIN_PATH = '/login';\nexport const PREPAID_PATH = '/prepaid';\nexport const LOCATIONS_PATH = '/locations';\nexport const SPECIALTIES_PATH = '/specialties';\nexport const DOCTORS_PATH = '/doctors';\nexport const CLINICS_PATH = '/clinics';\nexport const ALL_PATH = '/all';\nexport const EMAIL_PATH = '/email';\nexport const IMAGE_PATH = '/image';\nexport const APPOINTMENT_PATH = '/appointments';\n","import api from \"./index\";\nimport * as cons from './Constants.js'\n\n// Location Endpoints\nconst getLocations = async (pag) => api.get(cons.LOCATIONS_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst getAllLocations = async () => api.get(cons.LOCATIONS_PATH + cons.ALL_PATH)\nconst addLocation = async (data) => api.post(\n    cons.LOCATIONS_PATH,\n    data,\n    {}\n);\nconst deleteLocation = async (name) => api.delete(\n    cons.LOCATIONS_PATH + \"/\" + name,\n    {},\n    {})\nconst getLocation = async (name) => api.get(cons.LOCATIONS_PATH + \"/\" + name);\nexport default {\n    getLocations,\n    getAllLocations,\n    addLocation,\n    deleteLocation,\n    getLocation\n}","import api from \"./index\";\nimport * as cons from './Constants.js'\n\n// Specialties calls\nconst getSpecialties = async (pag) => api.get(cons.SPECIALTIES_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst getAllSpecialties = async () => api.get(cons.SPECIALTIES_PATH + cons.ALL_PATH);\nconst addSpecialty = async (data) => api.post(\n    cons.SPECIALTIES_PATH,\n    data,\n    {}\n);\n\nconst deleteSpecialty = async (name) => api.delete(cons.SPECIALTIES_PATH + \"/\" + name,\n    {},\n    {})\n\nexport default {\n    getSpecialties,\n    getAllSpecialties,\n    addSpecialty,\n    deleteSpecialty\n}\n","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst getAllPrepaid = async () => api.get(cons.PREPAID_PATH + cons.ALL_PATH)\nconst getPrepaid = async (pag) => api.get(cons.PREPAID_PATH + \"?\" + cons.PAGE_QUERY + pag)\nconst deletePrepaid = async (name) => api.delete(\n    cons.PREPAID_PATH + \"/\" + name,\n    {},\n    {})\nconst addPrepaid = async (data) => api.post(\n    cons.PREPAID_PATH,\n    data,\n    {}\n);\n\nexport default {\n    getAllPrepaid,\n    getPrepaid,\n    deletePrepaid,\n    addPrepaid\n}\n\n","export const CURRENT = 'current';\nexport const NEXT = 'next';\nexport const PREV = 'previous';\nexport const FIRST = 'first';\n","import React, {useEffect, useState} from 'react';\nimport {Form, FormControl, FormGroup, InputGroup, Button} from \"react-bootstrap\";\nimport DropDownList from \"./DropDownList\";\nimport LocationCalls from \"../api/LocationCalls\";\nimport SpecialtyCalls from \"../api/SpecialtyCalls\";\nimport PrepaidCalls from \"../api/PrepaidCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport {FIRST} from \"./Pages/Constants\";\nimport './SearchBar.css';\n\nfunction SearchBar(props) {\n    const {t} = useTranslation()\n    const [selectedSpecialty, setSelectedSpecialty] = useState(props.specialty === \"null\"? '-': props.specialty)\n    const [selectedLocation, setSelectedLocation] = useState(props.location === \"null\"? '-': props.location)\n    const [selectedPrepaid, setSelectedPrepaid] = useState(props.prepaid === \"null\"? '-': props.prepaid)\n    const [firstName, setFirstName] = useState(props.firstName === \"null\"? '': props.firstName)\n    const [lastName, setLastName] = useState(props.lastName === \"null\"? '': props.lastName)\n    const [consultPrice, setConsultPrice] = useState(props.consultPrice === \"null\" || props.consultPrice  === \"0\"?\n        '': props.consultPrice)\n    const [locations, setLocations] = useState([])\n    const [specialties, setSpecialties] = useState([])\n    const [prepaids, setPrepaids] = useState([])\n\n\n    const fetchLocations = async () => {\n        const response = await LocationCalls.getAllLocations();\n        if (response && response.ok) {\n            const data = response.data\n            data.push({name: '-'})\n            setLocations(data);\n\n        }\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getAllSpecialties();\n        if (response && response.ok) {\n            const data = response.data\n            data.push({name: '-'})\n            setSpecialties(data);\n        }\n\n    }\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaid();\n        if (response && response.ok) {\n            const data = response.data\n            data.push({name: '-'})\n            setPrepaids(data);\n        }\n    }\n\n    useEffect(async () => {\n        await fetchPrepaids();\n        await fetchLocations();\n        await fetchSpecialties();\n    }, [])\n\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                break;\n            case \"consultPrice\":\n                setConsultPrice(event.target.value)\n                break;\n        }\n    }\n\n    const handleSelectSpecialty = (specialty) => {\n        setSelectedSpecialty(specialty)\n    }\n\n    const handleSelectLocation = (location) => {\n        setSelectedLocation(location)\n    }\n\n    const handleSelectPrepaid = (prepaid) => {\n        setSelectedPrepaid(prepaid)\n    }\n\n    const handleClear = () => {\n        setSelectedLocation('-')\n        setSelectedSpecialty('-')\n        setSelectedPrepaid('-')\n        setLastName('')\n        setFirstName('')\n        setConsultPrice('')\n        props.handleSearch({\n                firstName: null,\n                lastName: null,\n                location: null,\n                specialty: null,\n                prepaid: null,\n                consultPrice: null\n            }, FIRST\n        )\n    }\n\n\n    return (\n        <>\n            <div className=\"w3-sidebar w3-bar-block\" style={{width: '100%'}}>\n                <Form>\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"location\">\n                                    <Form.Label>{t(\"FORM.location\")} {selectedLocation}</Form.Label>\n                                    <DropDownList iterable={locations.map(loc => loc.name)}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelectLocation}\n                                                  elementType={t(\"FORM.selectLocation\")}\n                                                  id='location'/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"specialty\">\n                                    <Form.Label>{t(\"FORM.specialty\")} {selectedSpecialty}</Form.Label>\n                                    <DropDownList iterable={specialties.map(spe => spe.name)}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelectSpecialty}\n                                                  elementType={t(\"FORM.selectSpecialty\")}\n                                                  id='specialty'/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"prepaid\">\n                                    <Form.Label>{t(\"ADMIN.prepaid\")}: {selectedPrepaid}</Form.Label>\n                                    <DropDownList iterable={prepaids.map(pre => pre.name)}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelectPrepaid}\n                                                  elementType={t(\"FORM.selectPrepaid\")}\n                                                  id='prepaid'/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"firstName\">\n                                    <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                                    <Form.Control placeholder=\"Enter first name\" value={firstName}\n                                                  onChange={onChange}/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                                    <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                                    <Form.Control placeholder=\"Enter last name\" value={lastName}\n                                                  onChange={onChange}/>\n                                </Form.Group>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup controlId=\"consultPrice\">\n                            <Form.Label>{t(\"FORM.maxPrice\")}</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>$</InputGroup.Text>\n                                <FormControl aria-label=\"Amount (to the nearest dollar)\" value={consultPrice}\n                                             onChange={onChange}/>\n                                <InputGroup.Text>.00</InputGroup.Text>\n                            </InputGroup>\n                        </FormGroup>\n                    </div>\n                    <div className=\"list-group-item list-group-item-action button-div\">\n                        <Button className=\"doc-button-color\" onClick={() => props.handleSearch({\n                                firstName: firstName,\n                                lastName: lastName,\n                                location: selectedLocation === '-'? null : selectedLocation,\n                                specialty: selectedSpecialty === '-'? null : selectedSpecialty,\n                                prepaid: selectedPrepaid === '-'? null : selectedPrepaid,\n                                consultPrice: consultPrice\n                            }, FIRST\n                        )}>\n                            Search\n                        </Button>\n                        <Button className=\"doc-button-color\" onClick={() => handleClear()}>\n                            Clear\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </>\n    )\n}\n\nexport default SearchBar","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst getDoctorsAdmin = async (pag) => api.get(\n    cons.DOCTORS_PATH + cons.ALL_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst searchDocs = async (pag, params) => api.get(cons.DOCTORS_PATH + \"?\" + cons.PAGE_QUERY + pag + params)\nconst addDoctor = async (data) => api.post(\n    cons.DOCTORS_PATH,\n    data,\n    {}\n);\nconst deleteDoctor = async (license) => api.delete(\n    cons.DOCTORS_PATH + '/' + license,\n    {},\n    {})\nconst editDoctor = async (license, data) => api.put(\n    cons.DOCTORS_PATH + \"/\" + license,\n    data,\n    {}\n    )\n\nconst getClinics = async (license, pag) =>\n    api.get (cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"?\" + cons.PAGE_QUERY + pag)\nconst getAllClinics = async (license) =>\n    api.get (cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + cons.ALL_PATH)\nconst getDocByEmail = async (email) => api.get (cons.DOCTORS_PATH + cons.EMAIL_PATH + \"/\" + email)\nconst getDocByLicense = async (license) => api.get(cons.DOCTORS_PATH + \"/\" + license)\nconst addDoctorToClinic = async (data, license) => api.post(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst deleteDoctorsClinic = async (license, clinic) => api.delete(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinic,\n    {},\n    {}\n)\nconst editPrice = async (license, clinicId, price) => api.put(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinicId + \"?\" + cons.PRICE_QUERY + price,\n    {},\n    {}\n)\nconst getSchedule = async (license) => api.get(\n    cons.DOCTORS_PATH + \"/\" + license + \"/schedules\")\nconst addSchedule = async (license, clinicId, day, hour) => api.post(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinicId + \"/schedules\",\n    {\n        day: day,\n        hour: hour\n    },\n    {}\n)\nconst deleteSchedule = async (license, clinicId, day, hour) => api.delete(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinicId + \"/schedules\"\n    + \"?\" + cons.DAY_QUERY + day + \"&\" + cons.HOUR_QUERY + hour,\n    {},\n    {}\n)\n\n\nexport default {\n    getDoctorsAdmin,\n    searchDocs,\n    addDoctor,\n    deleteDoctor,\n    editDoctor,\n    getClinics,\n    getAllClinics,\n    getDocByEmail,\n    getDocByLicense,\n    addDoctorToClinic,\n    deleteDoctorsClinic,\n    editPrice,\n    getSchedule,\n    addSchedule,\n    deleteSchedule,\n}","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst login = async (email, password) => {\n    localStorage.setItem('email', email)\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('password', password);\n    return api.post(cons.LOGIN_PATH, params)\n        .then(resp => {\n            if(resp.status === 200) {\n                localStorage.setItem('token', resp.headers.xAuthToken)\n            }\n\n            return resp\n        })\n}\n\nconst signUp = async (data) => {\n    return api.post(cons.PATIENT_PATH, data)\n}\n\nconst logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email')\n    localStorage.removeItem('license')\n    localStorage.removeItem('firstName')\n    localStorage.removeItem('lastName')\n    localStorage.removeItem('specialty')\n    localStorage.removeItem('phone')\n    localStorage.removeItem('role')\n    localStorage.removeItem('pathCurrent')\n}\n\nconst makeGetCall = async (path) => api.get(path);\n\nexport default {\n    login,\n    signUp,\n    logout,\n    makeGetCall\n}","import {CURRENT, NEXT, PREV} from \"../Components/Pages/Constants\";\nimport ApiCalls from \"../api/apiCalls\";\n\nexport const getPaths = (linkHeader) => {\n    if (linkHeader === \"\") return {}\n    const links = linkHeader.split(',')\n    let paths = {}\n    for (let i = 0; i < links.length; i+=1) {\n        let link = links[i];\n        let a = link.split(';');\n        let path = a[0].slice(1, -1);\n        let rel = a[1].slice(4);\n        paths[rel] = path;\n    }\n    return paths;\n}\n","import React, {useEffect, useState} from 'react';\nimport SearchBar from \"../SearchBar\";\nimport {Button, Card, Col, Container, Row} from \"react-bootstrap\";\nimport {Link, useSearchParams} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport './home.css'\nimport {useTranslation} from \"react-i18next\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport {CURRENT, FIRST, NEXT, PREV} from \"./Constants\";\nimport ApiCalls from \"../../api/apiCalls\";\n\n\nfunction Home(props) {\n    const [searchParams, setSearchParams] = useSearchParams()\n    const [doctors, setDoctors] = useState([])\n    const [message, setMessage] = useState(\"\")\n    const [searchCriteria, setSearchCriteria] = useState(null)\n    const [paths, setPaths] = useState({})\n    const [loading, setLoading] = useState(false)\n    const {t} = useTranslation()\n\n    const setPages = (linkHeader) => {\n        const paths1 = getPaths(linkHeader);\n        localStorage.setItem('pathCurrent', paths1[CURRENT])\n        setPaths(paths1)\n    }\n\n    const fetchAllDoctorsWithAvailability = async (queryParams) => {\n        setLoading(true)\n        const response = await DoctorCalls.searchDocs(0, queryParams)\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setPages(response.headers.link)\n            setMessage(\"\")\n        }\n        setLoading(false)\n    }\n\n    const handleSearchParams = (criteria) => {\n        let queryParams = \"&\";\n        queryParams += criteria.location === null?\n            \"\": \"location=\" + criteria.location + \"&\";\n        queryParams += criteria.specialty === null?\n            \"\": \"specialty=\" + criteria.specialty + \"&\";\n        queryParams += criteria.firstName === null || criteria.firstName  === \"\"?\n            \"\": \"firstName=\" + criteria.firstName + \"&\";\n        queryParams += criteria.lastName  === null || criteria.lastName === \"\"?\n            \"\": \"lastName=\" + criteria.lastName + \"&\";\n        queryParams += criteria.consultPrice === null || criteria.consultPrice === 0 || criteria.consultPrice === \"\"?\n            \"\": \"consultPrice=\" + criteria.consultPrice + \"&\";\n        queryParams += criteria.prepaid === null?\n            \"\": \"prepaid=\" + criteria.consultPrice + \"&\";\n\n        return queryParams.slice(0,-1)\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            const search = {\n                location: searchParams.get('location') === \"null\" ? null : searchParams.get('location'),\n                specialty: searchParams.get('specialty') === \"null\" ? null : searchParams.get('specialty'),\n                firstName: searchParams.get('firstName') === \"null\" ? null : searchParams.get('firstName'),\n                lastName: searchParams.get('lastName') === \"null\" ? null : searchParams.get('lastName'),\n                consultPrice: searchParams.get('consultPrice') === \"null\" || searchParams.get('consultPrice') === \"0\" ?\n                    null : searchParams.get('consultPrice'),\n                prepaid: searchParams.get('prepaid') === \"null\" ? null : searchParams.get('prepaid')\n\n            }\n            await handleSearch(search, CURRENT);\n\n            setSearchParams({\n                'location': searchParams.get('location') === \"null\"? null: searchParams.get('location'),\n                'specialty': searchParams.get('specialty') === \"null\"? null: searchParams.get('specialty'),\n                'firstName': searchParams.get('firstName') === \"null\"? null: searchParams.get('firstName'),\n                'lastName': searchParams.get('lastName') === \"null\"? null: searchParams.get('lastName'),\n                'consultPrice': searchParams.get('consultPrice') === \"null\" || searchParams.get('consultPrice') === \"0\"?\n                    null: searchParams.get('consultPrice'),\n                'prepaid': searchParams.get('prepaid') === \"null\"? null: searchParams.get('prepaid')\n            })\n        }\n        fetchData();\n\n    }, [])\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await handleSearch(searchCriteria, NEXT)\n\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await handleSearch(searchCriteria, PREV)\n    }\n\n    const renderPrevButton = () => {\n\n        if (paths[PREV]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    const handleSearch = async (criteria, page) => {\n\n        setLoading(true)\n        setSearchCriteria(criteria);\n        setSearchParams({\n            'location':criteria.location,\n            'specialty': criteria.specialty,\n            'firstName': criteria.firstName,\n            'lastName': criteria.lastName,\n            'consultPrice': criteria.consultPrice,\n            'prepaid':criteria.prepaid\n        })\n        const queryParams = handleSearchParams(criteria);\n\n        if (page === FIRST) {\n            await fetchAllDoctorsWithAvailability(queryParams);\n            return;\n        }\n        let path = paths[page];\n\n        if (!path) {\n            path = localStorage.getItem('pathCurrent')\n            if (!path) {\n                await fetchAllDoctorsWithAvailability(queryParams);\n                return;\n            }\n        }\n\n        const response = await ApiCalls.makeGetCall(path + queryParams)\n\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setPages(response.headers.link)\n            setMessage(\"\")\n        }\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Row>\n                <Col>\n                    <SearchBar handleSearch={handleSearch}\n                               location={searchParams.get('location')}\n                               specialty={searchParams.get('specialty')}\n                               firstName={searchParams.get('firstName')}\n                               lastName={searchParams.get('lastName')}\n                               prepaid={searchParams.get('prepaid')}\n                               consultPrice={searchParams.get('consultPrice')}\n                    />\n                </Col>\n                <Col xs={9}>\n                    <Container>\n                        <div className=\"admin-info-container search-doctor-container\">\n                            {doctors.map((doctor) => {\n                                return (\n                                    <Card className=\"mb-3 doc-card shadow\"\n                                          style={{color: \"#000\", width: '20rem', height: '8rem'}}\n                                          key={doctor.license}>\n                                        <Card.Body className=\"card-body-doc\">\n                                            <Card.Title>{doctor.firstName + ' ' + doctor.lastName}</Card.Title>\n                                            <Card.Text>\n                                                {doctor.specialty}\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <Link className=\"doc-button-color btn m-1\"\n                                              role=\"button\"\n                                              to={doctor.license + '/profile'}>{t(\"USER.seeProfile\")}\n                                        </Link>\n                                    </Card>\n                                )\n                            })}\n                        </div>\n                    </Container>\n                    <div>\n                        {renderPrevButton()}\n                        {renderNextButton()}\n                    </div>\n                    {loading && (\n                        <span className=\"spinner-border mt-3\" style={{marginRight:\"1rem\"}}/>\n                    )}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Home","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport {TRANSLATION_ES} from \"./translations-es\";\nimport {TRANSLATION_EN} from \"./translations-en\";\n\ni18n\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        resources: {\n            en: {\n                translation: TRANSLATION_EN\n            },\n            es: {\n                translation: TRANSLATION_ES\n            }\n        }\n    });\n\nconst changeLanguage = async (lang) => {\n    await i18n.changeLanguage(lang);\n}","export const TRANSLATION_EN = {\n    NAVBAR : {\n        favourites: \"Favorites\",\n        appointments: \"Appointments\",\n        profile: \"Profile\",\n        logout: \"Logout\",\n        login: \"Login\",\n        signUp: \"SignUp\",\n        clinics: \"Clinics\"\n    },\n    USER: {\n        seeProfile: \"See Profile\",\n        profile: \"Personal information\",\n        dataProfile: \"Doctor's Information\",\n        emptyFavorites: \"No favorite doctors yet\",\n        noApp: \"No appointments yet\",\n        fav: \"Favorites\",\n        doc: \"Doctor: \",\n        clinic: \"Clinic: \",\n        patient: \"Patient: \"\n    },\n    ADMIN: {\n        doctors: \"Doctors\",\n        seeDocs: \"See doctors\",\n        clinics: \"Clinics\",\n        seeClinics: \"See clinics\",\n        locations: \"Locations\",\n        seeLocations: \"See locations\",\n        specialties: \"Specialties\",\n        seeSpecialties: \"See specialties\",\n        prepaids: \"Prepaids\",\n        seePrepaids: \"See prepaids\",\n        location: \"Location\",\n        specialty: \"Specialty\",\n        prepaid: \"Prepaid\"\n    },\n    DOC: {\n        license: \"License\",\n        addDoc: \"Add doctor\",\n        price: \"Price\",\n        subscribeClinic: \"Subscribe to Clinic\",\n        editPrice: \"Edit Price\",\n        image: \"Image\"\n    },\n    CLINIC: {\n        addClinic: \"Add Clinic\",\n        clinic: \"Clinic\",\n        addPrepaid: \"Add Prepaid to Clinic\",\n        edit: \"Edit Profile\"\n    },\n    FORM: {\n        firstName: \"First Name\",\n        enterFirstName: \"Enter first name\",\n        lastName: \"Last Name\",\n        enterLastName: \"Enter last name\",\n        document: \"Document\",\n        enterDocument: \"Enter document\",\n        specialty: \"Specialty: \",\n        selectSpecialty: \"Select specialty\",\n        enterLicense: \"Enter license\",\n        phoneNumber: \"Phone Number\",\n        enterPhone: \"Enter phone number\",\n        email: \"Email\",\n        enterEmail: \"Enter email\",\n        password: \"Password\",\n        enterPassword: \"Enter Password\",\n        repeatPassword: \"Repeat Password\",\n        newPassword: \"New password\",\n        prepaid: \"Prepaid\",\n        prepaidNumber: \"Prepaid number\",\n        enterPrepaidNumber: \"enter prepaid number\",\n        name: \"Name\",\n        enterName: \"Enter name\",\n        address: \"Address\",\n        enterAddress: \"Enter address\",\n        location: \"Location: \",\n        selectLocation: \"Select location\",\n        selectPrepaid: \"Select prepaid\",\n        selectClinic: \"Select clinic\",\n        enterPrice: \"Enter price\",\n        day: \"Day: \",\n        hour: \"Hour: \",\n        schedule: \"Schedule\",\n        daySelect: \"Select day\",\n        hourSelect: \"Select hour\",\n        none: \"None\",\n        signUp: \"Sign up\",\n        maxPrice: \"Maximum Consult Price\",\n        dateTime: \"Date and Time\",\n        selectDateTime: \"Select date and time\",\n        id: \"Id\"\n    },\n    errors: {\n        licenseInUse: \"Licence already registered\",\n        emailInUse: \"Email already registered\",\n        specialtyNotFound: \"Specialty chosen does not exist\",\n        passwordMismatch: \"Passwords where mismatched\",\n        doctorNotFound: \"No doctor found to delete\",\n        locationNotFound: \"Location chosen does not exist\",\n        clinicExists: \"Clinic already exists\",\n        clinicNotFoundEdit: \"No clinic found to edit\",\n        clinicNotFoundDelete: \"No clinic found to delete\",\n        locationNotFoundDelete: \"No location found to delete\",\n        clinicDependency: \"Could not delete location: One or more clinics are still in this location\",\n        locationExists: \"Location already exists\",\n        specialtyNotFoundDelete: \"No specialty found to delete\",\n        doctorDependency: \"Could not delete specialty: One or more doctors still have this specialty\",\n        specialtyExists: \"Specialty already exists\",\n        prepaidNotFoundDelete: \"No prepaid found to delete\",\n        prepaidExists: \"Prepaid already exists\",\n        clinicNotFound: \"Clinic does not exist\",\n        prepaidNotFound: \"Prepaid chosen does not exist\",\n        clinicPrepaidNotFoundDelete: \"No prepaid in clinic found to delete\",\n        docLoggedNotFound: \"No logged in doctor found\",\n        doctorNotFoundEdit: \"No doctor found to edit\",\n        noLoggedDoc: \"No logged email found, try logging out and logging in again\",\n        noDocEmail: \"No doctor found with logged email\",\n        required: \"is required\",\n        numeric: \"only allows numbers\",\n        passwordTooShort: \"Password is too short\",\n        alphabetic: \"only allows letters\",\n        invalidEmail: \"Not a valid email\",\n        invalidDocumentLength: \"document length must be 8 digits\",\n        prepaidNumberTooLong: \"Prepaid number too long\",\n        docClinicNotFound: \"No doctor in clinic found\",\n        imageBroken: \"Image or image data missing, try uploading the image again\",\n        notSupported: \"Image type not supported. Supported types: JPEG, JPG, PNG\",\n        scheduleExists: \"You already have scheduled this time and hour for this or other clinic\",\n        scheduleNotFoundDelete: \"No schedule found to delete\",\n        scheduleOtherClinicDelete: \"The schedule to delete belongs to another clinic\",\n        selectTime: \"Select clinic, date and time to make an appointment\",\n        datePast: \"Selected date is in the past, select a future date\",\n        outOfSchedule: \"Selected date is out of doctor's schedule\",\n        appointmentExists: \"The selected date already has an appointment, select another date\",\n        doctorAppointment: \"Doctor already has an appointment on that date, select another date\",\n        patientAppointment: \"You already have an appointment on that date, select another date\",\n        noDocFound: \"No doctor found\",\n        noPatientEmail: \"No patient found with logged email\",\n        favExists: \"The doctor is already a favorite\",\n        noAppointmentFound: \"No appointment found\",\n        alreadySubscribed: \"Already subscribed to this clinic\"\n    },\n    actions: {\n        add: \"Add\",\n        edit: \"Edit\",\n        upload: \"Upload\",\n        delete: \"Delete\",\n        makeApp: \"Make Appointment\",\n        cancel: \"Cancel\",\n        update: \"Update\"\n    },\n    CAL : {\n        hour: \"Hour\",\n        mon: \"Monday\",\n        tue: \"Tuesday\",\n        wed: \"Wednesday\",\n        thu: \"Thursday\",\n        fri: \"Friday\",\n        sat: \"Saturday\",\n        sun: \"Sunday\",\n        jan: \"January\",\n        feb: \"February\",\n        mar: \"March\",\n        apr: \"April\",\n        may: \"May\",\n        jun: \"June\",\n        jul: \"July\",\n        aug: \"August\",\n        sep: \"September\",\n        oct: \"October\",\n        nov: \"November\",\n        dec: \"December\"\n    },\n    deleteButton: \"Delete\",\n    prevButton: \"Prev\",\n    nextButton: \"Next\",\n    closeButton: \"Close\",\n    fieldRequired: \"Field Required\",\n    scheduleButton: \"Schedule\",\n    welcome: \"Welcome\",\n    editProfileButton: \"Edit Profile\",\n    changeImgButton: \"Change Image\",\n    deleteImgButton: \"Delete Image\",\n    deleteProfile: \"Delete Account\",\n    cancelButton: \"Cancel\",\n    with: \"with\",\n    nextApp: \"Next Appointments\"\n}","export const TRANSLATION_ES = {\n    NAVBAR : {\n        favourites: \"Favoritos\",\n        appointments: \"Mis Turnos\",\n        profile: \"Perfil\",\n        logout: \"Cerrar Sesión\",\n        login: \"Iniciar Sesión\",\n        signUp: \"Registrarse\",\n        clinics: \"Mis Clínicas\"\n    },\n    USER: {\n        seeProfile: \"Ver Perfil\",\n        emptyFavorites: \"No hay doctores favoritos aún\",\n        profile: \"Informacion personal\",\n        noApp: \"No tienes turnos aún\",\n        dataProfile: \"Información del Doctor\",\n        fav: \"Favoritos\",\n        doc: \"Doctor: \",\n        clinic: \"Clínica: \",\n        patient: \"Paciente: \"\n    },\n    ADMIN: {\n        doctors: \"Doctores\",\n        seeDocs: \"Ver doctores\",\n        clinics: \"Clínicas\",\n        seeClinics: \"Ver clínicas\",\n        locations: \"Localidades\",\n        seeLocations: \"Ver localidades\",\n        specialties: \"Especialidades\",\n        seeSpecialties: \"Ver especialidades\",\n        prepaids: \"Prepagas\",\n        seePrepaids: \"Ver prepagas\",\n        location: \"Localidad\",\n        specialty: \"Especialidad\",\n        prepaid: \"Prepaga\"\n    },\n    DOC: {\n        license: \"Licencia\",\n        addDoc: \"Agregar doctor\",\n        price: \"Precio\",\n        subscribeClinic: \"Suscribirse a Clínica\",\n        editPrice: \"Editar Precio\",\n        image: \"Imagen\"\n    },\n    CLINIC: {\n        addClinic: \"Agregar Clínica\",\n        clinic: \"Clínica\",\n        addPrepaid: \"Agregar Prepaga a Clínica\",\n    },\n    FORM: {\n        firstName: \"Nombre\",\n        enterFirstName: \"Ingrese nombre\",\n        lastName: \"Apellido\",\n        enterLastName: \"Ingrese apellido\",\n        document: \"Documento\",\n        enterDocument: \"Ingrese documento\",\n        specialty: \"Especialidad: \",\n        selectSpecialty: \"Seleccione especialidad\",\n        enterLicense: \"Ingrese licencia\",\n        phoneNumber: \"Número Telefónico\",\n        enterPhone: \"Ingrese número telefónico\",\n        email: \"Email\",\n        enterEmail: \"Ingrese email\",\n        password: \"Contraseña\",\n        newPassword: \"Nueva contraseña\",\n        enterPassword: \"Ingrese Contraseña\",\n        repeatPassword: \"Reingrese Contraseña\",\n        prepaidNumber: \"Numero de prepaga\",\n        enterPrepaidNumber: \"Ingrese numero de prepaga\",\n        name: \"Nombre\",\n        enterName: \"Ingrese nombre\",\n        address: \"Dirección\",\n        enterAddress: \"Ingrese dirección\",\n        location: \"Localidad: \",\n        prepaid: \"Prepaga\",\n        selectLocation: \"Seleccione localidad\",\n        selectPrepaid: \"Seleccione prepaga\",\n        selectClinic: \"Seleccione clínica\",\n        signUp: \"Registrarse\",\n        enterPrice: \"Ingrese precio\",\n        day: \"Día: \",\n        hour: \"Hora: \",\n        schedule: \"Horario\",\n        daySelect: \"Seleccione día\",\n        hourSelect: \"Seleccione hora\",\n        none: \"Ninguna\",\n        maxPrice: \"Máximo Precio de Consulta\",\n        dateTime: \"Día y Hora\",\n        selectDateTime: \"Seleccione día y hora\",\n        update: \"Actualizar\",\n        id: \"DNI\"\n    },\n    actions: {\n        add: \"Agregar\",\n        edit: \"Editar\",\n        upload: \"Subir\",\n        delete: \"Borrar\",\n        makeApp: \"Tomar Turno\",\n        cancel: \"Cancelar\",\n        update: \"Actualizar\"\n    },\n    errors: {\n        licenseInUse: \"Licencia ya registrada\",\n        emailInUse: \"Email ya registrado\",\n        specialtyNotFound: \"La especialidad elegida no existe\",\n        passwordMismatch: \"Las contraseñas no coinciden\",\n        doctorNotFound: \"No se encontró el doctor a eliminar\",\n        locationNotFound: \"La localidad elegida no existe\",\n        clinicExists: \"Clínica ya existe\",\n        clinicNotFoundEdit: \"No se encontró la clínica a editar\",\n        clinicNotFoundDelete: \"No se encontró la clínica a eliminar\",\n        locationNotFoundDelete: \"No se encontró la localidad a eliminar\",\n        clinicDependency: \"No se pudo eliminar localidad: Una o más clínicas se encuentran esta localidad\",\n        locationExists: \"Localidad ya existe\",\n        specialtyNotFoundDelete: \"No se encontró la especialidad a eliminar\",\n        doctorDependency: \"No se pudo eliminar especialidad: Uno o más doctores poseen esta especialidad\",\n        specialtyExists: \"Especialidad ya existe\",\n        prepaidNotFoundDelete: \"No se encontró la prepaga a eliminar\",\n        prepaidExists: \"Prepaga ya existe\",\n        clinicNotFound: \"La clínica no existe\",\n        prepaidNotFound: \"La prepaga elegida no existe\",\n        clinicPrepaidNotFoundDelete: \"No se encontró la prepaga a eliminar en clínica\",\n        docLoggedNotFound: \"No se encontró el doctor en sesión\",\n        doctorNotFoundEdit: \"No se encontró el doctor a editar\",\n        noLoggedDoc: \"No se encontró el email en sesión, intente cerrando sesión y volviendo a entrar\",\n        noDocEmail: \"No se encontró doctor con el email en sesión\",\n        required: \"es obligatorio\",\n        numeric: \"solo puede contener numeros\",\n        passwordTooShort: \"La contraseña es demasiado corta\",\n        alphabetic: \"solo puede contener letras\",\n        invalidEmail: \"email invalido\",\n        invalidDocumentLength: \"El documento debe ser de 8 caracteres\",\n        prepaidNumberTooLong: \"Numero de prepaga demasiado largo\",\n        docClinicNotFound: \"No se encontró doctor en clínica\",\n        imageBroken: \"Faltan datos de la imagen, intente subir la imagen de vuelta\",\n        notSupported: \"Tipo de imagen no soportada. Tipos soportados: JPEG, JPG, PNG\",\n        scheduleExists: \"Usted ya tiene agendado ese horario para esta u otra clínica\",\n        scheduleNotFoundDelete: \"No se encontró el horario a eliminar\",\n        scheduleOtherClinicDelete: \"El horario a eliminar pertenece a otra clínica\",\n        selectTime: \"Seleccione clínica, día y horario para tomar un turno\",\n        datePast: \"La fecha seleccionada es en el pasado, seleccione una fecha futura\",\n        outOfSchedule: \"La fecha seleccionada no pertenece al horario de atención del doctor\",\n        appointmentExists: \"La fecha seleccionada ya posee un turno asignado, seleccione otra fecha\",\n        doctorAppointment: \"El doctor ya posee un turno en la fecha seleccionada, seleccione otra\",\n        patientAppointment: \"Usted ya posee un turno en la fecha seleccionada, seleccione otra\",\n        noDocFound: \"No se encontró el doctor\",\n        noPatientEmail: \"No se encontró paciente con el email en sesión\",\n        favExists: \"El doctor ya es un favorito\",\n        noAppointmentFound: \"No se encontró el turno\",\n        alreadySubscribed: \"Yá está suscripto a esta clínica\"\n    },\n    CAL : {\n        hour: \"Hora\",\n        mon: \"Lunes\",\n        tue: \"Martes\",\n        wed: \"Miércoles\",\n        thu: \"Jueves\",\n        fri: \"Viernes\",\n        sat: \"Sábado\",\n        sun: \"Domingo\",\n        jan: \"Enero\",\n        feb: \"Febrero\",\n        mar: \"Marzo\",\n        apr: \"Abril\",\n        may: \"Mayo\",\n        jun: \"Junio\",\n        jul: \"Julio\",\n        aug: \"Agosto\",\n        sep: \"Septiembre\",\n        oct: \"Octubre\",\n        nov: \"Noviembre\",\n        dec: \"Diciembre\"\n    },\n    deleteButton: \"Eliminar\",\n    prevButton: \"Anterior\",\n    nextButton: \"Siguiente\",\n    closeButton: \"Cerrar\",\n    fieldRequired: \"Campo obligatorio\",\n    scheduleButton: \"Horarios\",\n    welcome: \"Bienvenido/a\",\n    editProfileButton: \"Editar Perfil\",\n    changeImgButton: \"Cambiar Imagen\",\n    deleteImgButton: \"Eliminar Imagen\",\n    deleteProfile: \"Eliminar Cuenta\",\n    cancelButton: \"Cancelar\",\n    with: \"con\",\n    nextApp: \"Próximos turnos\"\n\n}","import React, {useEffect, useState} from 'react';\nimport {Container, Nav, ButtonGroup, Button, Navbar} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PropTypes from 'prop-types';\nimport './NavBar.css'\nimport ApiCalls from \"../api/apiCalls\";\nimport {Link, useLocation, useNavigate} from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../i18n/i18n\";\nimport {changeLanguage} from \"i18next\";\nimport {WEB_CONTEXT} from \"../Constants\";\n\n\nfunction NavBar(props) {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const [items, setItems] = useState([]);\n    const [home, setHome] = useState(\"\")\n    const [loggedIn, setLoggedIn] = useState(false)\n    const { t } = useTranslation();\n\n    const userNavbarItems = [\n        {\n            link: \"/\"  + WEB_CONTEXT + \"/favorites\",\n            text: \"favourites\"\n        },\n        {\n            link: \"/\"  + WEB_CONTEXT + \"/appointments\",\n            text: 'appointments'\n        },\n        {\n            link: \"/\"  + WEB_CONTEXT + \"/profile\",\n            text: 'profile'\n        }\n    ]\n\n    const docNavBarItems = [\n        {\n            link: \"/\"  + WEB_CONTEXT + \"/doctor/clinics\",\n            text: \"clinics\"\n        },\n        {\n            link: \"/\"  + WEB_CONTEXT + \"/doctor/appointments\",\n            text: 'appointments'\n        }\n    ]\n    const getItems = (role) => {\n        if (!props.isAuth()) return [];\n        // eslint-disable-next-line default-case\n        switch (role) {\n            case \"ROLE_ADMIN\":\n                return [];\n            case \"ROLE_DOCTOR\":\n                return docNavBarItems;\n            case \"ROLE_USER\":\n                return userNavbarItems;\n        }\n    }\n\n    useEffect(() => {\n        function checkUserData() {\n            setItems(getItems(props.role))\n            setHome(getRoleHome(props.role))\n            setLoggedIn(props.isAuth())\n        }\n\n        checkUserData();\n        // window.addEventListener('storage', checkUserData)\n        //\n        // return () => {\n        //     window.removeEventListener('storage', checkUserData)\n        // }\n\n    },[props.role])\n\n    const handleLogout = () => {\n        props.setRole(null)\n        ApiCalls.logout()\n        navigate(\"/\"  + WEB_CONTEXT);\n\n    }\n\n    const getRoleHome = (role) => {\n        if (!props.isAuth()) return \"/\"  + WEB_CONTEXT;\n        switch (role) {\n            case \"ROLE_ADMIN\":\n                return \"/\"  + WEB_CONTEXT + \"/admin\";\n            case \"ROLE_DOCTOR\":\n                return \"/\"  + WEB_CONTEXT + \"/doctor\";\n            case \"ROLE_USER\":\n                return \"/\"  + WEB_CONTEXT;\n        }\n    }\n\n    return (\n        <>\n            <Navbar variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"container-fluid nav-bar shadow-sm\">\n                <Container style={{justifyContent: \"flex-start\"}}>\n                    <Navbar.Brand as={Link} to={home}>DoctorSearch</Navbar.Brand>\n                    {items.map((item) => {\n                        return (\n                            <Nav.Item class=\"ml-auto\">\n                                <Nav.Link as={Link} to={item.link} style={{color: \"white\"}}>{t(\"NAVBAR.\" +item.text)}</Nav.Link>\n                            </Nav.Item>\n                        )\n                    })}\n                </Container>\n                <Container style={{justifyContent: \"flex-end\"}}>\n                    {loggedIn ?\n                        <Nav.Item class=\"ml-auto\">\n                            <Nav.Link onClick={() => handleLogout()} style={{color: \"white\"}}>{t('NAVBAR.logout')}</Nav.Link>\n                        </Nav.Item>\n                        :\n                        <Nav.Item  class=\"ml-auto\">\n                            <Nav.Link as={Link} to={\"/\"  + WEB_CONTEXT + \"/signUp\"} style={{color: \"white\"}}>{t('NAVBAR.signUp')}</Nav.Link>\n                        </Nav.Item>}\n                    {loggedIn ?\n                        ''\n                        :\n                        <Nav.Item class=\"ml-auto\">\n                            <Nav.Link as={Link} to={\"/\"  + WEB_CONTEXT + \"/login\"} style={{color: \"white\"}}>{t('NAVBAR.login')}</Nav.Link>\n                        </Nav.Item>}\n                    <ButtonGroup aria-label=\"Basic example\">\n                        <Button className=\"lang-buttons\" onClick={() => changeLanguage('en')}>EN</Button>\n                        <Button className=\"lang-buttons\" onClick={() => changeLanguage('es')}>ES</Button>\n                    </ButtonGroup>\n                </Container>\n            </Navbar>\n        </>\n    )\n\n}\n\nNavBar.propTypes = {\n    items: PropTypes.array.isRequired,\n    test: PropTypes.string.isRequired\n\n}\n\nexport default NavBar","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Card, Col, Row} from \"react-bootstrap\";\nimport \"../../i18n/i18n\";\n\nimport './AdminHome.css';\nimport {useTranslation} from \"react-i18next\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction AdminHome(props) {\n    const { t } = useTranslation();\n\n    return (\n        <>\n            <container>\n                <Row className=\"admin_row\">\n                    <Col>\n                        <Card className=\"admin_card shadow\" style={{marginLeft: '3.5rem', marginRight: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src={\"/\" + WEB_CONTEXT + \"/images/doctor.png\"} />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title style={{verticalAlign: \"bottom\"}}>{t('ADMIN.doctors')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"doctors\">{t('ADMIN.seeDocs')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{marginLeft: '2.5rem', marginRight: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src={\"/\" + WEB_CONTEXT + \"/images/clinic.png\"} />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.clinics')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"clinics\">{t('ADMIN.seeClinics')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{ marginLeft: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src={\"/\" + WEB_CONTEXT + \"/images/location.png\"} />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.locations')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"locations\">{t('ADMIN.seeLocations')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row className=\"admin_row\">\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{marginLeft: '3.5rem', marginRight: '1rem'}}>\n                            <Card.Img className=\"card_img\" variant=\"top\" src={\"/\" + WEB_CONTEXT + \"/images/specialty.png\"} />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.specialties')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"specialties\">{t('ADMIN.seeSpecialties')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{marginLeft: '2.5rem', marginRight: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src={\"/\" + WEB_CONTEXT + \"/images/prepaid.png\"} />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.prepaids')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"prepaids\">{t('ADMIN.seePrepaids')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </container>\n        </>\n    )\n}\n\nexport default AdminHome","import React, {Component, useState} from 'react';\nimport {Button, Modal, Form} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction SinglePropertyAddModal(props) {\n    const [show, setShow] = useState(false);\n    const [newProperty, setNewProperty] = useState('');\n    const { t } = useTranslation();\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const handleAdd = (newProp) => {\n        props.handleAdd(newProp)\n        setNewProperty(\"\")\n        handleShow()\n    }\n\n    const onChange = (event) => {\n        setNewProperty(event.target.value)\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-secondary\" onClick={handleShow} size=\"lg\" className=\"add-margin\">\n                {t(\"actions.add\")} {props.property}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"actions.add\")} {props.property}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"FORM.name\")}</Form.Label>\n                        <Form.Control value={newProperty}\n                                  placeholder={t(\"FORM.enterName\")}\n                                  onChange={onChange}/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleAdd({name: newProperty})}>\n                        {t(\"actions.add\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default SinglePropertyAddModal;","import React, {useEffect, useState} from 'react';\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport SinglePropertyAddModal from \"../Modals/SinglePropertyAddModal\";\nimport LocationCalls from \"../../api/LocationCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction Locations(props){\n    const [locations, setLocations] = useState([])\n    const [paths, setPaths] = useState({})\n    const navigate = useNavigate()\n    const [message, setMessage] = useState(\"\")\n    const { t } = useTranslation();\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchLocations = async () => {\n        const response = await LocationCalls.getLocations(0)\n        if (response && response.ok){\n            setLocations(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n     useEffect( () => {\n         async function fetchData () {\n             await fetchLocations()\n         }\n         fetchData();\n    }, [])\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setLocations(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const deleteLocation = async (name) => {\n        const response = await LocationCalls.deleteLocation(name);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"location-not-found\") {\n                setMessage(\"errors.LocationNotFoundDelete\")\n            }\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        if (response.status === 409) {\n            if (response.data === \"clinics-dependency\") {\n                setMessage(\"errors.clinicDependency\")\n            }\n        }\n    }\n\n    const handleAdd = async (newLocation) => {\n        const response = await LocationCalls.addLocation(newLocation);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        } else if (response.status === 409) {\n            if (response.data === \"location-exists\") {\n                setMessage(\"errors.locationExists\")\n            }\n        }\n    }\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <SinglePropertyAddModal handleAdd={handleAdd} property={t(\"ADMIN.location\")}/>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {locations.map(location => {\n                        return (\n                            <Card className=\"mb-3 shadow\"\n                                  style={{color: \"#000\", width: '20rem', height: '7rem'}} key={location.name}>\n                                <Card.Body>\n                                    <Card.Title>{location.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deleteLocation(location.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Locations","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container, Modal} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport SinglePropertyAddModal from \"../Modals/SinglePropertyAddModal\";\nimport {useNavigate} from \"react-router-dom\";\nimport SpecialtyCalls from \"../../api/SpecialtyCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction Specialties(props){\n    const [specialties, setSpecialties] = useState([])\n    const [paths, setPaths] = useState({})\n    const navigate = useNavigate()\n    const [message, setMessage] = useState(\"\")\n    const { t } = useTranslation();\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getSpecialties(0);\n        if (response && response.ok) {\n            setSpecialties(response.data);\n            setPages(response.headers.link);\n        }\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchSpecialties()\n        }\n        fetchData();\n    }, [])\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setSpecialties(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const deleteSpecialty = async (name) => {\n        const response = await SpecialtyCalls.deleteSpecialty(name);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"specialty-not-found\") {\n                setMessage(\"errors.specialtyNotFoundDelete\")\n            }\n        }\n        if (response.status === 409) {\n            if (response.data === \"doctors-dependency\") {\n                setMessage(\"errors.doctorDependency\")\n            }\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const handleAdd = async (newSpecialty) => {\n        const response = await SpecialtyCalls.addSpecialty(newSpecialty);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        } else if (response.status === 409) {\n            if (response.data === \"specialty-exists\") {\n                setMessage(\"errors.specialtyExists\")\n            }\n        }\n    }\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                    onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <SinglePropertyAddModal handleAdd={handleAdd} property={t(\"ADMIN.specialty\")}/>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {specialties.map(specialty => {\n                        return (\n                            <Card className=\"mb-3 shadow\" style={{color: \"#000\", width: '20rem', height: '7rem'}}\n                                  key={specialty.name}>\n                                <Card.Body>\n                                    <Card.Title>{specialty.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deleteSpecialty(specialty.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n\n}\n\nexport default Specialties","import React, {Component, useState} from 'react';\nimport {Button, Modal, Form, Dropdown} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction ClinicEditModal(props) {\n    const [id, setId] = useState(props.clinic.id);\n    const [address, setAddress] = useState(props.clinic.address);\n    const [name, setName] = useState(props.clinic.name);\n    const [location, setLocation] = useState(props.clinic.location);\n    const { t } = useTranslation();\n\n\n    const onChange = (event) => {\n        switch(event.target.id) {\n            case \"name\":\n                setName(event.target.value);\n                break;\n            case \"address\":\n                setAddress(event.target.value);\n                break;\n            case \"location\":\n                setLocation(event.target.value);\n                break;\n        }\n    }\n\n    const handleSelect = (location) => {\n        setLocation(location)\n    }\n\n    const handleClick = () => {\n        if (props.action === \"add\") {\n            props.handleAdd(\n                {\n                    id: id,\n                    name: name,\n                    address: address,\n                    location: location\n                })\n        } else {\n            props.handleEdit(\n                {\n                    id: id,\n                    name: name,\n                    address: address,\n                    location: location\n                })\n        }\n    }\n\n    const getAction = () => {\n        if (props.action === \"add\")\n            return \"actions.add\"\n        else\n            return \"actions.edit\"\n    }\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.hideModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(getAction())} {t(\"CLINIC.clinic\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\n                            <Form.Label>{t(\"FORM.name\")}</Form.Label>\n                            <Form.Control value={name}\n                                          placeholder={t(\"FORM.enterName\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"address\">\n                            <Form.Label>{t(\"FORM.address\")}</Form.Label>\n                            <Form.Control value={address}\n                                          placeholder={t(\"FORM.enterAddress\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"location\">\n                            <Form.Label>{t(\"FORM.location\")} {location}</Form.Label>\n                            <DropDownList iterable={props.locations}\n                                          selectedElement={location}\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectLocation\")}\n                                          id='location'/>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.hideModal}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={handleClick} >\n                        {t(getAction())}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\n\nexport default ClinicEditModal;","import api from \"./index\";\nimport * as cons from './Constants.js'\nimport {PREPAID_PATH} from \"./Constants.js\";\n\n// Clinic calls and clinic prepaids\nconst getClinics = async (pag) => api.get(cons.CLINICS_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst getAllClinics = async () => api.get(cons.CLINICS_PATH  + cons.ALL_PATH);\nconst getClinic = async (id) => api.get(cons.CLINICS_PATH + \"/\" + id)\nconst getClinicPrepaid = async (id, pag) =>\n    api.get(cons.CLINICS_PATH + \"/\" + id + PREPAID_PATH + \"?\" + cons.PAGE_QUERY + pag)\nconst getAllClinicPrepaid = async (id) => api.get(cons.CLINICS_PATH + \"/\" + id + PREPAID_PATH + cons.ALL_PATH )\nconst addClinic = async (data) => api.post(\n    cons.CLINICS_PATH,\n    data,\n    {}\n)\n\nconst addClinicPrepaid = async (clinicId, prepaidId) => api.put(\n    cons.CLINICS_PATH + \"/\" + clinicId + PREPAID_PATH + '/' + prepaidId,\n    {},\n    {}\n)\n\nconst editClinic = async (id, data) => api.put(\n    cons.CLINICS_PATH + \"/\" + id,\n    data,\n    {}\n)\n\nconst deleteClinic = async (id) => api.delete(\n    cons.CLINICS_PATH + \"/\" + id,\n    {},\n    {}\n)\n\nconst deleteClinicPrepaid = async (clinicId, prepaidId) => api.delete(\n    cons.CLINICS_PATH + \"/\" + clinicId + PREPAID_PATH + \"/\" + prepaidId,\n    {},\n    {}\n)\n\nexport default {\n    getClinics,\n    getAllClinics,\n    getClinic,\n    getClinicPrepaid,\n    getAllClinicPrepaid,\n    addClinic,\n    addClinicPrepaid,\n    editClinic,\n    deleteClinic,\n    deleteClinicPrepaid\n}","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport ClinicEditModal from \"../Modals/ClinicEditModal\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport LocationCalls from \"../../api/LocationCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction Clinics(props) {\n\n    const [clinics, setClinics] = useState([])\n    const [show, setShow] = useState(false)\n    const [editableClinic, setEditableClinic] = useState( {id: ' ', name: ' ', address: ' ', location: ' '})\n    const [editIndex, setEditIndex] = useState(-1)\n    const [action, setAction] = useState(\"Add\")\n    const [locations, setLocations] = useState([])\n    const [paths, setPaths] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const navigate = useNavigate()\n    const { t } = useTranslation();\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchClinics = async () => {\n        const response = await ClinicCalls.getClinics(0)\n        if (response && response.ok) {\n            setClinics(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setClinics(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const fetchLocation = async () => {\n        const response = await LocationCalls.getAllLocations()\n        if (response && response.ok) {\n            setLocations(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchClinics()\n            await fetchLocation()\n        }\n        fetchData();\n    }, [])\n\n    const deleteClinic = async (id) => {\n        const response = await ClinicCalls.deleteClinic(id);\n        if (response && response.ok) {\n            await fetchPage(CURRENT);\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\")\n                setMessage(\"errors.clinicNotFoundDelete\")\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n    }\n\n    const handleAdd = async (newClinic) => {\n        const data = {\n            name: newClinic.name,\n            address: newClinic.address,\n            location: newClinic.location\n        }\n        const response = await ClinicCalls.addClinic(data);\n        setShow(false)\n        if (response && response.ok) {\n            await fetchPage(CURRENT);\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"location-not-found\") {\n                setMessage(\"errors.locationNotFound\")\n            }\n        }\n        if (response.status === 409) {\n            if (response.data === \"clinic-exists\") {\n                setMessage(\"errors.clinicsExists\")\n            }\n        }\n    }\n\n    const handleEdit = async (editedClinic) => {\n        const data = {\n            name: editedClinic.name,\n            address: editedClinic.address,\n            location: editedClinic.location\n        }\n        const response = await ClinicCalls.editClinic(editedClinic.id, data)\n        if (response && response.ok) {\n            await fetchPage(CURRENT);\n            setShow(false)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFoundEdit\")\n            }\n        }\n    }\n\n    const handleShow = (index) => {\n        let action\n        let clinic\n        if (index === -1) {\n            action = \"add\"\n            clinic = {id: ' ', name: ' ', address: ' ', location: ' '}\n        } else {\n            action = \"edit\"\n            clinic = clinics[index]\n        }\n\n        setEditableClinic(clinic)\n        setEditIndex(index)\n        setShow(true)\n        setAction(action)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <Button variant=\"outline-secondary\"\n                    onClick={() => handleShow(-1)}\n                    size=\"lg\"\n                    className=\"add-margin\">\n                {t(\"CLINIC.addClinic\")}\n            </Button>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            {show && <ClinicEditModal show={show}\n                             clinic={editableClinic}\n                             handleAdd={handleAdd}\n                             handleEdit={handleEdit}\n                             action={action}\n                             hideModal={hideModal}\n                             locations={locations.map(location => location.name)}\n            /> }\n            <Container>\n                <div className=\"admin-info-container admin-clinic-container\">\n                    {clinics.map(( clinic, index) => {\n                        return (\n                            <Card className=\"mb-3 shadow\" style={{color: \"#000\", width: '20rem', height: '15rem'}} key={clinic.id}>\n                                <Card.Body>\n                                    <Card.Title>{clinic.name}</Card.Title>\n                                    <Card.Text>\n                                        {clinic.address + ' (' + clinic.location + ')'}\n                                    </Card.Text>\n                                </Card.Body>\n                                <Link className=\"btn btn-outline-dark btn-lg see-prepaid-button shadow-sm\"\n                                      role=\"button\"\n                                      to={\"/\" + WEB_CONTEXT + \"/admin/clinics/\" + clinic.id + \"/prepaids\"}>{t(\"ADMIN.seePrepaids\")}\n                                </Link>\n                                <div className=\"buttons-div\">\n                                    <Button className=\"edit-remove-button remove-button-color shadow-sm\"\n                                            onClick={() => deleteClinic(clinic.id)}>\n                                        {t(\"deleteButton\")}\n                                    </Button>\n                                    <Button className=\"btn edit-remove-button edit-button doc-button-color shadow-sm\"\n                                            onClick={() => handleShow(index)}>\n                                        <i className=\"far fa-edit\"/>\n                                    </Button>\n                                </div>\n\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Clinics","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container, Modal} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport SinglePropertyAddModal from \"../Modals/SinglePropertyAddModal\";\nimport {useNavigate} from \"react-router-dom\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport \"../../i18n/i18n\"\nimport {useTranslation} from \"react-i18next\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\n\nfunction Prepaids(props) {\n    const [prepaids, setPrepaids] = useState([]);\n    const [paths, setPaths] = useState({})\n    const navigate = useNavigate()\n    const [message, setMessage] = useState(\"\")\n    const { t } = useTranslation();\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getPrepaid(0);\n        if (response && response.ok){\n            setPrepaids(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchPrepaids()\n        }\n        fetchData();\n    }, [])\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setPrepaids(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const deletePrepaids = async (name) => {\n        const response = await PrepaidCalls.deletePrepaid(name);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"prepaid-not-found\") {\n                setMessage(\"errors.prepaidNotFoundDelete\")\n            }\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const handleAdd = async (newPrepaid) => {\n        const response = await PrepaidCalls.addPrepaid(newPrepaid)\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        } else if (response.status === 409) {\n            if (response.data === \"prepaid-exists\") {\n                setMessage(\"errors.prepaidExists\")\n            }\n        }\n    }\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <SinglePropertyAddModal handleAdd={handleAdd} property={t(\"ADMIN.prepaid\")}/>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {prepaids.map((prepaid) => {\n                        return (\n                            <Card className=\"mb-3 shadow\"\n                                  style={{color: \"#000\", width: '20rem', height: '7rem'}}\n                                  key={prepaid.name}>\n                                <Card.Body>\n                                    <Card.Title>{prepaid.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deletePrepaids(prepaid.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Prepaids","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\nimport '../../i18n/i18n'\nimport ApiCalls from \"../../api/apiCalls\"\nimport {useNavigate} from \"react-router-dom\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction SignUp(props) {\n    const [selectedPrepaid, setSelectedPrepaid] = useState('-')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [document, setDocument] = useState('')\n    const [prepaidNumber, setPrepaidNumber] = useState('')\n    const [prepaids, setPrepaids] = useState([])\n\n    const [message, setMessage] = useState(\"\")\n    const [firstNameErrors, setFirstNameErrors] = useState([])\n    const [lastNameErrors, setLastNameErrors] = useState([])\n    const [emailErrors, setEmailErrors] = useState([])\n    const [prepaidNumberErrors, setPrepaidNumberErrors] = useState([])\n    const [passwordErrors, setPasswordErrors] = useState([])\n    const [repeatPasswordErrors, setRepeatPasswordErrors] = useState([])\n    const [documentErrors, setDocumentErrors] = useState([])\n    const [invalidForm, setInvalidForm] = useState(true)\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    const handleSelect = (prepaid) => {\n        setSelectedPrepaid(prepaid)\n    }\n\n    useEffect(async () => {\n        await fetchPrepaids()\n    }, [])\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaid();\n        if (response && response.ok) {\n            let data = response.data\n            data.push({name: '-'})\n            setPrepaids(data.map(prepaid => prepaid.name))\n        }\n    }\n\n    const isPresent = (value) => {\n        let is = true\n        if(!value) {\n            is = false\n        }\n        return is\n    }\n\n    const checkRequired = (values, errors) => {\n        console.log('first name antes de required: ' + values.firstName)\n        if(!isPresent(values.firstName)) {\n            errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.lastName)) {\n            errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.required\"))\n        }\n        console.log('email antes de required: ' + values.email)\n        if(!isPresent(values.email)) {\n            console.log('entro igual')\n            errors.push(t(\"FORM.email\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.id)) {\n            errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.required\"))\n        }\n        console.log('pass antes de required: ' + values.password)\n        if(!isPresent(values.password)) {\n            console.log('fallo pass')\n            errors.push(t(\"FORM.password\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.repeatPassword)) {\n            errors.push(t(\"FORM.repeatPassword\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.prepaidNumber)) {\n            errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.required\"))\n        }\n    }\n\n    const checkDigits = (values, errors) => {\n        if(!/^\\d+$/.test(values.id)) {\n            errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.numeric\"))\n        }\n        if(!/^\\d+$/.test(values.prepaidNumber)) {\n            errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.numeric\"))\n        }\n    }\n\n    const checkPassword = (values, errors) => {\n        if(values.password !== values.repeatPassword) {\n            errors.push(t(\"errors.passwordMismatch\"))\n        }\n        if(values.password.length < 8) {\n            errors.push(t(\"errors.passwordTooShort\"))\n        }\n    }\n\n    const checkAlpha = (values, errors) => {\n        if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.firstName)) {\n            errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.alphabetic\"))\n        }\n        if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.lastName)) {\n            errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.alphabetic\"))        }\n    }\n\n    const checkEmail = (values, errors) => {\n        if(!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(values.email)) {\n            errors.push(t(\"errors.invalidEmail\"))\n        }\n    }\n\n    const handleSignUp = async (e) => {\n        e.preventDefault();\n        setInvalidForm(true)\n        let data = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            repeatPassword: repeatPassword,\n            id: document,\n            prepaid: selectedPrepaid === '-'? null : selectedPrepaid,\n            prepaidNumber: prepaidNumber\n        }\n\n        const resp = await ApiCalls.signUp(data)\n\n        if (resp.status === 201) {\n            const response = await ApiCalls.login(email, password)\n            if (response && response.ok) {\n                const role = response.headers.xRole\n                props.setRole(role)\n                if (localStorage.getItem(\"path\") !== null) {\n                    navigate(localStorage.getItem(\"path\"));\n                    localStorage.removeItem(\"path\")\n                } else {\n                    navigate(\"/\" + WEB_CONTEXT);\n                }\n            }\n        }\n        if (resp.status === 409) {\n            if (resp.data === \"user-exists\") {\n                setMessage(t(\"errors.emailInUse\"))\n            }\n        }\n        setInvalidForm(false)\n    }\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        let error = false\n        let errors = []\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setFirstNameErrors(errors)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setLastNameErrors(errors)\n                break;\n            case \"document\":\n                setDocument(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(event.target.value.length !== 8) {\n                    errors.push(t(\"errors.invalidDocumentLength\"))\n                    error = true\n                }\n                if(event.target.value.length > 20) {\n                    errors.push(t(\"errors.prepaidNumberTooLong\"))\n                    error = true\n                }\n                if(!/^\\d+$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.numeric\"))\n                    error = true\n                }\n                setDocumentErrors(errors)\n                break;\n            case \"email\":\n                setEmail(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.email\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(event.target.value)) {\n                    errors.push(t(\"errors.invalidEmail\"))\n                    error = true\n                }\n                setEmailErrors(errors)\n                break;\n            case \"password\":\n                setPassword(event.target.value)\n                if(event.target.value !== '' && event.target.value.length < 8) {\n                    errors.push(t(\"errors.passwordTooShort\"))\n                    error = true\n                }\n                if(event.target.value !== '' && repeatPassword !== event.target.value) {\n                    setRepeatPasswordErrors([t(\"errors.passwordMismatch\")])\n                    error = true\n                }\n                setPasswordErrors(errors)\n                break;\n            case \"prepaidNumber\":\n                setPrepaidNumber(event.target.value)\n                if(!/^\\d+$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.numeric\"))\n                    error = true\n                }\n                if(event.target.value.length > 20) {\n                    errors.push(t(\"errors.prepaidNumberTooLong\"))\n                    error = true\n                }\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                setPrepaidNumberErrors(errors)\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value)\n                if(event.target.value !== '' && password !== '' && password !== event.target.value) {\n                    errors.push(t(\"errors.passwordMismatch\"))\n                    error = true\n                }\n                setRepeatPasswordErrors(errors)\n                break;\n        }\n        setInvalidForm(error)\n    }\n\n    return (\n        <div className=\"m-3\">\n            <h3>{t(\"FORM.signUp\")}</h3>\n            <Form onSubmit={handleSignUp}>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"firstName\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.firstName\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterFirstName\")}\n                                          value={firstName}\n                                          onChange={onChange}\n                            />\n                        </Form.Group>\n                        {firstNameErrors.length !== 0 && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    <ul>\n                                        {firstNameErrors.map((error) => {\n                                            return (\n                                                <li>{error}</li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"lastName\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.lastName\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterLastName\")}\n                                          value={lastName}\n                                          onChange={onChange}\n                            />\n                        </Form.Group>\n                        {lastNameErrors.length !== 0 && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    <ul>\n                                        {lastNameErrors.map((error) => {\n                                            return (\n                                                <li>{error}</li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"prepaids\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.prepaid\")}</Form.Label>\n                            <DropDownList iterable={prepaids}\n                                          selectedElement=''\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectPrepaid\")}\n                                          id='prepaids'\n                            />\n                            <Form.Label className=\"label-signup m-3\">{selectedPrepaid}</Form.Label>\n                        </Form.Group>\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"prepaidNumber\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.prepaidNumber\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterPrepaidNumber\")}\n                                          value={prepaidNumber}\n                                          onChange={onChange}\n                            />\n                            {prepaidNumberErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {prepaidNumberErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"document\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.document\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterDocument\")}\n                                          value={document}\n                                          onChange={onChange}\n                            />\n                        </Form.Group>\n                        {documentErrors.length !== 0 && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    <ul>\n                                        {documentErrors.map((error) => {\n                                            return (\n                                                <li>{error}</li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"email\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.email\")}</Form.Label>\n                            <Form.Control type=\"email\"\n                                          placeholder={t(\"FORM.enterEmail\")}\n                                          value={email}\n                                          onChange={onChange}\n                            />\n                            {emailErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {emailErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"password\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.password\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.password\")}\n                                          value={password} onChange={onChange}\n                            />\n                            {passwordErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {passwordErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"repeatPassword\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.repeatPassword\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.repeatPassword\")}\n                                          value={repeatPassword}\n                                          onChange={onChange}\n                            />\n                            {repeatPasswordErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {repeatPasswordErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <br/>\n                <Button type=\"submit\" disabled={invalidForm && selectedPrepaid !== ''} variant=\"secondary\" >\n                    {t(\"FORM.signUp\")}\n                </Button>\n            </Form>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger m-3\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SignUp;","import React, { useState} from 'react';\nimport {Button, Modal, Form} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport '../CardContainer.css'\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\n function ClinicPrepaidAddModal(props) {\n    const [show, setShow] = useState(false);\n    const [newPrepaid, setNewPrepaid] = useState('');\n     const { t } = useTranslation();\n\n    const handleSelect = (prepaid) => {\n        setNewPrepaid(prepaid)\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const handleAdd = async () => {\n        setNewPrepaid(\"\")\n        await props.handleAdd(newPrepaid)\n        handleShow()\n\n    }\n\n    const remainingPrepaids = () => {\n        return props.allPrepaids.filter(prepaid => !props.prepaids.includes(prepaid));\n    }\n\n\n    return (\n        <>\n            <Button variant=\"outline-secondary add-margin\" onClick={handleShow} size=\"lg\">\n                {t(\"CLINIC.addPrepaid\")}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"CLINIC.addPrepaid\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"FORM.name\")}: {newPrepaid}</Form.Label>\n                        <DropDownList iterable={remainingPrepaids()}\n                                      selectedElement=''\n                                      handleSelect={handleSelect}\n                                      elementType={t(\"FORM.selectPrepaid\")}\n                                      id='prepaid'/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={handleAdd}>\n                        {t(\"actions.add\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\n\nexport default ClinicPrepaidAddModal;","import {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport ClinicPrepaidAddModal from \"../Modals/ClinicPrepaidAddModal\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\nimport ApiCalls from \"../../api/apiCalls\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\n\nfunction ClinicPrepaids(props) {\n\n    let {id} = useParams()\n    const [prepaidClinics, setPrepaidClinics] = useState([])\n    const [allPrepaidClinics, setAllPrepaidClinics] = useState([])\n    const [allPrepaids, setAllPrepaids] = useState([])\n    const [clinic, setClinic] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [paths, setPaths] = useState({})\n    const { t } = useTranslation();\n\n    const navigate = useNavigate()\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchAllClinicPrepaids = async () => {\n        const response = await ClinicCalls.getAllClinicPrepaid(id);\n        if (response && response.ok) {\n            setAllPrepaidClinics(response.data)\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n\n    }\n\n    const fetchClinicPrepaids = async () => {\n        const response = await ClinicCalls.getClinicPrepaid(id, 0);\n        if (response && response.ok) {\n            setPrepaidClinics(response.data)\n            setPages(response.headers.link)\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n\n    }\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaid();\n        if (response && response.ok) {\n            setAllPrepaids(response.data)\n        }\n    }\n\n    const fetchClinic = async (id) => {\n        const response = await ClinicCalls.getClinic(id);\n        if (response && response.ok) {\n            setClinic(response.data)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            setMessage(\"errors.clinicNotFound\")\n        }\n    }\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setPrepaidClinics(response.data)\n            setPages(response.headers.link)\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchClinic(id);\n            await fetchClinicPrepaids();\n            await fetchAllClinicPrepaids();\n            await fetchPrepaids();\n        }\n        fetchData();\n    }, [])\n\n    const handleAdd = async (newPrepaid) => {\n        const response = await ClinicCalls.addClinicPrepaid(id, newPrepaid)\n        if (response && response.ok) {\n            await fetchAllClinicPrepaids()\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if(response.status === 401) {\n            props.logout()\n        }\n        if (response.status === 404) {\n            if (response.data === \"prepaid-not-found\") {\n                setMessage(\"errors.prepaidNotFound\")\n            }\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n    }\n\n    const deletePrepaid = async (name) => {\n        const response = await ClinicCalls.deleteClinicPrepaid(id, name)\n        if (response && response.ok) {\n            await fetchAllClinicPrepaids()\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"prepaid-not-found\") {\n                setMessage(\"errors.prepaidNotFound\")\n            }\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n            if (response.data === \"clinic-prepaid-not-found\") {\n                setMessage(\"errors.clinicPrepaidNotFoundDelete\")\n            }\n        }\n        if(response.status === 401) {\n            props.logout()\n        }\n\n    }\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <>\n            <h3 className=\"clinic-prepaid-title\">{t(\"CLINIC.clinic\")} {clinic.name}</h3>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <ClinicPrepaidAddModal\n                handleAdd={handleAdd}\n                prepaids={allPrepaidClinics.map(prepaid => prepaid.name)}\n                allPrepaids={allPrepaids.map(prepaid => prepaid.name)}\n                id={id}\n                navigate={{navigate}}\n            />\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {prepaidClinics.map((prepaidClinics, index) => {\n                        return (\n                            <Card className=\"mb-3 shadow\"\n                                  style={{color: \"#000\", width: '20rem', height: '7rem'}}\n                                  key={prepaidClinics.name}>\n                                <Card.Body>\n                                    <Card.Title>{prepaidClinics.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button-color remove-button shadow-sm\"\n                                        onClick={() => deletePrepaid(prepaidClinics.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </>\n    )\n}\n\nexport default ClinicPrepaids","import React, { useState } from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\n\n\nfunction DoctorAddModal(props) {\n    const [show, setShow] = useState(false)\n    const [selectedSpecialty, setSelectedSpecialty] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [license, setLicense] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const [message, setMessage] = useState('')\n    const { t } = useTranslation();\n\n    const handleSelect = (specialty) => {\n        setSelectedSpecialty(specialty)\n    }\n\n    const handleShow = () =>{\n        setShow(!show)\n    }\n\n    const handleAdd = (doctor) => {\n        if (password !== repeatPassword)\n            setMessage(\"errors.passwordMismatch\")\n        else {\n            setMessage('')\n            setSelectedSpecialty(\"\")\n            props.handleAdd(doctor)\n            handleShow()\n        }\n    }\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                break;\n            case \"license\":\n                setLicense(event.target.value)\n                break;\n            case \"email\":\n                setEmail(event.target.value)\n                break;\n            case \"password\":\n                setPassword(event.target.value)\n                break;\n            case \"phoneNumber\":\n                setPhoneNumber(event.target.value)\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value)\n                break;\n        }\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-secondary\" onClick={() => handleShow()} size=\"lg\" className=\"add-margin\">\n                {t(\"DOC.addDoc\")}\n            </Button>\n            <Modal show={show} onHide={() => handleShow()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"DOC.addDoc\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                                    <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterFirstName\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                                    <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterLastName\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"specialty\">\n                                    <Form.Label>{t(\"FORM.specialty\")} {selectedSpecialty}</Form.Label>\n                                    <DropDownList iterable={props.specialties}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelect}\n                                                  elementType={t(\"FORM.selectSpecialty\")}\n                                                  id='specialty'\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"license\">\n                                    <Form.Label>{t(\"DOC.license\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterLicense\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"phoneNumber\">\n                                    <Form.Label>{t(\"FORM.phoneNumber\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterPhone\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"email\">\n                                    <Form.Label>{t(\"FORM.email\")}</Form.Label>\n                                    <Form.Control type=\"email\" placeholder={t(\"FORM.enterEmail\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"password\">\n                                    <Form.Label>{t(\"FORM.password\")}</Form.Label>\n                                    <Form.Control type=\"password\" placeholder={t(\"FORM.password\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n                                    <Form.Label>{t(\"FORM.repeatPassword\")}</Form.Label>\n                                    <Form.Control type=\"password\" placeholder={t(\"FORM.repeatPassword\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        {message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {t(message)}\n                                </div>\n                            </div>\n                        )}\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => handleShow()}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleAdd({\n                        firstName: firstName,\n                        lastName: lastName,\n                        email: email,\n                        password: password,\n                        repeatPassword: repeatPassword,\n                        license: license,\n                        specialty: selectedSpecialty,\n                        phoneNumber: phoneNumber\n                    })\n                    }>\n                        {t(\"DOC.addDoc\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default DoctorAddModal","import React, { useState, useEffect } from 'react';\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport DoctorAddModal from \"../Modals/DoctorAddModal\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport SpecialtyCalls from \"../../api/SpecialtyCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport \"../../i18n/i18n\";\nimport {useTranslation} from \"react-i18next\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport '../Pages/Constants'\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\n\nfunction Doctors(props) {\n    const [doctors, setDoctors] = useState([])\n    const [specialties, setSpecialties] = useState([])\n    const [paths, setPaths] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const navigate = useNavigate()\n    const { t } = useTranslation();\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchDoctors = async () => {\n        const response = await DoctorCalls.getDoctorsAdmin(0)\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setPages(response.headers.link)\n        }\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getAllSpecialties()\n        if (response && response.ok) {\n            setSpecialties(response.data)\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData () {\n            await fetchDoctors()\n            await fetchSpecialties()\n        }\n        fetchData();\n    }, [])\n\n    const handleAdd = async (newDoctor) => {\n        const response = await DoctorCalls.addDoctor(newDoctor);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        } else if (response.status === 409) {\n            if (response.data === 'license-in-use')\n                setMessage(\"errors.licenseInUse\")\n            if (response.data === 'email-in-use')\n                setMessage(\"errors.emailInUse\")\n        } else if (response.status === 404) {\n            if (response.data === \"specialty-not-found\") {\n                setMessage(\"errors.specialtyNotFound\")\n            }\n        } else if (response.status === 400) {\n            if (response.data === \"password-mismatch\") {\n                setMessage(\"errors.passwordMismatch\")\n            }\n        }\n    }\n\n    const deleteDoctors = async (license) => {\n        const response = await DoctorCalls.deleteDoctor(license)\n        if (response && response.status === 204) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        else if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.doctorsNotFound\")\n            }\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <DoctorAddModal\n                handleAdd={handleAdd}\n                specialties={specialties.map(specialty => specialty.name)}\n            />\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-doctor-container\">\n                    {doctors.map((doctor) => {\n                        return (\n                            <Card className=\"mb-3 doc-card shadow\"\n                                  key={doctor.license}>\n                                <Card.Body>\n                                    <Card.Title><b>{doctor.firstName + ' ' + doctor.lastName}</b></Card.Title>\n                                    <Card.Text>\n                                        <b>{t('DOC.license')}</b>: {doctor.license}\n                                    </Card.Text>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deleteDoctors(doctor.license)}>\n                                    {t('deleteButton')}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Doctors","import React, {Component, useState} from \"react\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport ApiCalls from \"../../api/apiCalls\"\nimport \"./Login.css\"\nimport './AdminHome.css';\nimport '../CardContainer.css'\nimport '../../i18n/i18n'\n\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst WrappedLogin = props => {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const {t} = useTranslation()\n\n    return <Login navigate={navigate} t={t} location={location} setRole={props.setRole} {...props} />\n}\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            ApiCalls.login(this.state.email, this.state.password).then(\n                (resp) => {\n                    if (resp.status === 200) {\n                        const role = resp.headers.xRole\n                        this.props.setRole(role)\n                        switch (role) {\n                            case \"ROLE_ADMIN\":\n                                this.props.navigate(`/${WEB_CONTEXT}/admin`);\n                                break;\n                            case \"ROLE_DOCTOR\":\n                                this.props.navigate(`/${WEB_CONTEXT}/doctor`);\n                                break;\n                            case \"ROLE_USER\":\n                                if (localStorage.getItem(\"path\") !== null) {\n                                    this.props.navigate(localStorage.getItem(\"path\"));\n                                    localStorage.removeItem(\"path\")\n                                } else {\n                                    this.props.navigate(\"/\" + WEB_CONTEXT );\n                                }\n                                break;\n                        }\n                    }\n                    if (resp.status === 401) {\n                        this.setState({\n                            loading: false,\n                            message: \"Email or password are not correct. Try again\"\n                        });\n                        this.props.navigate(`/${WEB_CONTEXT}/login`)\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container centered background\">\n                    <Form\n                        onSubmit={this.handleLogin}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n                        <div className=\"form-group\" className=\"labels mb-4\">\n                            <label htmlFor=\"email\" >{this.props.t(\"FORM.email\")}</label>\n                            <Input\n                                type=\"email\"\n                                className=\"form-contro text-fields\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                validations={[required]}\n                            />\n                        </div>\n\n                        <div className=\"form-group\" className=\"labels\">\n                            <label htmlFor=\"password\">{this.props.t(\"FORM.password\")}</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control text-fields\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                validations={[required]}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-block login-button\"\n                                disabled={this.state.loading}\n                            >\n                                {this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"/>\n                                )}\n                                <span>{this.props.t(\"NAVBAR.login\")}</span>\n                            </button>\n                        </div>\n\n                        {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                        )}\n                        <CheckButton\n                            style={{ display: \"none\" }}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default WrappedLogin","import {useTranslation} from \"react-i18next\";\nimport React, {useEffect, useState} from \"react\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\n\nfunction EditDocProfileModal(props) {\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [newPassword, setNewPassword] = useState(\"\")\n    const [repeatPassword, setRepeatPassword] = useState(\"\")\n    const [selectedSpecialty, setSelectedSpecialty] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [show, setShow] = useState(false)\n    const [message, setMessage] = useState('')\n    const {t} = useTranslation()\n\n    const onChange = (event) => {\n        switch(event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value);\n                break;\n            case \"lastName\":\n                setLastName(event.target.value);\n                break;\n            case \"newPassword\":\n                setNewPassword(event.target.value);\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value);\n                break;\n            case \"phoneNumber\":\n                setPhoneNumber(event.target.value);\n                break;\n        }\n    }\n\n    const handleSelect = (specialty) => {\n        setSelectedSpecialty(specialty)\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n\n    }\n\n    const handleClick = () => {\n        const doctor = {\n            firstName: firstName,\n            lastName: lastName,\n            newPassword: newPassword,\n            repeatPassword: repeatPassword,\n            specialty: selectedSpecialty,\n            phoneNumber: phoneNumber\n        }\n        if (newPassword !== repeatPassword)\n            setMessage(\"errors.passwordMismatch\")\n        else {\n            setMessage('')\n            props.handleEdit(doctor)\n            handleShow()\n        }\n    }\n\n    useEffect(() => {\n        setFirstName(props.doctor.firstName)\n        setLastName(props.doctor.lastName)\n        setPhoneNumber(props.doctor.phoneNumber)\n        setSelectedSpecialty(props.doctor.specialty)\n    }, [props.doctor])\n    return (\n        <>\n            <Button variant=\"edit-remove-button doc-button-color shadow-sm edit-button\"\n                    onClick={() => handleShow()} size=\"lg\"\n                    className=\"add-margin\">\n                {t(\"editProfileButton\")}\n            </Button>\n            <Modal show={show} onHide={() => handleShow()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t('editProfileButton')}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                            <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                            <Form.Control value={firstName}\n                                          placeholder={t(\"FORM.enterFirstName\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                            <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                            <Form.Control value={lastName}\n                                          placeholder={t(\"FORM.enterLastName\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"specialty\">\n                            <Form.Label>{t(\"FORM.specialty\")} {selectedSpecialty}</Form.Label>\n                            <DropDownList iterable={props.specialties}\n                                          selectedElement={selectedSpecialty}\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectSpecialty\")}\n                                          id='specialty'/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"phoneNumber\">\n                            <Form.Label>{t(\"FORM.phoneNumber\")}</Form.Label>\n                            <Form.Control value={phoneNumber}\n                                          type=\"text\"\n                                          placeholder={t(\"FORM.enterPhone\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"newPassword\">\n                            <Form.Label>{t(\"FORM.password\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.password\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n                            <Form.Label>{t(\"FORM.repeatPassword\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.repeatPassword\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n                    </Form>\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {t(message)}\n                            </div>\n                        </div>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => handleShow()}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleClick()} >\n                        {t('actions.edit')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default EditDocProfileModal","import React, {useState} from \"react\";\nimport {use} from \"i18next\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction ImageSelectModal(props) {\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [show, setShow] = useState(false)\n    const {t} = useTranslation()\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const onFileChange = (event) => {\n        setSelectedImage(event.target.files[0]);\n    }\n\n    const onUploadImage = () => {\n        const formData = new FormData();\n        formData.append(\n            \"profileImage\",\n            selectedImage,\n            selectedImage.name\n        );\n        props.handleUpload(formData)\n        handleShow();\n\n    }\n\n    return (\n        <>\n            <Button className=\"mx-3 shadow-sm doc-button-color\" onClick={handleShow}>\n                {t('changeImgButton')}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"DOC.editPrice\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"DOC.image\")}</Form.Label>\n                        <Form.Control type=\"file\"\n                                      onChange={onFileChange}/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => onUploadImage()}>\n                        {t(\"actions.upload\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ImageSelectModal","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst uploadImage = async (license, img) => api.post(cons.DOCTORS_PATH + \"/\" + license + cons.IMAGE_PATH,\n    img,\n    {headers: {\n            'Content-Type': 'multipart/form-data'\n    }}\n);\nconst getImage = async (license) => api.get(\n    cons.DOCTORS_PATH + \"/\" + license + cons.IMAGE_PATH,\n    {},\n    {headers: {'Accept': '*'}}\n    )\n\nconst deleteImage = async (license) => api.delete(\n    cons.DOCTORS_PATH + \"/\" + license + cons.IMAGE_PATH,\n    {},\n    {}\n    )\n\nexport default {\n    uploadImage,\n    getImage,\n    deleteImage\n}","import React, {useEffect, useState} from \"react\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image'\nimport './DoctorHome.css'\nimport '../CardContainer.css'\nimport {useTranslation} from \"react-i18next\";\nimport EditDocProfileModal from \"../Modals/EditDocProfileModal\";\nimport SpecialtyCalls from \"../../api/SpecialtyCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport ImageSelectModal from \"../Modals/ImageSelectModal\";\nimport ImageCalls from \"../../api/ImageCalls\";\nimport {BASE_URL, WEB_CONTEXT} from \"../../Constants\";\n\nfunction DoctorHome(props) {\n    const [doctor, setDoctor] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [specialties, setSpecialties] = useState([])\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n    const [image, setImage] = useState(null)\n\n    const fetchDoctor = async () => {\n        const email = localStorage.getItem('email')\n        if (email) {\n            const response = await DoctorCalls.getDocByEmail(email)\n            if (response && response.ok) {\n                setDoctor(response.data)\n                localStorage.setItem('license', response.data.license)\n            }\n            if (response.status === 404)\n                setMessage(\"errors.noDocEmail\")\n        }\n        else {\n            setMessage(\"errors.noLoggedDoc\")\n        }\n\n    }\n\n    const fetchImage = async () => {\n        const license = localStorage.getItem('license');\n        if(license === undefined) {\n            setMessage(\"errors.docLoggedNotFound\")\n        } else {\n            const response = await ImageCalls.getImage(license)\n            if (response && response.ok) {\n                setImage(response.data)\n            }\n            if (response.status === 404) {\n                if (response.data === \"image-not-found\") {\n                    setImage(null)\n                }\n                if (response.data === \"doctor-not-found\") {\n                    setMessage(\"errors.docLoggedNotFound\")\n                }\n            }\n        }\n\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getAllSpecialties();\n        if (response && response.ok) {\n            setSpecialties(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    const handleEdit = async (doctor) => {\n        const license = localStorage.getItem('license')\n        const response = await DoctorCalls.editDoctor(license, doctor)\n        if (response && response.ok) {\n            await fetchDoctor()\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            setMessage('errors.doctorNotFoundEdit')\n        }\n        if (response.status === 401) {\n            handleUnauth()\n        }\n    }\n\n    const handleUpload = async (formData) => {\n        const response = await ImageCalls.uploadImage(localStorage.getItem(\"license\"), formData)\n        if (response && response.ok) {\n            await fetchImage()\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            handleUnauth();\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.docLoggedNotFound\")\n            }\n        }\n        if (response.status === 400) {\n            if (response.data === \"image-info-missing\") {\n                setMessage(\"errors.imageBroken\")\n            }\n        }\n        if (response.status === 415) {\n            if (response.data === \"image-type-not-supported\") {\n                setMessage(\"errors.notSupported\")\n            }\n        }\n\n    }\n\n    const handleDeleteImage = async () => {\n        const response = await ImageCalls.deleteImage(localStorage.getItem(\"license\"));\n        if (response && response.ok) {\n            setImage(null)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            handleUnauth()\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.docLoggedNotFound\")\n            }\n        }\n    }\n\n    const handleDeleteProfile = async () => {\n        const response = await DoctorCalls.deleteDoctor(localStorage.getItem(\"license\"))\n        if (response && response.ok) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT)\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.docLoggedNotFound\")\n            }\n        }\n    }\n\n    const handleUnauth = () => {\n        props.logout()\n        navigate(\"/\" + WEB_CONTEXT + \"/login\")\n    }\n\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchDoctor();\n            await fetchSpecialties();\n            await fetchImage();\n        }\n        fetchData();\n    }, [])\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <h3 className=\"mt-3\">\n                            {t('welcome')}, {doctor.firstName} {doctor.lastName}!\n                        </h3>\n                        <hr />\n                    </Col>\n                </Row>\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {t(message)}\n                        </div>\n                    </div>\n                )}\n                <Row>\n                    <Col className=\"info-col\">\n                        <h4>\n                            {t('NAVBAR.profile')}\n                        </h4>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.name')}:</b> {doctor.firstName} {doctor.lastName}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.email')}:</b> {localStorage.getItem('email')}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('DOC.license')}:</b> {doctor.license}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.phoneNumber')}:</b> {doctor.phoneNumber}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('ADMIN.specialty')}:</b> {doctor.specialty}\n                        </div>\n                        <div className=\"mt-3\">\n                            <EditDocProfileModal specialties={specialties.map(specialty=> specialty.name)}\n                                                 handleEdit={handleEdit}\n                                                 doctor={doctor}\n                            />\n                            <Button className=\"mx-3 shadow-sm remove-button-color\" onClick={handleDeleteProfile}> {t('deleteProfile')}</Button>\n                        </div>\n\n                    </Col>\n                    <Col>\n                        <img className=\"img-size\"\n                             src={image === null?\n                                 \"/\" + WEB_CONTEXT + \"/images/docpic.jpg\": BASE_URL + \"/doctors/\" + localStorage.getItem('license') +\"/image\"} />\n                        <div className=\"mt-3\">\n                            <ImageSelectModal handleUpload={handleUpload} />\n                            <Button className=\"mx-3 shadow-sm doc-button-color\" onClick={handleDeleteImage}> {t('deleteImgButton')}</Button>\n                        </div>\n                    </Col>\n                </Row>\n                <hr/>\n                <Row>\n                </Row>\n            </Container>\n        </>\n    )\n}\nexport default DoctorHome","import {Button, Form, Modal} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction DoctorClinicAddModal(props) {\n    const [show, setShow] = useState(false)\n    const [selectedClinic, setSelectedClinic] = useState({})\n    const [price, setPrice] = useState(0)\n    const {t} = useTranslation()\n\n    const handleSelect = (clinicName) => {\n        const selected = props.allClinics.filter(clinic => clinic.name + \" (\" + clinic.location + \")\" === clinicName)\n        setSelectedClinic(selected[0])\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const onChange = (event) => {\n        setPrice(event.target.value)\n    }\n\n    const handleAdd = async () => {\n        const data = {\n            clinic: selectedClinic.id,\n            consultPrice: Number(price)\n        }\n        setSelectedClinic({})\n        props.handleAdd(data)\n        handleShow()\n    }\n\n    const remainingClinics = () => {\n        return props.allClinics.filter(clinic => !props.clinics.includes(clinic.id))\n            .map(clinic => clinic.name + \" (\" + clinic.location + \")\");\n\n    }\n\n    return(\n        <>\n            <Button variant=\"outline-secondary add-margin\" onClick={handleShow} size=\"lg\">\n                {t('DOC.subscribeClinic')}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t('DOC.subscribeClinic')}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t('CLINIC.clinic')}: {selectedClinic.name} - {selectedClinic.location}</Form.Label>\n                        <DropDownList iterable={remainingClinics()}\n                                      selectedElement=''\n                                      handleSelect={handleSelect}\n                                      elementType={t('FORM.selectClinic')}\n                                      id='clinic'/>\n                        <Form.Group className=\"mb-3 mt-3\" controlId=\"price\">\n                            <Form.Label>{t('DOC.price')}</Form.Label>\n                            <Form.Control type=\"number\" placeholder={t(\"FORM.enterPrice\")} onChange={onChange}/>\n                        </Form.Group>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={handleAdd}>\n                        {t(\"actions.add\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default DoctorClinicAddModal","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\n\nfunction EditPriceModal(props) {\n    const [show, setShow] = useState(false);\n    const [newPrice, setNewPrice] = useState(props.price);\n    const { t } = useTranslation();\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const handleEdit = () => {\n        props.handleEdit(newPrice)\n        setNewPrice(0)\n        handleShow()\n    }\n\n    const onChange = (event) => {\n        setNewPrice(event.target.value)\n    }\n\n    return (\n        <>\n            <Button className=\"mx-3 shadow-sm doc-button-color\" onClick={handleShow}>\n                <i className=\"far fa-edit\"/>\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"DOC.editPrice\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"DOC.price\")}</Form.Label>\n                        <Form.Control value={newPrice}\n                                      placeholder={t(\"FORM.enterPrice\")}\n                                      onChange={onChange}/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleEdit()}>\n                        {t(\"actions.edit\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default EditPriceModal","import React, {useEffect, useState} from \"react\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport DoctorClinicAddModal from \"../Modals/DoctorClinicAddModal\";\nimport EditPriceModal from \"../Modals/EditPriceModal\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction DoctorClinics(props) {\n    const [clinics, setClinics] = useState([]);\n    const [allClinics, setAllClinics] = useState([])\n    const [allDoctorClinics, setAllDoctorClinics] = useState([])\n    const [paths, setPaths] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const license = localStorage.getItem('license');\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n\n    const fetchClinic = async (clinicPath) => {\n        const response = await ApiCalls.makeGetCall(clinicPath);\n        if (response && response.ok) {\n            return response.data\n        }\n    }\n\n    const handleDCResponse = async (response) => {\n        if (response && response.ok) {\n            setClinics(response.data)\n            const docClinic = response.data\n            const getClinics = [];\n            for (let i = 0; i < docClinic.length; i++) {\n                const clinic = await fetchClinic(docClinic[i].clinic)\n                const dc = {\n                    consultPrice: docClinic[i].consultPrice,\n                    clinic: clinic\n                }\n                getClinics.push(dc);\n            }\n            setClinics(getClinics)\n            setPaths(getPaths(response.headers.link))\n            setMessage(\"\")\n        }\n        if(response.status === 404) {\n            setMessage(\"errors.docLoggedNotFound\")\n        }\n    }\n\n    const fetchDoctorsClinics = async () => {\n        const response = await DoctorCalls.getClinics(license, 0)\n        await handleDCResponse(response)\n    }\n\n    const fetchPage = async (page) => {\n        const response = await ApiCalls.makeGetCall(paths[page])\n        await handleDCResponse(response)\n    }\n\n    const fetchAllDoctorClinics = async () => {\n        const response = await DoctorCalls.getAllClinics(license)\n        if (response && response.ok) {\n            setAllDoctorClinics(response.data)\n            setMessage(\"\")\n        }\n        if(response.status === 404) {\n            setMessage(\"errors.docLoggedNotFound\")\n        }\n    }\n\n    const fetchAllClinics = async () => {\n        const response = await ClinicCalls.getAllClinics();\n        if (response && response.ok) {\n            setAllClinics(response.data);\n        }\n    }\n\n    const handleAdd = async (newDocClinic) => {\n        const response = await DoctorCalls.addDoctorToClinic(newDocClinic, license);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n        }\n        if (response.status === 409){\n            if (response.data === \"doctor-clinic-exists\")\n                setMessage(\"errors.alreadySubscribed\")\n        }\n        else {\n            handleErrors(response);\n        }\n    }\n\n    const handleEditPrice = async (clinicId, price) => {\n        const response = await DoctorCalls.editPrice(license, clinicId, price)\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            await fetchAllDoctorClinics()\n            setMessage('')\n        } else {\n            handleErrors(response);\n        }\n    }\n\n\n    const handleDelete = async (clinicId) => {\n        const response = await DoctorCalls.deleteDoctorsClinic(license, clinicId)\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            await fetchAllDoctorClinics()\n            setMessage('')\n        } else {\n            handleErrors(response);\n        }\n    }\n\n    const handleErrors = (response) => {\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.docLoggedNotFound\")\n            if (response.data === \"clinic-not-found\")\n                setMessage(\"errors.clinicNotFound\")\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n    }\n    useEffect( () => {\n        async function fetchData () {\n            await fetchDoctorsClinics();\n            await fetchAllClinics();\n            await fetchAllDoctorClinics();\n        }\n        fetchData();\n    },[])\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return (\n        <>\n            <DoctorClinicAddModal\n                handleAdd={handleAdd}\n                allClinics={allClinics}\n                clinics={allDoctorClinics.map(clinic => clinic.id)}\n            />\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-container\">\n                    {clinics.map((dc) => {\n                        return (\n                            <Card className=\"mb-3 shadow\" style={{color: \"#000\", width: '20rem', height: '16.5rem'}} key={dc.id}>\n                                <Card.Body>\n                                    <Card.Title>{dc.clinic.name}</Card.Title>\n                                    <Card.Text>\n                                        {dc.clinic.address + ' (' + dc.clinic.location + ')'}\n                                    </Card.Text>\n                                    <Card.Text>\n                                        {t('DOC.price')}: {String(dc.consultPrice)}\n                                        <EditPriceModal handleEdit={(newPrice) => handleEditPrice(dc.clinic.id, newPrice)}\n                                                        price={dc.consultPrice}\n                                        />\n                                    </Card.Text>\n                                    <Link className=\"btn btn-outline-dark btn-lg see-prepaid-button shadow-sm\"\n                                          role=\"button\"\n                                          to={`/${WEB_CONTEXT}/doctor/${license}/clinics/${dc.clinic.id}/schedule`}>\n                                        {t('scheduleButton')}\n                                    </Link>\n                                </Card.Body>\n                                <div className=\"buttons-div\">\n                                    <Button className=\"edit-remove-button remove-button-color shadow-sm\"\n                                            onClick={() => handleDelete(dc.clinic.id)}\n                                    >\n                                        {t(\"deleteButton\")}\n                                    </Button>\n                                </div>\n\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            <div>\n                {renderPrevButton()}\n                {renderNextButton()}\n            </div>\n        </>\n    )\n}\n\nexport default DoctorClinics","export const getWeekDate = (weekDate) => {\n    switch (weekDate) {\n        case 1:\n            return \"CAL.mon\";\n        case 2:\n            return \"CAL.tue\";\n        case 3:\n            return \"CAL.wed\";\n        case 4:\n            return \"CAL.thu\";\n        case 5:\n            return \"CAL.fri\";\n        case 6:\n            return \"CAL.sat\";\n        case 7:\n            return \"CAL.sun\";\n    }\n}\n\nexport const getMonth = (monthInt) => {\n    switch (monthInt){\n        case 1:\n            return \"CAL.jan\";\n        case 2:\n            return \"CAL.feb\";\n        case 3:\n            return \"CAL.mar\";\n        case 4:\n            return \"CAL.apr\";\n        case 5:\n            return \"CAL.may\";\n        case 6:\n            return \"CAL.jun\";\n        case 7:\n            return \"CAL.jul\";\n        case 8:\n            return \"CAL.aug\";\n        case 9:\n            return \"CAL.sep\";\n        case 10:\n            return \"CAL.oct\";\n        case 11:\n            return \"CAL.nov\";\n        case 12:\n            return \"CAL.dec\";\n    }\n\n}\n\nexport const dateToString = (app, t) => {\n    return t(getWeekDate(app.dayOfWeek)) + \" \" + app.day + \" \" + t(getMonth(app.month)) + \", \" + app.year +\n        \" \" + app.hour + \":00\"\n}","import {Button, Form, Modal} from \"react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport DropDownList from \"../DropDownList\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport {getWeekDate} from \"../../utils/dateHelper\";\n\nfunction ModifyScheduleModal(props) {\n    const [show, setShow] = useState(false);\n    const {t} = useTranslation()\n    const [day, setDay] = useState(null);\n    const [hour, setHour] = useState(null);\n    const [available, setAvailable] = useState([])\n\n    const handleShow = () => {\n        setShow(!show);\n    }\n\n    useEffect(async () => {\n        setAvailable(getAllSchedules());\n    },[])\n\n    const getAllSchedules = () => {\n        const availableList = []\n        for (let i = 9; i < 19; i++) {\n            for (let j = 1; j < 8; j++) {\n                availableList.push({day: j, hour: i})\n\n            }\n        }\n        return availableList;\n\n    }\n    const handleSelectDay = (selectedDay) => {\n        setDay(parseDays(selectedDay))\n    }\n\n    const handleSelectHour = (selectedHour) => {\n        setHour(selectedHour)\n    }\n\n    const handleClick = () => {\n        props.handleClick(day, hour)\n        setDay(null)\n        setHour(null)\n        handleShow()\n\n    }\n\n    const getDays = () => {\n        return [t(\"CAL.mon\"), t(\"CAL.tue\"), t(\"CAL.wed\"), t(\"CAL.thu\"), t(\"CAL.fri\"), t(\"CAL.sat\"), t(\"CAL.sun\")]\n    }\n\n    const parseDays = (dayString) => {\n        switch (dayString) {\n            case t(\"CAL.mon\"):\n                return 1;\n            case t(\"CAL.tue\"):\n                return 2;\n            case t(\"CAL.wed\"):\n                return 3;\n            case t(\"CAL.thu\"):\n                return 4;\n            case t(\"CAL.fri\"):\n                return 5;\n            case t(\"CAL.sat\"):\n                return 6;\n            case t(\"CAL.sun\"):\n                return 7;\n        }\n    }\n    const getHours = () => {\n        if (day === null) {\n            return []\n        }\n        return available.filter(s => s.day === day).map(s => s.hour)\n\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-secondary\" onClick={handleShow} size=\"lg\" className=\"add-margin\">\n                {t(\"actions.\" + props.action)} {t(\"FORM.schedule\")}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"actions.\"  + props.action)} {t(\"FORM.schedule\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"day\">\n                        <Form.Label>{t(\"FORM.day\")} {day === null? \"\": t(getWeekDate(day))}</Form.Label>\n                        <DropDownList iterable={getDays()}\n                                      selectedElement={day}\n                                      handleSelect={handleSelectDay}\n                                      elementType={t(\"FORM.daySelect\")}\n                                      id='day'/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"hour\">\n                        <Form.Label>{t(\"FORM.hour\")} {hour === null? \"\": hour}</Form.Label>\n                        <DropDownList iterable={getHours()}\n                                      selectedElement={hour}\n                                      handleSelect={handleSelectHour}\n                                      elementType={t(\"FORM.hourSelect\")}\n                                      id='hour'/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleClick()}>\n                        {t(\"actions.\" + props.action)}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default ModifyScheduleModal","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Table} from \"react-bootstrap\";\nimport './DoctorClinicSchedule.css'\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport ModifyScheduleModal from \"../Modals/ModifyScheduleModal\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction DoctorClinicSchedule(props) {\n    const [schedule, setSchedule] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [clinic, setClinic] = useState(null);\n    const [doctor, setDoctor] = useState(null);\n    const {t} = useTranslation();\n    const navigate = useNavigate()\n    let {id} = useParams();\n    let {license} = useParams()\n    let cachedClinic = {}\n\n    const fetchDoctor = async () => {\n        const email = localStorage.getItem('email');\n        const response = await DoctorCalls.getDocByEmail(email);\n        if (response && response.ok) {\n            setDoctor(response.data);\n            setMessage(\"\")\n        }\n    }\n\n    const fetchClinic = async () => {\n        const response = await ClinicCalls.getClinic(id);\n        if (response && response.ok) {\n            setClinic(response.data);\n            setMessage(\"\");\n        }\n    }\n\n    const fetchEntity = async (path) => {\n        const response = await ApiCalls.makeGetCall(path);\n        if (response && response.ok) {\n            return response.data;\n        }\n    }\n\n    const fetchSchedule = async () => {\n        const response = await DoctorCalls.getSchedule(license)\n        if (response && response.ok) {\n            const list = response.data;\n            let sch = []\n            for (let i = 0; i < list.length; i++) {\n                let clinic = cachedClinic[list[i].clinic]\n                if (clinic === undefined) {\n                    clinic = await fetchEntity(list[i].clinic)\n                    cachedClinic[list[i].clinic] = clinic\n                }\n                const sched = {\n                    clinic: clinic,\n                    day: list[i].day,\n                    hour: list[i].hour,\n                }\n                sch.push(sched)\n            }\n            setSchedule(sch)\n            setMessage(\"\")\n        }\n    }\n\n    const getClinicName = () => {\n        if (clinic === null)\n            return \"\";\n        return clinic.name\n    }\n\n    const getRow = (row) => {\n        const rowSchedule = schedule.filter(schedule => schedule.hour === row)\n        const days = []\n        for (let i = 1; i < 8; i++) {\n            const scheduleDay = rowSchedule.filter(schedule => (schedule.day) === i)\n            if (scheduleDay.length > 0) {\n             days[i - 1] = scheduleDay[0].clinic\n            } else {\n                days[i - 1] = null\n            }\n\n        }\n        return days\n    }\n\n    const getAllRows = () => {\n        const hours = []\n        for (let i = 9; i < 19; i++) {\n            hours[i] = getRow(i)\n        }\n        return hours\n    }\n\n    useEffect (() => {\n        async function fetchData () {\n            await fetchDoctor();\n            await fetchClinic();\n            await fetchSchedule()\n        }\n        fetchData();\n\n    },[])\n\n    const handleAdd = async (day, hour) => {\n        const response = await DoctorCalls.addSchedule(license, id, day, hour)\n        if (response && response.ok) {\n            await fetchSchedule();\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n        }\n        if (response.status === 409) {\n            if (response.data === \"schedule-exists\")\n                setMessage(\"errors.scheduleExists\")\n        }\n        if (response.status === 401)\n            handleUnauth()\n    }\n\n    const handleDelete = async (day, hour) => {\n        const response = await DoctorCalls.deleteSchedule(license, id, day, hour)\n        if (response && response.ok) {\n            await fetchSchedule();\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n            if (response.data === \"schedule-not-found\")\n                setMessage(\"errors.scheduleNotFoundDelete\")\n            if (response.data === \"schedule-clinic-not-found\")\n                setMessage(\"errors.scheduleOtherClinicDelete\")\n        }\n        if (response.status === 409) {\n            if (response.data === \"schedule-exists\")\n                setMessage(\"errors.scheduleExists\")\n        }\n\n        if (response.status === 401)\n            handleUnauth()\n    }\n\n    const handleUnauth = () => {\n        props.logout()\n        navigate(\"/\" + WEB_CONTEXT + \"/login\")\n    }\n\n    return (\n        <div className=\"content\">\n            <h3 className=\"clinic-prepaid-title\">{t(\"CLINIC.clinic\")} {getClinicName()}</h3>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Table className=\"schedule-table\">\n                <thead>\n                    <tr>\n                        <th width=\"9%\">{t('CAL.hour')}</th>\n                        <th width=\"13%\">{t('CAL.mon')}</th>\n                        <th width=\"13%\">{t('CAL.tue')}</th>\n                        <th width=\"13%\">{t('CAL.wed')}</th>\n                        <th width=\"13%\">{t('CAL.thu')}</th>\n                        <th width=\"13%\">{t('CAL.fri')}</th>\n                        <th width=\"13%\">{t('CAL.sat')}</th>\n                        <th width=\"13%\">{t('CAL.sun')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {getAllRows().map((row, index) => {\n                    return (\n                        <tr>\n                            <td>{index}:00</td>\n                            {row.map((clinic => {\n                                if (clinic === null) {\n                                   return <td/>\n                                }\n                                if (clinic.id === Number(id)) {\n                                    return (\n                                        <td className=\"current-clinic\"><b>{clinic.name} ({clinic.location})</b></td>\n                                    )\n                                } else {\n                                    return (\n                                        <td className=\"other-clinic\">{clinic.name} ({clinic.location})</td>\n                                    )\n                                }\n\n                            }))}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </Table>\n            <div>\n                <ModifyScheduleModal handleClick={handleAdd}\n                                     action=\"add\"\n                />\n                <ModifyScheduleModal handleClick={handleDelete}\n                                     action=\"delete\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default DoctorClinicSchedule;","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst getAvailableAppointments = async (license) => api.get(\n    cons.DOCTORS_PATH + '/' + license + cons.APPOINTMENT_PATH);\n\nconst makeAppointment = async (data) => api.post(\n    cons.APPOINTMENT_PATH,\n    data,\n    {}\n    )\n\nconst getAppointment = async (email, page) => api.get(\n    cons.APPOINTMENT_PATH + '?' + cons.USER_QUERY + email + \"&\" + cons.PAGE_QUERY + page,\n    {},\n    {}\n    )\n\nconst deleteAppointment = async (email, id) => api.delete(\n    cons.APPOINTMENT_PATH + \"/\" + id + '?' + cons.USER_QUERY + email,\n    {},\n    {}\n)\n\nexport default {\n    getAvailableAppointments,\n    makeAppointment,\n    getAppointment,\n    deleteAppointment\n}","import api from \"./index\";\nimport {FAVORITE_PATH, LICENSE_QUERY, PATIENT_PATH} from \"./Constants.js\";\nimport * as cons from \"./Constants\";\n\nconst getFavoriteDoctors = async (id, pag) => api.get(PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + cons.PAGE_QUERY + pag,\n    {},\n    {}\n    )\nconst deleteFavoriteDoctor = async (id, license) => api.delete(\n    PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + LICENSE_QUERY + license,\n    {},\n    {})\nconst isFavorite = async (id, license) => api.get(PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + cons.LICENSE_QUERY + license,\n    {},\n    {}\n    )\nconst addFavoriteDoctor = async (id, license) => api.post(\n    PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + LICENSE_QUERY + license,\n    {},\n    {}\n)\n\nconst getProfile = async (id) => api.get(PATIENT_PATH + \"/\" + id,{},\n    {})\n\nconst updateProfile = async (data, id) => api.put(PATIENT_PATH + \"/\" + id, data,\n    {})\n\nconst deleteProfile = async (id) => api.delete(PATIENT_PATH + \"/\" + id, {},\n    {})\n\nexport default {\n    getFavoriteDoctors,\n    deleteFavoriteDoctor,\n    isFavorite,\n    addFavoriteDoctor,\n    updateProfile,\n    getProfile,\n    deleteProfile\n}","import {useNavigate, useParams} from \"react-router-dom\";\nimport {Button, Col, Container, Form, Row, Table} from \"react-bootstrap\";\nimport {BASE_URL, WEB_CONTEXT} from \"../../Constants\";\nimport React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ImageCalls from \"../../api/ImageCalls\";\nimport AppointmentCalls from \"../../api/AppointmentCalls\";\nimport DropDownList from \"../DropDownList\";\nimport {dateToString, getMonth, getWeekDate} from \"../../utils/dateHelper\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport './UserDoctorProfile.css'\nimport ApiCalls from \"../../api/apiCalls\";\n\n\nfunction UserDoctorProfile(props) {\n    const {license} = useParams()\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n    const [image, setImage] = useState(null)\n    const [doctor, setDoctor] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [schedule, setSchedule] = useState([])\n    const [available, setAvailable] = useState([])\n    const [clinics, setClinics] = useState([])\n    const [selectedClinic, setSelectedClinic] = useState(null)\n    const [selectedDateTime, setSelectedDateTime] = useState(null)\n    const [isFavorite, setIsFavorite] = useState(false)\n    let cachedClinic = {}\n\n    const fetchDoctor = async () => {\n        const response = await DoctorCalls.getDocByLicense(license);\n        if (response && response.ok) {\n            setDoctor(response.data)\n        }\n    }\n\n    const fetchAvailableAppointments = async () => {\n        const response = await AppointmentCalls.getAvailableAppointments(license);\n        if (response && response.ok) {\n            const list = response.data\n            let apps = []\n            for (let i = 0; i < list.length; i++) {\n                let clinic = cachedClinic[list[i].clinic];\n                if (clinic === undefined) {\n                    clinic = await fetchClinic(list[i].clinic)\n                    cachedClinic[list[i].clinic] = clinic\n                }\n                const app = {\n                    clinic: clinic,\n                    year: list[i].year,\n                    month: list[i].month,\n                    day: list[i].day,\n                    hour: list[i].hour,\n                    dayOfWeek: list[i].dayOfWeek\n                }\n                apps.push(app)\n            }\n            setAvailable(apps)\n            setMessage(\"\")\n        }\n    }\n\n    const fetchClinics = async () => {\n        const response = await DoctorCalls.getAllClinics(license);\n        if (response && response.ok) {\n            const docClinic = response.data\n            const getClinics = [];\n            for (let i = 0; i < docClinic.length; i++) {\n                let clinic = cachedClinic[docClinic[i].clinic];\n                if (clinic === undefined) {\n                    clinic = await fetchClinic(docClinic[i].clinic)\n                    cachedClinic[docClinic[i].clinic] = clinic\n                }\n                getClinics.push(clinic);\n            }\n            setClinics(getClinics)\n            setMessage(\"\")\n        }\n\n    }\n\n    const fetchClinic = async (clinicPath) => {\n        const response = await ApiCalls.makeGetCall(clinicPath);\n        if (response && response.ok) {\n            return response.data\n        }\n    }\n\n    const fetchImage = async () => {\n        const response = await ImageCalls.getImage(license);\n        if (response && response.ok) {\n            setImage(response.data)\n        }\n        if (response.status === 404) {\n            if (response.data === \"image-not-found\") {\n                setImage(null)\n            }\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.noDocFound\")\n            }\n        }\n    }\n\n    const fetchSchedule = async () => {\n        const response = await DoctorCalls.getSchedule(license)\n        if (response && response.ok) {\n            const list = response.data;\n            let sch = []\n            for (let i = 0; i < list.length; i++) {\n                let clinic = cachedClinic[list[i].clinic];\n                if (clinic === undefined) {\n                    clinic = await fetchClinic(list[i].clinic)\n                    cachedClinic[list[i].clinic] = clinic\n                }\n                const sched = {\n                    clinic: clinic,\n                    day: list[i].day,\n                    hour: list[i].hour,\n                }\n                sch.push(sched)\n\n            }\n            setSchedule(sch)\n            setMessage(\"\")\n        }\n    }\n\n    const fetchIsFavorite = async () => {\n        if (localStorage.getItem('email') === null && props.isUser()) {\n            setIsFavorite(false)\n        } else {\n            const response = await PatientCalls.isFavorite(localStorage.getItem('email'), license)\n            if (response && response.ok) {\n                setIsFavorite(response.data !== undefined && response.data !== null)\n                setMessage(\"\")\n            }\n            if (response.status === 404) {\n                if (response.data === \"doctor-not-found\")\n                    setMessage(\"errors.noDocFound\")\n                if (response.data === \"not-favorite\"){\n                    setIsFavorite(false)\n                    setMessage(\"\")\n                }\n            }\n        }\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchDoctor();\n            await fetchImage();\n            await fetchSchedule();\n            await fetchClinics();\n            await fetchIsFavorite();\n            await fetchAvailableAppointments();\n        }\n        fetchData();\n    },[])\n\n    const handleMakeApp = async () => {\n        if (localStorage.getItem('email') === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        if (selectedClinic === null) {\n            setMessage(\"errors.selectTime\")\n        }\n        if (selectedDateTime === null) {\n            setMessage(\"errors.selectTime\")\n        }\n        else {\n            const data = {\n                license: license,\n                clinic: selectedClinic.id,\n                patient: localStorage.getItem('email'),\n                time: selectedDateTime.hour,\n                day: selectedDateTime.day,\n                month: selectedDateTime.month,\n                year: selectedDateTime.year\n            }\n            const response = await AppointmentCalls.makeAppointment(data);\n            if (response && response.ok) {\n                navigate(`/${WEB_CONTEXT}/appointments`)\n            }\n            if (response.status === 401) {\n                localStorage.setItem('path', \"/\" + WEB_CONTEXT + \"/\" + license + \"/profile\")\n                props.logout()\n                navigate(`/${WEB_CONTEXT}/login`)\n            }\n            if (response.status === 400) {\n                if (response.data === \"past-date\")\n                    setMessage(\"errors.datePast\")\n            }\n            if (response.status === 409) {\n                if (response.data === \"out-of-schedule\")\n                    setMessage(\"errors.outOfSchedule\")\n                if (response.data === \"appointment-exists\")\n                    setMessage(\"errors.appointmentExists\")\n                if (response.data === \"doctor-already-has-appointment\")\n                    setMessage(\"errors.doctorAppointment\")\n                if (response.data === \"patient-already-has-appointment\")\n                    setMessage(\"errors.patientAppointment\")\n             }\n        }\n\n    }\n\n    const makeFavorite = async () => {\n        if (localStorage.getItem('email') === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        const response = await PatientCalls.addFavoriteDoctor(localStorage.getItem('email'), license)\n        if (response && response.ok) {\n            setIsFavorite(true)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.noDocFound\")\n            if (response.data === \"patient-not-found\")\n                setMessage(\"errors.noPatientEmail\")\n        }\n        if (response.status === 409) {\n            if (response.data === \"favorite-exists\")\n                setMessage(\"errors.favExists\")\n        }\n        if (response.status === 401) {\n            localStorage.setItem('path', \"/\" + WEB_CONTEXT + \"/\" + license + \"/profile\")\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const deleteFavorite = async () => {\n        if (localStorage.getItem('email') === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        const response = await PatientCalls.deleteFavoriteDoctor(localStorage.getItem('email'), license)\n        if (response && response.ok) {\n            setIsFavorite(false)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.noDocFound\")\n            if (response.data === \"patient-not-found\")\n                setMessage(\"errors.noPatientEmail\")\n        }\n        if (response.status === 401) {\n            localStorage.setItem('path', \"/\" + WEB_CONTEXT+ \"/\" + license + \"/profile\")\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const getRow = (row) => {\n        const rowSchedule = schedule.filter(schedule => schedule.hour === row)\n        const days = []\n        for (let i = 1; i < 8; i++) {\n            const scheduleDay = rowSchedule.filter(schedule => (schedule.day) === i)\n            if (scheduleDay.length > 0) {\n                days[i - 1] = scheduleDay[0].clinic\n            } else {\n                days[i - 1] = null\n            }\n\n        }\n        return days\n    }\n\n    const handleSelectClinic = (clinicName) => {\n        const selected = clinics.filter(clinic => clinic.name + \" (\" + clinic.location + \")\" === clinicName)\n        setSelectedClinic(selected[0])\n    }\n\n    const handleSelectDateTime = (dateFormated) => {\n        const selected = getDateTimes().filter(date => t(getWeekDate(date.dayOfWeek)) + \" \" + date.day + \" \" + t(getMonth(date.month)) + \", \" + date.year +\n            \" \" + date.hour + \":00\" === dateFormated)\n        setSelectedDateTime(selected[0])\n    }\n\n    const getAllRows = () => {\n        const hours = []\n        for (let i = 9; i < 19; i++) {\n            hours[i] = getRow(i)\n        }\n        return hours\n    }\n\n    const getDateTimes = () => {\n        if (selectedClinic === null) {\n            return []\n        }\n        return available.filter(appointment => appointment.clinic.id === selectedClinic.id)\n    }\n\n    return (\n        <>\n            <Container>\n                <Row className=\"mt-3\">\n\n                    <Col className=\"info-col-user\">\n                        <h4 style={{display: \"flex\"}}>\n                            <div style={{alignSelf: \"center\"}}>{t('USER.dataProfile')}</div>\n                            {isFavorite ? <Button className=\"m-2 fav-button\" onClick={deleteFavorite}>\n                                <img src={\"/\" + WEB_CONTEXT + \"/images/yesfav.png\"}/>\n                            </Button>:<Button className=\"m-2 fav-button\" onClick={makeFavorite}>\n                                <img src={\"/\" + WEB_CONTEXT + \"/images/nofav.png\"}/>\n                            </Button>}\n                        </h4>\n                        <div className=\"user-info-label\">\n                            <b>{t('FORM.name')}:</b> {doctor.firstName + \" \" + doctor.lastName}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('FORM.email')}:</b> {doctor.email}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('DOC.license')}:</b> {doctor.license}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('FORM.phoneNumber')}:</b> {doctor.phoneNumber}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('ADMIN.specialty')}:</b> {doctor.specialty}\n                        </div>\n                    </Col>\n                    <Col className=\"img-col-user mx-3\">\n                        <img className=\"user-img-size\"\n                             src={image === null?\n                                 \"/\" + WEB_CONTEXT + \"/images/docpic.jpg\": BASE_URL + \"/doctors/\" + license + \"/image\"} />\n                    </Col>\n                </Row>\n                <hr/>\n                <Row>\n                    <Col className=\"col-8\">\n                        <Table className=\"user-schedule-table\">\n                            <thead>\n                            <tr>\n                                <th width=\"9%\">{t('CAL.hour')}</th>\n                                <th width=\"13%\">{t('CAL.mon')}</th>\n                                <th width=\"13%\">{t('CAL.tue')}</th>\n                                <th width=\"13%\">{t('CAL.wed')}</th>\n                                <th width=\"13%\">{t('CAL.thu')}</th>\n                                <th width=\"13%\">{t('CAL.fri')}</th>\n                                <th width=\"13%\">{t('CAL.sat')}</th>\n                                <th width=\"13%\">{t('CAL.sun')}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {getAllRows().map((row, index) => {\n                                return (\n                                    <tr>\n                                        <td>{index}:00</td>\n                                        {row.map((clinic => {\n                                            if (clinic === null) {\n                                                return <td/>\n                                            } else {\n                                                return (\n                                                    <td className=\"user-clinic\">{clinic.name} ({clinic.location})</td>\n                                                )\n                                            }\n\n                                        }))}\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                    <Col>\n                        <h4 className=\"m-3\">\n                            {t(\"actions.makeApp\")}\n                        </h4>\n                        <Form.Group className=\"m-3\">\n                            <Form.Label><b>{t(\"CLINIC.clinic\")}</b>: {selectedClinic === null? \"\":\n                                selectedClinic.name + \" - \" + selectedClinic.location}</Form.Label>\n                            <DropDownList iterable={clinics.map(clinic => clinic.name + \" (\" + clinic.location + \")\")}\n                                          selectedElement=''\n                                          handleSelect={handleSelectClinic}\n                                          elementType={t('FORM.selectClinic')}\n                                          id='clinic'/>\n                        </Form.Group>\n                        <Form.Group className=\"m-3\">\n                            <Form.Label><b>{t(\"FORM.dateTime\")}</b>: {selectedDateTime === null? \"\":\n                                dateToString(selectedDateTime, t)}</Form.Label>\n                            <DropDownList iterable={getDateTimes().map(date => dateToString(date, t))}\n                                          selectedElement=''\n                                          handleSelect={handleSelectDateTime}\n                                          elementType={t('FORM.selectDateTime')}\n                                          id='time'/>\n                        </Form.Group>\n                        <Button className=\"doc-button-color m-5\" onClick={handleMakeApp}>\n                            {t(\"actions.makeApp\")}\n                        </Button>\n                        {message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {t(message)}\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n\n                </Row>\n            </Container>\n        </>\n    )\n\n}\n\nexport default UserDoctorProfile","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport {Button, Card, Col, Container, Row} from \"react-bootstrap\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport './Favorites.css'\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction Favorites(props) {\n    const [doctors, setDoctors] = useState([])\n    const [paths, setPaths] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const {t} = useTranslation()\n\n    const setPages = (linkHeader) => {\n        const paths = getPaths(linkHeader);\n        setPaths(paths)\n    }\n\n    const fetchFavorites = async () => {\n        let id = localStorage.getItem('email')\n        if (id === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        setIsLoading(true)\n        const response = await PatientCalls.getFavoriteDoctors(id, 0)\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setPages(response.headers.link)\n            setIsLoading(false)\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const fetchPage = async (page) => {\n        let id = localStorage.getItem('email')\n        if (id === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        setIsLoading(true)\n        const response = await ApiCalls.makeGetCall(paths[page])\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setPages(response.headers.link)\n            setIsLoading(false)\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const removeFromFavorites = async (license) => {\n        let id = localStorage.getItem('email')\n        if (id === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        const response = await PatientCalls.deleteFavoriteDoctor(id, license);\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchFavorites();\n        }\n        fetchData();\n\n    }, [])\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return (\n        <>\n            <Row style={{display:\"flex\"}}>\n                <h2 className=\"m-3 fav-title\">{t(\"USER.fav\")}</h2>\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {t(message)}\n                        </div>\n                    </div>\n                )}\n                {doctors.length === 0 && !isLoading && <h4 className=\"m-3 no-fav\">{t(\"USER.emptyFavorites\")}</h4>}\n            </Row>\n            <Row>\n                <Col>\n                    <Container>\n                        <div className=\"admin-info-container favorite-doctor-container\">\n                            {doctors.map((doctor) => {\n                                return (\n                                    <Card className=\"mb-3 fav-doc-card shadow\"\n                                          key={doctor.license}>\n                                        <Card.Body className=\"card-body-doc\">\n                                            <Card.Title>{doctor.firstName + ' ' + doctor.lastName}</Card.Title>\n                                            <Card.Text>\n                                                {doctor.specialty}\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <div className=\"buttons-div\">\n                                            <Link className=\"doc-button-color btn m-1\"\n                                                  role=\"button\"\n                                                  to={'/' + WEB_CONTEXT + '/' + doctor.license + '/profile'}>{t(\"USER.seeProfile\")}\n                                            </Link>\n                                            <Button className=\"edit-remove-button remove-button-color shadow-sm\"\n                                                    onClick={() => removeFromFavorites(doctor.license)}>\n                                                {t(\"deleteButton\")}\n                                            </Button>\n                                        </div>\n                                    </Card>\n                                )\n                            })}\n                        </div>\n                    </Container>\n                    {renderPrevButton()}\n                    {renderNextButton()}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Favorites;","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport '../Pages/Profile.css'\n\nfunction EditUserProfileModal(props) {\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [newPassword, setNewPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [selectedPrepaid, setSelectedPrepaid] = useState(\"\")\n    const [prepaidNumber, setPrepaidNumber] = useState(\"\")\n    const [show, setShow] = useState(false)\n    const [invalidForm, setInvalidForm] = useState(true)\n\n    const [firstNameErrors, setFirstNameErrors] = useState([])\n    const [lastNameErrors, setLastNameErrors] = useState([])\n    const [prepaidNumberErrors, setPrepaidNumberErrors] = useState([])\n    const [passwordErrors, setPasswordErrors] = useState([])\n    const [repeatPasswordErrors, setRepeatPasswordErrors] = useState([])\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        setFirstName(props.firstName)\n        setLastName(props.lastName)\n        setSelectedPrepaid(props.selectedPrepaid)\n        setPrepaidNumber(props.prepaidNumber)\n\n    },[props.firstName, props.lastName, props.selectedPrepaid, props.prepaidNumber])\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        let error = false\n        let errors = []\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setFirstNameErrors(errors)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setLastNameErrors(errors)\n                break;\n            case \"password\":\n                setNewPassword(event.target.value)\n                if(event.target.value !== '' && event.target.value.length < 8) {\n                    errors.push(t(\"errors.passwordTooShort\"))\n                    error = true\n                }\n                if(event.target.value !== '' && repeatPassword !== event.target.value) {\n                    setRepeatPasswordErrors([t(\"errors.passwordMismatch\")])\n                    error = true\n                }\n                setPasswordErrors(errors)\n                break;\n            case \"prepaidNumber\":\n                setPrepaidNumber(event.target.value)\n                if(!/^\\d+$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.numeric\"))\n                    error = true\n                }\n                if(event.target.value.length > 20) {\n                    errors.push(t(\"errors.prepaidNumberTooLong\"))\n                    error = true\n                }\n                setPrepaidNumberErrors(errors)\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value)\n                if(event.target.value !== '' && newPassword !== '' && newPassword !== event.target.value) {\n                    errors.push(t(\"errors.passwordMismatch\"))\n                    error = true\n                }\n                setRepeatPasswordErrors(errors)\n                break;\n        }\n        setInvalidForm(error)\n    }\n\n    const isPresent = (value) => {\n        let is = true\n        if(!value) {\n            is = false\n        }\n        return is\n    }\n\n    const handleSelect = (prepaid) => {\n        setSelectedPrepaid(prepaid)\n        if(prepaidNumber === '') {\n            let error = t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.required\")\n            setPrepaidNumberErrors([error])\n        }\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n\n    }\n\n    const handleProfileUpdate = async () => {\n        setInvalidForm(true)\n        const response = await PatientCalls.updateProfile({\n            firstName: firstName,\n            lastName: lastName,\n            newPassword: newPassword,\n            repeatPassword: repeatPassword,\n            prepaid: selectedPrepaid,\n            prepaidNumber: prepaidNumber\n        }, localStorage.getItem('email'))\n        if (response && response.ok) {\n            props.handleOk()\n        }\n        if (response.status === 401) {\n            props.logout()\n        }\n        setInvalidForm(false)\n        handleShow()\n    }\n\n    return (\n        <>\n            <Button variant=\"edit-remove-button doc-button-color shadow-sm edit-button app-btn\"\n                    onClick={() => handleShow()} size=\"lg\"\n                    className=\"add-margin\">\n                {t(\"editProfileButton\")}\n            </Button>\n            <Modal show={show} onHide={() => handleShow()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t('editProfileButton')}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                            <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                            <Form.Control value={firstName}\n                                          placeholder={t(\"FORM.enterFirstName\")}\n                                          onChange={onChange}/>\n                            {firstNameErrors.length !== 0 && (\n                                    <div className=\"form-group\">\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            <ul>\n                                                {firstNameErrors.map((error) => {\n                                                    return (\n                                                        <li>{error}</li>\n                                                    )\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </div>\n                            )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                            <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                            <Form.Control value={lastName}\n                                          placeholder={t(\"FORM.enterLastName\")}\n                                          onChange={onChange}/>\n                            {lastNameErrors.length !== 0 && (\n                                                        <div className=\"form-group\">\n                                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                                <ul>\n                                                                    {lastNameErrors.map((error) => {\n                                                                        return (\n                                                                            <li>{error}</li>\n                                                                        )\n                                                                    })}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"prepaid\">\n                            <Form.Label>{t(\"FORM.prepaid\")}: {selectedPrepaid === \"undefined\"? \"\":selectedPrepaid}</Form.Label>\n                            <DropDownList iterable={props.prepaids}\n                                          selectedElement={selectedPrepaid}\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectPrepaid\")}\n                                          id='prepaid'/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"prepaidNumber\">\n                            <Form.Label>{t(\"FORM.prepaidNumber\")}</Form.Label>\n                            <Form.Control value={prepaidNumber}\n                                          type=\"text\"\n                                          placeholder={t(\"FORM.enterPrepaidNumber\")}\n                                          onChange={onChange}/>\n                            {prepaidNumberErrors.length !== 0 && (\n                                                    <div className=\"form-group\">\n                                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                                            <ul>\n                                                                {prepaidNumberErrors.map((error) => {\n                                                                    return (\n                                                                        <li>{error}</li>\n                                                                    )\n                                                                })}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"newPassword\">\n                            <Form.Label>{t(\"FORM.password\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.password\")}\n                                          onChange={onChange}/>\n                            {passwordErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {passwordErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n                            <Form.Label>{t(\"FORM.repeatPassword\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.repeatPassword\")}\n                                          onChange={onChange}/>\n\n                            {repeatPasswordErrors.length !== 0 && (\n                                                        <div className=\"form-group\">\n                                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                                <ul>\n                                                                    {repeatPasswordErrors.map((error) => {\n                                                                        return (\n                                                                            <li>{error}</li>\n                                                                        )\n                                                                    })}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    )}\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => handleShow()}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" disabled={invalidForm} onClick={handleProfileUpdate}>\n                        {t('actions.edit')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\nexport default EditUserProfileModal","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\nimport '../../i18n/i18n'\nimport {Link, useNavigate} from \"react-router-dom\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport EditUserProfileModal from \"../Modals/EditUserProfileModal\";\nimport AppointmentCalls from \"../../api/AppointmentCalls\";\nimport {dateToString} from \"../../utils/dateHelper\";\nimport './Profile.css'\nimport ApiCalls from \"../../api/apiCalls\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction Profile(props) {\n    const [selectedPrepaid, setSelectedPrepaid] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [id, setId] = useState('')\n    const [prepaidNumber, setPrepaidNumber] = useState('')\n    const [prepaids, setPrepaids] = useState([])\n    const [appointments, setAppointments] = useState([])\n    let cachedClinic = {}\n    let cachedDoctor = {}\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchProfile()\n            await fetchPrepaids()\n            await fetchAppointments()\n        }\n        fetchData();\n\n    }, [])\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaid();\n        if (response && response.ok) {\n            setPrepaids(response.data.map(prepaid => prepaid.name))\n        }\n    }\n\n    const fetchProfile = async () => {\n        const response = await PatientCalls.getProfile(localStorage.getItem('email'));\n        if (response && response.ok) {\n            setFirstName(response.data.firstName)\n            // localStorage.setItem('firstName', response.data.firstName)\n            setLastName(response.data.lastName)\n            // localStorage.setItem('lastName', response.data.lastName)\n            setSelectedPrepaid(response.data.prepaid)\n            // localStorage.setItem('prepaid', response.data.prepaid)\n            setPrepaidNumber(response.data.prepaidNumber)\n            // localStorage.setItem('prepaidNumber', response.data.prepaidNumber)\n            setId(response.data.id)\n        } else if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n\n    const fetchEntity = async (path) => {\n        const response = await ApiCalls.makeGetCall(path);\n        if (response && response.ok) {\n            return response.data\n        }\n    }\n\n    const fetchAppointments = async () => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        const response = await AppointmentCalls.getAppointment(email, 0)\n        if (response && response.ok) {\n            const list = response.data.slice(0, 3)\n            let apps = []\n            for (let i = 0; i < list.length; i++) {\n                let doctor = cachedDoctor[list[i].doctor]\n                if (doctor === undefined) {\n                    doctor =  await fetchEntity(list[i].doctor)\n                    cachedDoctor[list[i].doctor] = doctor\n                }\n                let clinic = cachedClinic[list[i].clinic]\n                if (clinic === undefined) {\n                    clinic =  await fetchEntity(list[i].clinic)\n                    cachedClinic[list[i].clinic] = clinic\n                }\n                const app = {\n                    id: list[i].id,\n                    clinic: clinic,\n                    year: list[i].year,\n                    month: list[i].month,\n                    day: list[i].day,\n                    hour: list[i].hour,\n                    dayOfWeek: list[i].dayOfWeek,\n                    doctor: doctor,\n                    patient: list[i].patient\n                }\n                apps.push(app)\n            }\n            setAppointments(apps)\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n    }\n    const handleProfileUpdateOk = async () => {\n            await fetchProfile()\n            await fetchPrepaids()\n    }\n\n    const handleDeleteProfile = async () => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            props.logout()\n            navigate(`/${WEB_CONTEXT}/login`)\n        }\n        const response = await PatientCalls.deleteProfile(email)\n        if (response && response.ok) {\n            props.logout()\n            navigate('/' + WEB_CONTEXT)\n        }\n    }\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <h3 className=\"mt-3\">\n                            {t(\"welcome\")}, {firstName} {lastName}!\n                        </h3>\n                        <hr />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"info-col\">\n                        <h4>\n                            {t('NAVBAR.profile')}\n                        </h4>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.name')}:</b> {firstName} {lastName}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.email')}:</b> {localStorage.getItem('email')}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.id')}:</b> {id}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.prepaid')}:</b> {selectedPrepaid !== undefined? selectedPrepaid: t(\"FORM.none\")}\n                        </div>\n                        {selectedPrepaid &&\n                            <div className=\"info-label\">\n                                <b>{t('FORM.prepaidNumber')}:</b> {prepaidNumber}\n                            </div>\n                        }\n                    </Col>\n                    <Col>\n                        <h4>{t('nextApp')}</h4>\n                        <ul style={{display:\"grid\", justifyItems:\"flex-start\"}}>\n                            {appointments.map(app => {\n                                return(\n                                    <li className=\"my-3\">\n                                        <b>{dateToString(app, t)}</b> {t(\"with\")}&nbsp;\n                                        <b>{app.doctor.firstName + ' ' + app.doctor.lastName}</b>&nbsp;({app.clinic.name})\n                                    </li>\n                                )\n                            })}\n                        </ul>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"col-button\">\n                        <EditUserProfileModal prepaids={prepaids}\n                                              handleOk={handleProfileUpdateOk}\n                                              logout={props.logout}\n                                              firstName={firstName}\n                                              lastName={lastName}\n                                              selectedPrepaid={selectedPrepaid}\n                                              prepaidNumber={prepaidNumber}\n                        />\n                        <Button className=\"mx-3 shadow-sm remove-button-color edit-remove-button edit-button app-btn\"\n                                onClick={handleDeleteProfile}> {t('deleteProfile')}</Button>\n                    </Col>\n                    <Col className=\"col-button\">\n                        <Link\n                            className=\"edit-remove-button doc-button-color shadow-sm edit-button btn app-btn\"\n                            role=\"button\"\n                            to={`/${WEB_CONTEXT}/appointments`}>{t('NAVBAR.appointments')}\n                        </Link>\n                    </Col>\n                </Row>\n                <hr/>\n                <Row>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Profile;","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {useNavigate} from \"react-router-dom\";\nimport AppointmentCalls from \"../../api/AppointmentCalls\";\nimport {Button, Card, Container, Row} from \"react-bootstrap\";\nimport './Favorites.css'\nimport {dateToString, getMonth, getWeekDate} from \"../../utils/dateHelper\";\nimport {getPaths} from \"../../utils/paginationHelper\";\nimport ApiCalls from \"../../api/apiCalls\";\nimport {CURRENT, NEXT, PREV} from \"./Constants\";\nimport {WEB_CONTEXT} from \"../../Constants\";\n\nfunction Appointments(props) {\n    const [appointments, setAppointments] = useState([])\n    const [paths, setPaths] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n    let cachedClinic = {}\n    let cachedPatient = {}\n    let cachedDoctors = {}\n\n    const fetchAppointments = async () => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n        setIsLoading(true)\n        const response = await AppointmentCalls.getAppointment(email, 0)\n        await handleResponse(response)\n    }\n\n    const fetchPage = async (page) => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        } else {\n            setIsLoading(true)\n            const response = await ApiCalls.makeGetCall(paths[page])\n            await handleResponse(response)\n        }\n    }\n\n    const handleResponse = async (response) => {\n        if (response && response.ok) {\n            const list = response.data\n            let apps = []\n            if (props.user === \"doctor\") {\n                for (let i = 0; i < list.length; i++) {\n                    let patient = cachedPatient[list[i].patient]\n                    if (patient === undefined) {\n                        patient = await fetchAuthEntity(list[i].patient)\n                        cachedPatient[list[i].patient] = patient\n                    }\n\n                    let clinic = cachedClinic[list[i].clinic]\n                    if (clinic === undefined) {\n                        clinic =  await fetchEntity(list[i].clinic)\n                        cachedClinic[list[i].clinic] = clinic\n                    }\n                    const app = {\n                        id: list[i].id,\n                        clinic: clinic,\n                        year: list[i].year,\n                        month: list[i].month,\n                        day: list[i].day,\n                        hour: list[i].hour,\n                        dayOfWeek: list[i].dayOfWeek,\n                        doctor: list[i].doctor,\n                        patient: patient\n                    }\n                    apps.push(app)\n                }\n            } else {\n                for (let i = 0; i < list.length; i++) {\n                    let doctor = cachedDoctors[list[i].doctor]\n                    if (doctor === undefined) {\n                        doctor =  await fetchEntity(list[i].doctor)\n                        cachedDoctors[list[i].doctor] = doctor\n                    }\n                    let clinic = cachedClinic[list[i].clinic]\n                    if (clinic === undefined) {\n                        clinic =  await fetchEntity(list[i].clinic)\n                        cachedClinic[list[i].clinic] = clinic\n                    }\n                    const app = {\n                        id: list[i].id,\n                        clinic: clinic,\n                        year: list[i].year,\n                        month: list[i].month,\n                        day: list[i].day,\n                        hour: list[i].hour,\n                        dayOfWeek: list[i].dayOfWeek,\n                        doctor: doctor,\n                        patient:list[i].patient\n                    }\n                    apps.push(app)\n                }\n            }\n            setAppointments(apps)\n            setPaths(getPaths(response.headers.link))\n            setMessage(\"\")\n            setIsLoading(false)\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"user-not-found\")\n                setMessage(\"errors.noLoggedDoc\")\n        }\n    }\n\n    const fetchEntity = async (path) => {\n        const response = await ApiCalls.makeGetCall(path);\n        if (response && response.ok) {\n            return response.data\n        }\n    }\n    const fetchAuthEntity = async (path) => {\n        const response = await ApiCalls.makeGetCall(path);\n        if (response && response.ok) {\n            return response.data\n        }\n    }\n\n    const deleteAppointment = async (app) => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n        const response = await AppointmentCalls.deleteAppointment(email, app.id)\n        if (response && response.ok) {\n            await fetchPage(CURRENT)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            props.logout()\n            navigate(\"/\" + WEB_CONTEXT + \"/login\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n            if (response.data === \"appointment-not-found\")\n                setMessage(\"errors.noAppointmentFound\")\n        }\n    }\n\n    useEffect( () => {\n        async function fetchData () {\n            await fetchAppointments();\n        }\n        fetchData();\n    }, [])\n\n    const nextPage = async () => {\n        setMessage(\"\")\n        await fetchPage(NEXT)\n\n    }\n    const prevPage = async () => {\n        setMessage(\"\")\n        await fetchPage(PREV)\n    }\n\n    const renderPrevButton = () => {\n        if (paths[PREV]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (paths[NEXT]) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return(\n        <>\n            <Row style={{display:\"flex\"}}>\n                <h2 className=\"m-3 fav-title\">{t(\"NAVBAR.appointments\")}</h2>\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {t(message)}\n                        </div>\n                    </div>\n                )}\n                {appointments.length === 0 && !isLoading && <h4 className=\"m-3 no-fav\">{t(\"USER.noApp\")}</h4>}\n            </Row>\n            <Container>\n                <div className=\"admin-info-container app-user-container\">\n                    {appointments.map((ap) => {\n                        return (\n                            <Card className=\"mb-3 app-card shadow\">\n                                <Card.Body>\n                                    <Card.Title><b>{dateToString(ap, t)}</b></Card.Title>\n                                    <Card.Text>\n                                        {props.user === \"patient\"? <div>\n                                            {t(\"USER.doc\")}{ap.doctor.firstName + ' ' + ap.doctor.lastName} ({ap.doctor.email})\n                                        </div>: <div>\n                                            {t(\"USER.patient\")}{ap.patient.firstName + ' ' + ap.patient.lastName} ({ap.patient.email})\n                                        </div> }\n\n                                        <div>\n                                            {t(\"USER.clinic\")} {ap.clinic.name} - {ap.clinic.location} ({ap.clinic.address})\n                                        </div>\n\n                                    </Card.Text>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => {deleteAppointment(ap)}}>\n                                    {t('cancelButton')}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </>\n    )\n\n}\nexport default Appointments;","import './App.css';\nimport {BrowserRouter as Router, Routes, Route, Navigate, useNavigate} from \"react-router-dom\";\nimport Home from './Components/Pages/Home'\nimport Navbar from \"./Components/NavBar\";\nimport AdminHome from \"./Components/Pages/AdminHome\";\nimport Locations from \"./Components/Pages/Locations\";\nimport Specialties from \"./Components/Pages/Specialties\";\nimport Clinics from \"./Components/Pages/Clinics\";\nimport Prepaids from \"./Components/Pages/Prepaids\";\nimport SignUp from \"./Components/Pages/SignUp\";\nimport ClinicPrepaids from './Components/Pages/ClinicPrepaids';\nimport Doctors from \"./Components/Pages/Doctors\";\nimport WrappedLogin from \"./Components/Pages/Login\";\nimport \"../src/i18n/i18n\"\nimport DoctorHome from \"./Components/Pages/DoctorHome\";\nimport DoctorClinics from \"./Components/Pages/DoctorClinics\";\nimport DoctorClinicSchedule from \"./Components/Pages/DoctorClinicSchedule\";\nimport UserDoctorProfile from \"./Components/Pages/UserDoctorProfile\";\nimport Favorites from \"./Components/Pages/Favorites\";\nimport Profile from \"./Components/Pages/Profile\";\nimport Appointments from \"./Components/Pages/Appointments\";\nimport {useState} from \"react\";\nimport apiCalls from \"./api/apiCalls\";\nimport {WEB_CONTEXT} from \"./Constants\";\n\nfunction App() {\n    const [role, setRole] = useState(localStorage.getItem('role'));\n\n    const isAuth = () => role !== null;\n\n    const isAdmin = () => isAuth(role)? role === 'ROLE_ADMIN' : false;\n    const isDoc = () => isAuth(role)? role === 'ROLE_DOCTOR' : false;\n    const isUser = () => isAuth(role)? role === 'ROLE_USER' : false;\n\n    function AdminRoute({ children }) {\n        const auth = isAdmin();\n        return auth ? children : <Navigate to={\"/\"  + WEB_CONTEXT + \"/login\"} />;\n    }\n\n    function DoctorRoute ({children}) {\n        const auth = isDoc();\n        return auth ? children : <Navigate to={\"/\"  + WEB_CONTEXT + \"/login\"} />;\n    }\n\n    function UserRoute ({children}) {\n        const auth = isUser();\n        return auth ? children : <Navigate to={\"/\"  + WEB_CONTEXT + \"/login\"} />;\n    }\n\n    function handleLogout ()  {\n        apiCalls.logout();\n        setRole(null);\n    }\n\n    function handleRoleLogin (role) {\n        setRole(role)\n        localStorage.setItem('role', role)\n    }\n\n  return (\n    <div className=\"App\">\n        <div className=\"App-header\">\n            <Router>\n                <Navbar isAuth={isAuth} role={role} setRole={setRole}/>\n                <Routes>\n                    <Route exact path={\"/\"  + WEB_CONTEXT} element={<Home logout={handleLogout} />}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT+ \"/appointments\"} element={<UserRoute><Appointments logout={handleLogout} user=\"patient\" /></UserRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/:license/profile\"} element={<UserDoctorProfile logout={handleLogout} isUser={isUser}/>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/doctor\"} element={<DoctorRoute><DoctorHome logout={handleLogout} /></DoctorRoute>} />\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/doctor/clinics\"} element={<DoctorRoute><DoctorClinics logout={handleLogout} /></DoctorRoute>} />\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/doctor/appointments\"} element={<DoctorRoute><Appointments logout={handleLogout} user=\"doctor\" /></DoctorRoute>} />\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/doctor/:license/clinics/:id/schedule\"}\n                           element={<DoctorRoute><DoctorClinicSchedule logout={handleLogout} /></DoctorRoute>} />\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/\"} element={<AdminRoute><AdminHome logout={handleLogout} /></AdminRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/locations\"} element={<AdminRoute><Locations logout={handleLogout} /></AdminRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/specialties\"} element={<AdminRoute><Specialties logout={handleLogout} /></AdminRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/clinics\"} element={<AdminRoute><Clinics logout={handleLogout} /></AdminRoute>} />\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/prepaids\"} element={<AdminRoute><Prepaids logout={handleLogout} /></AdminRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/clinics/:id/prepaids\"} element={<AdminRoute><ClinicPrepaids logout={handleLogout} /></AdminRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/admin/doctors\"} element={<AdminRoute><Doctors logout={handleLogout} /></AdminRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/login\"} element={<WrappedLogin setRole={handleRoleLogin} logout={handleLogout} />}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/signUp\"} element={<SignUp logout={handleLogout} setRole={handleRoleLogin} />}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/favorites\"} element={<UserRoute><Favorites logout={handleLogout} /></UserRoute>}/>\n                    <Route exact path={\"/\"  + WEB_CONTEXT + \"/profile\"} element={<UserRoute><Profile logout={handleLogout} /></UserRoute>}/>\n                </Routes>\n            </Router>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}