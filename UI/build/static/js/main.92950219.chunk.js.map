{"version":3,"sources":["Components/DropDownList.js","Constants.js","api/index.js","api/Constants.js","api/LocationCalls.js","api/SpecialtyCalls.js","api/PrepaidCalls.js","Components/SearchBar.js","api/DoctorCalls.js","Components/Pages/Home.js","api/apiCalls.js","i18n/i18n.js","i18n/translations-en.js","i18n/translations-es.js","Components/NavBar.js","Components/Pages/AdminHome.js","Components/Modals/SinglePropertyAddModal.js","Components/Pages/Locations.js","Components/Pages/Specialties.js","Components/Modals/ClinicEditModal.js","api/ClinicCalls.js","Components/Pages/Clinics.js","Components/Pages/Prepaids.js","Components/Pages/SignUp.js","Components/Modals/ClinicPrepaidAddModal.js","Components/Pages/ClinicPrepaids.js","Components/Modals/DoctorAddModal.js","Components/Pages/Doctors.js","Components/Pages/Login.js","Components/Modals/EditDocProfileModal.js","Components/Modals/ImageSelectModal.js","api/ImageCalls.js","Components/Pages/DoctorHome.js","Components/Modals/DoctorClinicAddModal.js","Components/Modals/EditPriceModal.js","Components/Pages/DoctorClinics.js","utils/dateHelper.js","Components/Modals/ModifyScheduleModal.js","Components/Pages/DoctorClinicSchedule.js","api/AppointmentCalls.js","api/PatientCalls.js","Components/Pages/UserDoctorProfile.js","Components/Pages/Favorites.js","Components/Modals/EditUserProfileModal.js","Components/Pages/Profile.js","Components/Pages/Appointments.js","App.js","index.js"],"names":["DropDownList","props","useState","selectedElement","Dropdown","Toggle","id","variant","elementType","Menu","className","iterable","map","element","Item","eventKey","active","onClick","handleSelect","BASE_URL","api","applyCaseMiddleware","axios","create","baseURL","preservedKeys","axiosInstance","PAGE_QUERY","DAY_QUERY","LICENSE_QUERY","PATIENT_PATH","PREPAIDS_PATH","LOCATIONS_PATH","SPECIALTIES_PATH","DOCTORS_PATH","CLINICS_PATH","ALL_PATH","IMAGE_PATH","APPOINTMENT_PATH","getLocations","pag","a","get","cons","getAllLocations","addLocation","data","post","headers","localStorage","getItem","deleteLocation","name","delete","getSpecialties","getAllSpecialties","addSpecialty","deleteSpecialty","getAllPrepaids","getPrepaids","deletePrepaid","addPrepaid","SearchBar","t","useTranslation","specialty","selectedSpecialty","setSelectedSpecialty","location","selectedLocation","setSelectedLocation","prepaid","selectedPrepaid","setSelectedPrepaid","firstName","setFirstName","lastName","setLastName","consultPrice","setConsultPrice","locations","setLocations","specialties","setSpecialties","prepaids","setPrepaids","fetchLocations","LocationCalls","response","ok","push","fetchSpecialties","SpecialtyCalls","fetchPrepaids","PrepaidCalls","useEffect","onChange","event","target","value","console","log","style","width","Form","FormGroup","controlId","Label","loc","spe","pre","Control","placeholder","Group","InputGroup","Text","FormControl","Button","handleSearch","getDoctorsAdmin","searchDocs","getSearchQuery","addDoctor","deleteDoctor","license","editDoctor","put","getClinics","getAllClinics","getDocByEmail","email","getDocByLicense","addDoctorToClinic","deleteDoctorsClinic","clinic","editPrice","clinicId","price","getSchedule","addSchedule","day","hour","deleteSchedule","queryParams","undefined","query","i","length","Home","useSearchParams","searchParams","setSearchParams","doctors","setDoctors","setMessage","searchCriteria","setSearchCriteria","maxPage","setMaxPage","page","setPage","loading","setLoading","fetchAllDoctorsWithAvailability","DoctorCalls","Number","xMaxPage","search","nextPage","newPage","prevPage","criteria","Row","Col","xs","Container","doctor","Card","color","height","Body","Title","user","role","to","renderPrevButton","renderNextButton","marginRight","login","password","setItem","params","URLSearchParams","append","then","resp","status","xAuthToken","xRole","signUp","logout","removeItem","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","NAVBAR","favourites","appointments","profile","clinics","USER","seeProfile","dataProfile","emptyFavorites","noApp","fav","doc","patient","ADMIN","seeDocs","seeClinics","seeLocations","seeSpecialties","seePrepaids","DOC","addDoc","subscribeClinic","image","CLINIC","addClinic","edit","FORM","enterFirstName","enterLastName","document","enterDocument","selectSpecialty","enterLicense","phoneNumber","enterPhone","enterEmail","enterPassword","repeatPassword","newPassword","prepaidNumber","enterPrepaidNumber","enterName","address","enterAddress","selectLocation","selectPrepaid","selectClinic","enterPrice","schedule","daySelect","hourSelect","none","maxPrice","dateTime","selectDateTime","errors","licenseInUse","emailInUse","specialtyNotFound","passwordMismatch","doctorNotFound","locationNotFound","clinicExists","clinicNotFoundEdit","clinicNotFoundDelete","locationNotFoundDelete","clinicDependency","locationExists","specialtyNotFoundDelete","doctorDependency","specialtyExists","prepaidNotFoundDelete","prepaidExists","clinicNotFound","prepaidNotFound","clinicPrepaidNotFoundDelete","docLoggedNotFound","doctorNotFoundEdit","noLoggedDoc","noDocEmail","required","numeric","passwordTooShort","alphabetic","invalidEmail","invalidDocumentLength","prepaidNumberTooLong","docClinicNotFound","imageBroken","notSupported","scheduleExists","scheduleNotFoundDelete","scheduleOtherClinicDelete","selectTime","datePast","outOfSchedule","appointmentExists","doctorAppointment","patientAppointment","noDocFound","noPatientEmail","favExists","noAppointmentFound","alreadySubscribed","actions","add","upload","makeApp","cancel","update","CAL","mon","tue","wed","thu","fri","sat","sun","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","deleteButton","prevButton","nextButton","closeButton","fieldRequired","scheduleButton","welcome","editProfileButton","changeImgButton","deleteImgButton","cancelButton","with","nextApp","es","NavBar","navigate","useNavigate","useLocation","items","setItems","userNavbarItems","link","text","docNavBarItems","isAuth","getItems","Navbar","expand","sticky","justifyContent","Brand","href","getRoleHome","item","Nav","class","Link","ApiCalls","window","reload","ButtonGroup","changeLanguage","AdminHome","marginLeft","Img","src","verticalAlign","SinglePropertyAddModal","show","setShow","newProperty","setNewProperty","handleShow","size","property","Modal","onHide","Header","Footer","newProp","handleAdd","Locations","message","newLocation","Specialties","newSpecialty","ClinicEditModal","setAddress","setName","setLocation","getAction","action","hideModal","handleEdit","getClinic","getClinicPrepaids","getAllClinicPrepaids","addClinicPrepaid","prepaidId","editClinic","deleteClinic","deleteClinicPrepaid","Clinics","setClinics","editableClinic","setEditableClinic","setEditIndex","setAction","fetchClinics","ClinicCalls","fetchLocation","newClinic","editedClinic","index","Prepaids","deletePrepaids","newPrepaid","SignUp","setEmail","setPassword","setRepeatPassword","setDocument","setPrepaidNumber","firstNameErrors","setFirstNameErrors","lastNameErrors","setLastNameErrors","emailErrors","setEmailErrors","prepaidNumberErrors","setPrepaidNumberErrors","passwordErrors","setPasswordErrors","repeatPasswordErrors","setRepeatPasswordErrors","documentErrors","setDocumentErrors","invalidForm","setInvalidForm","isPresent","is","handleSignUp","e","preventDefault","error","test","onSubmit","type","disabled","ClinicPrepaidAddModal","setNewPrepaid","allPrepaids","filter","includes","ClinicPrepaids","useParams","prepaidClinics","setPrepaidClinics","allPrepaidClinics","setAllPrepaidClinics","setAllPrepaids","setClinic","fetchAllClinicPrepaids","fetchClinicPrepaids","fetchClinic","DoctorAddModal","setLicense","setPhoneNumber","Doctors","fetchDoctors","newDoctor","deleteDoctors","Login","handleLogin","bind","onChangeEmail","onChangePassword","state","this","setState","form","validateAll","checkBtn","context","_errors","resMessage","toString","ref","c","htmlFor","validations","display","Component","WrappedLogin","EditDocProfileModal","setNewPassword","handleClick","ImageSelectModal","selectedImage","setSelectedImage","files","formData","FormData","handleUpload","onUploadImage","uploadImage","img","getImage","deleteImage","DoctorHome","setDoctor","setImage","fetchDoctor","userData","fetchImage","ImageCalls","getDoctorsFirstName","getDoctorsLastName","handleUnauth","handleDeleteImage","DoctorClinicAddModal","selectedClinic","setSelectedClinic","setPrice","allClinics","clinicName","selected","EditPriceModal","newPrice","setNewPrice","DoctorClinics","setAllClinics","allDoctorClinics","setAllDoctorClinics","fetchDoctorsClinics","fetchAllDoctorClinics","fetchAllClinics","newDocClinic","handleErrors","handleEditPrice","handleDelete","dc","String","getWeekDate","weekDate","getMonth","monthInt","dateToString","app","dayWeek","month","year","ModifyScheduleModal","setDay","setHour","available","setAvailable","getAllSchedules","availableList","j","parseDays","dayString","selectedDay","s","selectedHour","DoctorClinicSchedule","setSchedule","fetchSchedule","getRow","row","rowSchedule","days","scheduleDay","Table","hours","getAllRows","getAvailableAppointments","makeAppointment","getAppointment","deleteAppointment","time","deleteQueryParams","getFavoriteDoctors","deleteFavoriteDoctor","isFavorite","addFavoriteDoctor","getProfile","updateProfile","UserDoctorProfile","selectedDateTime","setSelectedDateTime","setIsFavorite","fetchAvailableAppointments","AppointmentCalls","fetchIsFavorite","PatientCalls","handleMakeApp","makeFavorite","deleteFavorite","getDateTimes","appointment","doctorClinic","alignSelf","date","dateFormated","Favorites","isLoading","setIsLoading","fetchFavorites","removeFromFavorites","EditUserProfileModal","handleProfileUpdate","handleOk","Profile","setId","setAppointments","fetchProfile","fetchAppointments","slice","handleProfileUpdateOk","justifyItems","Appointments","ap","App","AdminRoute","children","DoctorRoute","UserRoute","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.92950219.chunk.js","sourcesContent":["import {Dropdown} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport './DropDownList.css'\n\nfunction DropDownList(props) {\n\n    const [selectedElement, setSelectedElement] = useState(props.selectedElement)\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle  id={props.id} variant=\"secondary\">\n                {props.elementType}\n            </Dropdown.Toggle>\n            <Dropdown.Menu variant=\"dark\" className=\"dropdown-list\">\n                {props.iterable.map(element => {\n                    if(element === selectedElement) {\n                        return <Dropdown.Item\n                            eventKey={element} active\n                            onClick={() => {props.handleSelect(element)}}>\n                            {element}\n                        </Dropdown.Item>\n                    } else {\n                        return <Dropdown.Item eventKey={element}\n                                              onClick={() => {props.handleSelect(element)}}>\n                            {element}\n                        </Dropdown.Item>\n                    }\n                })}\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport default DropDownList","// export const BASE_URL = \"http://pawserver.it.itba.edu.ar/paw-2019b-4/api\"\nexport const BASE_URL = \"http://localhost:8080/api\"","import axios from 'axios';\nimport { create } from 'apisauce';\nimport applyCaseMiddleware from 'axios-case-converter';\nimport {BASE_URL} from \"../Constants\";\n\nconst options = {\n    preservedKeys: ['firstName', 'lastName', 'repeatPassword', 'newPassword',\n        'phoneNumber', 'X-AUTH-TOKEN', 'consultPrice', 'profileImage', 'prepaidNumber']\n}\nconst api = applyCaseMiddleware(axios.create({\n    baseURL: BASE_URL\n}), options);\n\nexport default create({ axiosInstance: api });","export const PAGE_QUERY = 'page=';\nexport const UNAVAILABLE_QUERY = 'includeUnavailables='\nexport const PRICE_QUERY = 'price='\nexport const HOUR_QUERY = 'hour='\nexport const DAY_QUERY = 'day='\nexport const LICENSE_QUERY = 'license='\nexport const CLINIC_QUERY = 'clinic='\nexport const YEAR_QUERY = 'year='\nexport const MONTH_QUERY = 'month='\nexport const TIME_QUERY = 'time='\n\nexport const PATIENT_PATH = '/patients';\nexport const FAVORITE_PATH = '/favorites'\nexport const LOGIN_PATH = '/login';\nexport const PREPAIDS_PATH = '/prepaids';\nexport const LOCATIONS_PATH = '/locations';\nexport const SPECIALTIES_PATH = '/specialties';\nexport const DOCTORS_PATH = '/doctors';\nexport const CLINICS_PATH = '/clinics';\nexport const ALL_PATH = '/all';\nexport const EMAIL_PATH = '/email';\nexport const IMAGE_PATH = '/image';\nexport const APPOINTMENT_PATH = '/appointments';\nexport const AVAILABLE_PATH = '/available'\n","import api from \"./index\";\nimport * as cons from './Constants.js'\n\n// Location Endpoints\nconst getLocations = async (pag) => api.get(cons.LOCATIONS_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst getAllLocations = async () => api.get(cons.LOCATIONS_PATH + cons.ALL_PATH)\nconst addLocation = async (data) => api.post(\n    cons.LOCATIONS_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n);\nconst deleteLocation = async (name) => api.delete(\n    cons.LOCATIONS_PATH + \"/\" + name,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\n\nexport default {\n    getLocations,\n    getAllLocations,\n    addLocation,\n    deleteLocation\n}","import api from \"./index\";\nimport * as cons from './Constants.js'\n\n// Specialties calls\nconst getSpecialties = async (pag) => api.get(cons.SPECIALTIES_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst getAllSpecialties = async () => api.get(cons.SPECIALTIES_PATH + cons.ALL_PATH);\nconst addSpecialty = async (data) => api.post(\n    cons.SPECIALTIES_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n);\nconst deleteSpecialty = async (name) => api.delete(cons.SPECIALTIES_PATH + \"/\" + name,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\n\nexport default {\n    getSpecialties,\n    getAllSpecialties,\n    addSpecialty,\n    deleteSpecialty\n}\n","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst getAllPrepaids = async () => api.get(cons.PREPAIDS_PATH + cons.ALL_PATH)\nconst getPrepaids = async (pag) => api.get(cons.PREPAIDS_PATH + \"?\" + cons.PAGE_QUERY + pag)\nconst deletePrepaid = async (name) => api.delete(\n    cons.PREPAIDS_PATH + \"/\" + name,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst addPrepaid = async (data) => api.post(\n    cons.PREPAIDS_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n);\n\nexport default {\n    getAllPrepaids,\n    getPrepaids,\n    deletePrepaid,\n    addPrepaid\n}\n\n","import React, {useEffect, useState} from 'react';\nimport {Form, FormControl, FormGroup, InputGroup, Button} from \"react-bootstrap\";\nimport DropDownList from \"./DropDownList\";\nimport LocationCalls from \"../api/LocationCalls\";\nimport SpecialtyCalls from \"../api/SpecialtyCalls\";\nimport PrepaidCalls from \"../api/PrepaidCalls\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction SearchBar(props) {\n    const {t} = useTranslation()\n    const [selectedSpecialty, setSelectedSpecialty] = useState(props.specialty === \"null\"? '-': props.specialty)\n    const [selectedLocation, setSelectedLocation] = useState(props.location === \"null\"? '-': props.location)\n    const [selectedPrepaid, setSelectedPrepaid] = useState(props.prepaid === \"null\"? '-': props.prepaid)\n    const [firstName, setFirstName] = useState(props.firstName === \"null\"? '': props.firstName)\n    const [lastName, setLastName] = useState(props.lastName === \"null\"? '': props.lastName)\n    const [consultPrice, setConsultPrice] = useState(props.consultPrice === \"null\" || props.consultPrice  === \"0\"?\n        '': props.consultPrice)\n    const [locations, setLocations] = useState([])\n    const [specialties, setSpecialties] = useState([])\n    const [prepaids, setPrepaids] = useState([])\n\n\n    const fetchLocations = async () => {\n        const response = await LocationCalls.getAllLocations();\n        if (response && response.ok) {\n            const data = response.data\n            data.push({name: '-'})\n            setLocations(data);\n\n        }\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getAllSpecialties();\n        if (response && response.ok) {\n            const data = response.data\n            data.push({name: '-'})\n            setSpecialties(data);\n        }\n\n    }\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaids();\n        if (response && response.ok) {\n            const data = response.data\n            data.push({name: '-'})\n            setPrepaids(data);\n        }\n    }\n\n    useEffect(async () => {\n        await fetchPrepaids();\n        await fetchLocations();\n        await fetchSpecialties();\n    }, [])\n\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                break;\n            case \"consultPrice\":\n                console.log(\" sss \" + event.target.value)\n                setConsultPrice(event.target.value)\n                break;\n        }\n    }\n\n    const handleSelectSpecialty = (specialty) => {\n        setSelectedSpecialty(specialty)\n    }\n\n    const handleSelectLocation = (location) => {\n        setSelectedLocation(location)\n    }\n\n    const handleSelectPrepaid = (prepaid) => {\n        setSelectedPrepaid(prepaid)\n    }\n\n    return (\n        <>\n            <div className=\"w3-sidebar w3-bar-block\" style={{width: '100%'}}>\n                <Form>\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"location\">\n                                    <Form.Label>{t(\"FORM.location\")} {selectedLocation}</Form.Label>\n                                    <DropDownList iterable={locations.map(loc => loc.name)}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelectLocation}\n                                                  elementType={t(\"FORM.selectLocation\")}\n                                                  id='location'/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"specialty\">\n                                    <Form.Label>{t(\"FORM.specialty\")} {selectedSpecialty}</Form.Label>\n                                    <DropDownList iterable={specialties.map(spe => spe.name)}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelectSpecialty}\n                                                  elementType={t(\"FORM.selectSpecialty\")}\n                                                  id='specialty'/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"prepaid\">\n                                    <Form.Label>{t(\"ADMIN.prepaid\")}: {selectedPrepaid}</Form.Label>\n                                    <DropDownList iterable={prepaids.map(pre => pre.name)}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelectPrepaid}\n                                                  elementType={t(\"FORM.selectPrepaid\")}\n                                                  id='prepaid'/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup className=\"mb-3\" controlId=\"firstName\">\n                                    <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                                    <Form.Control placeholder=\"Enter first name\" onChange={onChange}/>\n                                </FormGroup>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                                    <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                                    <Form.Control placeholder=\"Enter last name\" onChange={onChange}/>\n                                </Form.Group>\n                    </div>\n\n                    <div className=\"list-group-item list-group-item-action\">\n                        <FormGroup controlId=\"consultPrice\">\n                            <Form.Label>{t(\"FORM.maxPrice\")}</Form.Label>\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>$</InputGroup.Text>\n                                <FormControl aria-label=\"Amount (to the nearest dollar)\" onChange={onChange}/>\n                                <InputGroup.Text>.00</InputGroup.Text>\n                            </InputGroup>\n                        </FormGroup>\n                    </div>\n                    <div className=\"list-group-item list-group-item-action\">\n                        <Button className=\"doc-button-color\" onClick={() => props.handleSearch({\n                                firstName: firstName,\n                                lastName: lastName,\n                                location: selectedLocation === '-'? null : selectedLocation,\n                                specialty: selectedSpecialty === '-'? null : selectedSpecialty,\n                                prepaid: selectedPrepaid === '-'? null : selectedPrepaid,\n                                consultPrice: consultPrice\n                            }, 0\n                        )}>\n                            Search\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        </>\n    )\n}\n\nexport default SearchBar","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst getDoctorsAdmin = async (pag) => api.get(\n    cons.DOCTORS_PATH + cons.ALL_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst searchDocs = async (pag, location, specialty, firstName, lastName, consultPrice, prepaid) => api.get(\n    cons.DOCTORS_PATH + \"?\" + cons.PAGE_QUERY + pag\n    + getSearchQuery(location, specialty, firstName, lastName, consultPrice, prepaid))\nconst addDoctor = async (data) => api.post(\n    cons.DOCTORS_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n);\nconst deleteDoctor = async (license) => api.delete(\n    cons.DOCTORS_PATH + '/' + license,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst editDoctor = async (license, data) => api.put(\n    cons.DOCTORS_PATH + \"/\" + license,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n    )\n\nconst getClinics = async (license, pag) =>\n    api.get (cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"?\" + cons.PAGE_QUERY + pag)\nconst getAllClinics = async (license) =>\n    api.get (cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + cons.ALL_PATH)\nconst getDocByEmail = async (email) => api.get (cons.DOCTORS_PATH + cons.EMAIL_PATH + \"/\" + email)\nconst getDocByLicense = async (license) => api.get(cons.DOCTORS_PATH + \"/\" + license)\nconst addDoctorToClinic = async (data, license) => api.post(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst deleteDoctorsClinic = async (license, clinic) => api.delete(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinic,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\nconst editPrice = async (license, clinicId, price) => api.put(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinicId + \"?\" + cons.PRICE_QUERY + price,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\nconst getSchedule = async (license) => api.get(\n    cons.DOCTORS_PATH + \"/\" + license + \"/schedules\")\nconst addSchedule = async (license, clinicId, day, hour) => api.post(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinicId + \"/schedules\",\n    {\n        day: day,\n        hour: hour\n    },\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\nconst deleteSchedule = async (license, clinicId, day, hour) => api.delete(\n    cons.DOCTORS_PATH + \"/\" + license + cons.CLINICS_PATH + \"/\" + clinicId + \"/schedules\"\n    + \"?\" + cons.DAY_QUERY + day + \"&\" + cons.HOUR_QUERY + hour,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\n\nconst getSearchQuery = (location, specialty, firstName, lastName, consultPrice, prepaid) => {\n    const queryParams = [];\n    if (location !== undefined & location !== null && location !== \"\") {\n        queryParams.push(\"location=\" + location)\n    }\n    if (specialty !== undefined & specialty !== null && specialty !== \"\") {\n        queryParams.push(\"specialty=\" + specialty)\n    }\n    if (firstName !== undefined & firstName !== null && firstName !== \"\") {\n        queryParams.push(\"firstName=\" + firstName)\n    }\n    if (lastName !== undefined & lastName !== null && lastName !== \"\") {\n        queryParams.push(\"lastName=\" + lastName)\n    }\n    if (consultPrice !== undefined & consultPrice !== null && consultPrice !== 0) {\n        queryParams.push(\"consultPrice=\" + consultPrice)\n    }\n    if (prepaid !== undefined & prepaid !== null && prepaid !== \"\") {\n        queryParams.push(\"prepaid=\" + prepaid)\n    }\n\n    let query = \"\";\n\n    for (let i = 0; i < queryParams.length; i++) {\n        query = query + \"&\" + queryParams[i];\n    }\n\n    return query;\n}\n\n\nexport default {\n    getDoctorsAdmin,\n    searchDocs,\n    addDoctor,\n    deleteDoctor,\n    editDoctor,\n    getClinics,\n    getAllClinics,\n    getDocByEmail,\n    getDocByLicense,\n    addDoctorToClinic,\n    deleteDoctorsClinic,\n    editPrice,\n    getSchedule,\n    addSchedule,\n    deleteSchedule,\n}","import React, {useEffect, useState} from 'react';\nimport SearchBar from \"../SearchBar\";\nimport {Button, Card, Col, Container, Row} from \"react-bootstrap\";\nimport {Link, useSearchParams} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport './home.css'\nimport {useTranslation} from \"react-i18next\";\n\n\nfunction Home(props) {\n    const [searchParams, setSearchParams] = useSearchParams()\n    const [doctors, setDoctors] = useState([])\n    const [specialties, setSpecialties] = useState([])\n    const [locations, setLocations] = useState([])\n    const [prepaids, setPrepaids] = useState([])\n    const [message, setMessage] = useState(\"\")\n    const [searchCriteria, setSearchCriteria] = useState(null)\n    const [maxPage, setMaxPage] = useState(0)\n    const [page, setPage] = useState(0)\n    const [loading, setLoading] = useState(false)\n    const {t} = useTranslation()\n\n\n    const fetchAllDoctorsWithAvailability = async (page) => {\n        setLoading(true)\n        const response = await DoctorCalls.searchDocs(page, null, null,\n            null, null, null , null)\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n            setMessage(\"\")\n            setSearchParams()\n        }\n        setLoading(false)\n    }\n\n    useEffect(async () => {\n        const pag = searchParams.get('page') === undefined ||  searchParams.get('page') === null ?\n            0: Number(searchParams.get('page'))\n\n        console.log(\"page \" + page)\n        const search = {\n            location: searchParams.get('location') === \"null\"? null: searchParams.get('location'),\n            specialty: searchParams.get('specialty') === \"null\"? null: searchParams.get('specialty'),\n            firstName: searchParams.get('firstName') === \"null\"? null: searchParams.get('firstName'),\n            lastName: searchParams.get('lastName') === \"null\"? null: searchParams.get('lastName'),\n            consultPrice: searchParams.get('consultPrice') === \"null\" || searchParams.get('consultPrice') === \"0\"?\n                null: searchParams.get('consultPrice'),\n            prepaid: searchParams.get('prepaid') === \"null\"? null: searchParams.get('prepaid')\n\n        }\n        await handleSearch(search, pag);\n        setSearchParams({'page': pag,\n            'location': searchParams.get('location') === \"null\"? null: searchParams.get('location'),\n            'specialty': searchParams.get('specialty') === \"null\"? null: searchParams.get('specialty'),\n            'firstName': searchParams.get('firstName') === \"null\"? null: searchParams.get('firstName'),\n            'lastName': searchParams.get('lastName') === \"null\"? null: searchParams.get('lastName'),\n            'consultPrice': searchParams.get('consultPrice') === \"null\" || searchParams.get('consultPrice') === \"0\"?\n                null: searchParams.get('consultPrice'),\n            'prepaid': searchParams.get('prepaid') === \"null\"? null: searchParams.get('prepaid')})\n\n    }, [])\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await handleSearch(searchCriteria, newPage)\n\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await handleSearch(searchCriteria, newPage)\n    }\n\n    const renderPrevButton = () => {\n\n        if (page !== 0) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage - 1) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    const handleSearch = async (criteria, pag) => {\n        setLoading(true)\n        setSearchCriteria(criteria);\n        if (criteria == null) {\n            await fetchAllDoctorsWithAvailability(pag);\n            setSearchParams({'page': pag})\n            return;\n        }\n        setPage(Number(pag))\n        setSearchParams({'page': pag, 'location':criteria.location, 'specialty': criteria.specialty,\n            'firstName': criteria.firstName, 'lastName': criteria.lastName, 'consultPrice': criteria.consultPrice,\n            'prepaid':criteria.prepaid})\n        const response = await DoctorCalls.searchDocs(pag, criteria.location, criteria.specialty,\n            criteria.firstName, criteria.lastName, criteria.consultPrice , criteria.prepaid)\n\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n            setMessage(\"\")\n        }\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <Row>\n                <Col>\n                    <SearchBar handleSearch={handleSearch}\n                               location={searchParams.get('location')}\n                               specialty={searchParams.get('specialty')}\n                               firstName={searchParams.get('firstName')}\n                               lastName={searchParams.get('lastName')}\n                               prepaid={searchParams.get('prepaid')}\n                               consultPrice={searchParams.get('consultPrice')}\n                    />\n                </Col>\n                <Col xs={9}>\n                    <Container>\n                        <div className=\"admin-info-container search-doctor-container\">\n                            {doctors.map((doctor) => {\n                                return (\n                                    <Card className=\"mb-3 doc-card shadow\"\n                                          style={{color: \"#000\", width: '20rem', height: '8rem'}}\n                                          key={doctor.license}>\n                                        <Card.Body className=\"card-body-doc\">\n                                            <Card.Title>{doctor.user.firstName + ' ' + doctor.user.lastName}</Card.Title>\n                                            <Card.Text>\n                                                {doctor.specialty}\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <Link className=\"doc-button-color btn m-1\"\n                                              role=\"button\"\n                                              to={doctor.license + '/profile'}>{t(\"USER.seeProfile\")}\n                                        </Link>\n                                    </Card>\n                                )\n                            })}\n                        </div>\n                    </Container>\n                    <div>\n                        {renderPrevButton()}\n                        {renderNextButton()}\n                    </div>\n                    {loading && (\n                        <span className=\"spinner-border mt-3\" style={{marginRight:\"1rem\"}}/>\n                    )}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Home","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst login = async (email, password) => {\n    localStorage.setItem('email', email)\n    const params = new URLSearchParams();\n    params.append('email', email);\n    params.append('password', password);\n    return api.post(cons.LOGIN_PATH, params)\n        .then(resp => {\n            if(resp.status === 200) {\n                console.log(resp.headers)\n                localStorage.setItem('token', resp.headers.xAuthToken)\n                localStorage.setItem('role', resp.headers.xRole)\n            }\n\n            return resp\n        })\n}\n\nconst signUp = async (data) => {\n    return api.post(cons.PATIENT_PATH, data)\n}\n\nconst logout = async () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role')\n    localStorage.removeItem('email')\n    localStorage.removeItem('license')\n    localStorage.removeItem('firstName')\n    localStorage.removeItem('lastName')\n}\n\nexport default {\n    login,\n    signUp,\n    logout,\n}","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport {TRANSLATION_ES} from \"./translations-es\";\nimport {TRANSLATION_EN} from \"./translations-en\";\n\ni18n\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        resources: {\n            en: {\n                translation: TRANSLATION_EN\n            },\n            es: {\n                translation: TRANSLATION_ES\n            }\n        }\n    });\n\nconst changeLanguage = async (lang) => {\n    await i18n.changeLanguage(lang);\n}","export const TRANSLATION_EN = {\n    NAVBAR : {\n        favourites: \"Favorites\",\n        appointments: \"Appointments\",\n        profile: \"Profile\",\n        logout: \"Logout\",\n        login: \"Login\",\n        signUp: \"SignUp\",\n        clinics: \"Clinics\"\n    },\n    USER: {\n        seeProfile: \"See Profile\",\n        profile: \"Personal information\",\n        dataProfile: \"Doctor's Information\",\n        emptyFavorites: \"No favorite doctors yet\",\n        noApp: \"No appointments yet\",\n        fav: \"Favorites\",\n        doc: \"Doctor: \",\n        clinic: \"Clinic: \",\n        patient: \"Patient: \"\n    },\n    ADMIN: {\n        doctors: \"Doctors\",\n        seeDocs: \"See doctors\",\n        clinics: \"Clinics\",\n        seeClinics: \"See clinics\",\n        locations: \"Locations\",\n        seeLocations: \"See locations\",\n        specialties: \"Specialties\",\n        seeSpecialties: \"See specialties\",\n        prepaids: \"Prepaids\",\n        seePrepaids: \"See prepaids\",\n        location: \"Location\",\n        specialty: \"Specialty\",\n        prepaid: \"Prepaid\"\n    },\n    DOC: {\n        license: \"License\",\n        addDoc: \"Add doctor\",\n        price: \"Price\",\n        subscribeClinic: \"Subscribe to Clinic\",\n        editPrice: \"Edit Price\",\n        image: \"Image\"\n    },\n    CLINIC: {\n        addClinic: \"Add Clinic\",\n        clinic: \"Clinic\",\n        addPrepaid: \"Add Prepaid to Clinic\",\n        edit: \"Edit Profile\"\n    },\n    FORM: {\n        firstName: \"First Name\",\n        enterFirstName: \"Enter first name\",\n        lastName: \"Last Name\",\n        enterLastName: \"Enter last name\",\n        document: \"Document\",\n        enterDocument: \"Enter document\",\n        specialty: \"Specialty: \",\n        selectSpecialty: \"Select specialty\",\n        enterLicense: \"Enter license\",\n        phoneNumber: \"Phone Number\",\n        enterPhone: \"Enter phone number\",\n        email: \"Email\",\n        enterEmail: \"Enter email\",\n        password: \"Password\",\n        enterPassword: \"Enter Password\",\n        repeatPassword: \"Repeat Password\",\n        newPassword: \"New password\",\n        prepaid: \"Prepaid\",\n        prepaidNumber: \"Prepaid number\",\n        enterPrepaidNumber: \"enter prepaid number\",\n        name: \"Name\",\n        enterName: \"Enter name\",\n        address: \"Address\",\n        enterAddress: \"Enter address\",\n        location: \"Location: \",\n        selectLocation: \"Select location\",\n        selectPrepaid: \"Select prepaid\",\n        selectClinic: \"Select clinic\",\n        enterPrice: \"Enter price\",\n        day: \"Day: \",\n        hour: \"Hour: \",\n        schedule: \"Schedule\",\n        daySelect: \"Select day\",\n        hourSelect: \"Select hour\",\n        none: \"None\",\n        signUp: \"Sign up\",\n        maxPrice: \"Maximum Consult Price\",\n        dateTime: \"Date and Time\",\n        selectDateTime: \"Select date and time\",\n        id: \"Id\"\n    },\n    errors: {\n        licenseInUse: \"Licence already registered\",\n        emailInUse: \"Email already registered\",\n        specialtyNotFound: \"Specialty chosen does not exist\",\n        passwordMismatch: \"Passwords where mismatched\",\n        doctorNotFound: \"No doctor found to delete\",\n        locationNotFound: \"Location chosen does not exist\",\n        clinicExists: \"Clinic already exists\",\n        clinicNotFoundEdit: \"No clinic found to edit\",\n        clinicNotFoundDelete: \"No clinic found to delete\",\n        locationNotFoundDelete: \"No location found to delete\",\n        clinicDependency: \"Could not delete location: One or more clinics are still in this location\",\n        locationExists: \"Location already exists\",\n        specialtyNotFoundDelete: \"No specialty found to delete\",\n        doctorDependency: \"Could not delete specialty: One or more doctors still have this specialty\",\n        specialtyExists: \"Specialty already exists\",\n        prepaidNotFoundDelete: \"No prepaid found to delete\",\n        prepaidExists: \"Prepaid already exists\",\n        clinicNotFound: \"Clinic does not exist\",\n        prepaidNotFound: \"Prepaid chosen does not exist\",\n        clinicPrepaidNotFoundDelete: \"No prepaid in clinic found to delete\",\n        docLoggedNotFound: \"No logged in doctor found\",\n        doctorNotFoundEdit: \"No doctor found to edit\",\n        noLoggedDoc: \"No logged email found, try logging out and logging in again\",\n        noDocEmail: \"No doctor found with logged email\",\n        required: \"is required\",\n        numeric: \"only allows numbers\",\n        passwordTooShort: \"Password is too short\",\n        alphabetic: \"only allows letters\",\n        invalidEmail: \"Not a valid email\",\n        invalidDocumentLength: \"document length must be 8 digits\",\n        prepaidNumberTooLong: \"Prepaid number too long\",\n        docClinicNotFound: \"No doctor in clinic found\",\n        imageBroken: \"Image or image data missing, try uploading the image again\",\n        notSupported: \"Image type not supported. Supported types: JPEG, JPG, PNG\",\n        scheduleExists: \"You already have scheduled this time and hour for this or other clinic\",\n        scheduleNotFoundDelete: \"No schedule found to delete\",\n        scheduleOtherClinicDelete: \"The schedule to delete belongs to another clinic\",\n        selectTime: \"Select clinic, date and time to make an appointment\",\n        datePast: \"Selected date is in the past, select a future date\",\n        outOfSchedule: \"Selected date is out of doctor's schedule\",\n        appointmentExists: \"The selected date already has an appointment, select another date\",\n        doctorAppointment: \"Doctor already has an appointment on that date, select another date\",\n        patientAppointment: \"You already have an appointment on that date, select another date\",\n        noDocFound: \"No doctor found\",\n        noPatientEmail: \"No patient found with logged email\",\n        favExists: \"The doctor is already a favorite\",\n        noAppointmentFound: \"No appointment found\",\n        alreadySubscribed: \"Already subscribed to this clinic\"\n    },\n    actions: {\n        add: \"Add\",\n        edit: \"Edit\",\n        upload: \"Upload\",\n        delete: \"Delete\",\n        makeApp: \"Make Appointment\",\n        cancel: \"Cancel\",\n        update: \"Update\"\n    },\n    CAL : {\n        hour: \"Hour\",\n        mon: \"Monday\",\n        tue: \"Tuesday\",\n        wed: \"Wednesday\",\n        thu: \"Thursday\",\n        fri: \"Friday\",\n        sat: \"Saturday\",\n        sun: \"Sunday\",\n        jan: \"January\",\n        feb: \"February\",\n        mar: \"March\",\n        apr: \"April\",\n        may: \"May\",\n        jun: \"June\",\n        jul: \"July\",\n        aug: \"August\",\n        sep: \"September\",\n        oct: \"October\",\n        nov: \"November\",\n        dec: \"December\"\n    },\n    deleteButton: \"Delete\",\n    prevButton: \"Prev\",\n    nextButton: \"Next\",\n    closeButton: \"Close\",\n    fieldRequired: \"Field Required\",\n    scheduleButton: \"Schedule\",\n    welcome: \"Welcome\",\n    editProfileButton: \"Edit Profile\",\n    changeImgButton: \"Change Image\",\n    deleteImgButton: \"Delete Image\",\n    cancelButton: \"Cancel\",\n    with: \"with\",\n    nextApp: \"Next Appointments\"\n}","export const TRANSLATION_ES = {\n    NAVBAR : {\n        favourites: \"Favoritos\",\n        appointments: \"Mis Turnos\",\n        profile: \"Perfil\",\n        logout: \"Cerrar Sesión\",\n        login: \"Iniciar Sesión\",\n        signUp: \"Registrarse\",\n        clinics: \"Mis Clínicas\"\n    },\n    USER: {\n        seeProfile: \"Ver Perfil\",\n        emptyFavorites: \"No hay doctores favoritos aún\",\n        profile: \"Informacion personal\",\n        noApp: \"No tienes turnos aún\",\n        dataProfile: \"Información del Doctor\",\n        fav: \"Favoritos\",\n        doc: \"Doctor: \",\n        clinic: \"Clínica: \",\n        patient: \"Paciente: \"\n    },\n    ADMIN: {\n        doctors: \"Doctores\",\n        seeDocs: \"Ver doctores\",\n        clinics: \"Clínicas\",\n        seeClinics: \"Ver clínicas\",\n        locations: \"Localidades\",\n        seeLocations: \"Ver localidades\",\n        specialties: \"Especialidades\",\n        seeSpecialties: \"Ver especialidades\",\n        prepaids: \"Prepagas\",\n        seePrepaids: \"Ver prepagas\",\n        location: \"Localidad\",\n        specialty: \"Especialidad\",\n        prepaid: \"Prepaga\"\n    },\n    DOC: {\n        license: \"Licencia\",\n        addDoc: \"Agregar doctor\",\n        price: \"Precio\",\n        subscribeClinic: \"Suscribirse a Clínica\",\n        editPrice: \"Editar Precio\",\n        image: \"Imagen\"\n    },\n    CLINIC: {\n        addClinic: \"Agregar Clínica\",\n        clinic: \"Clínica\",\n        addPrepaid: \"Agregar Prepaga a Clínica\",\n    },\n    FORM: {\n        firstName: \"Nombre\",\n        enterFirstName: \"Ingrese nombre\",\n        lastName: \"Apellido\",\n        enterLastName: \"Ingrese apellido\",\n        document: \"Documento\",\n        enterDocument: \"Ingrese documento\",\n        specialty: \"Especialidad: \",\n        selectSpecialty: \"Seleccione especialidad\",\n        enterLicense: \"Ingrese licencia\",\n        phoneNumber: \"Número Telefónico\",\n        enterPhone: \"Ingrese número telefónico\",\n        email: \"Email\",\n        enterEmail: \"Ingrese email\",\n        password: \"Contraseña\",\n        newPassword: \"Nueva contraseña\",\n        enterPassword: \"Ingrese Contraseña\",\n        repeatPassword: \"Reingrese Contraseña\",\n        prepaidNumber: \"Numero de prepaga\",\n        enterPrepaidNumber: \"Ingrese numero de prepaga\",\n        name: \"Nombre\",\n        enterName: \"Ingrese nombre\",\n        address: \"Dirección\",\n        enterAddress: \"Ingrese dirección\",\n        location: \"Localidad: \",\n        prepaid: \"Prepaga\",\n        selectLocation: \"Seleccione localidad\",\n        selectPrepaid: \"Seleccione prepaga\",\n        selectClinic: \"Seleccione clínica\",\n        signUp: \"Registrarse\",\n        enterPrice: \"Ingrese precio\",\n        day: \"Día: \",\n        hour: \"Hora: \",\n        schedule: \"Horario\",\n        daySelect: \"Seleccione día\",\n        hourSelect: \"Seleccione hora\",\n        none: \"Ninguna\",\n        maxPrice: \"Máximo Precio de Consulta\",\n        dateTime: \"Día y Hora\",\n        selectDateTime: \"Seleccione día y hora\",\n        update: \"Actualizar\",\n        id: \"DNI\"\n    },\n    actions: {\n        add: \"Agregar\",\n        edit: \"Editar\",\n        upload: \"Subir\",\n        delete: \"Borrar\",\n        makeApp: \"Tomar Turno\",\n        cancel: \"Cancelar\",\n        update: \"Actualizar\"\n    },\n    errors: {\n        licenseInUse: \"Licencia ya registrada\",\n        emailInUse: \"Email ya registrado\",\n        specialtyNotFound: \"La especialidad elegida no existe\",\n        passwordMismatch: \"Las contraseñas no coinciden\",\n        doctorNotFound: \"No se encontró el doctor a eliminar\",\n        locationNotFound: \"La localidad elegida no existe\",\n        clinicExists: \"Clínica ya existe\",\n        clinicNotFoundEdit: \"No se encontró la clínica a editar\",\n        clinicNotFoundDelete: \"No se encontró la clínica a eliminar\",\n        locationNotFoundDelete: \"No se encontró la localidad a eliminar\",\n        clinicDependency: \"No se pudo eliminar localidad: Una o más clínicas se encuentran esta localidad\",\n        locationExists: \"Localidad ya existe\",\n        specialtyNotFoundDelete: \"No se encontró la especialidad a eliminar\",\n        doctorDependency: \"No se pudo eliminar especialidad: Uno o más doctores poseen esta especialidad\",\n        specialtyExists: \"Especialidad ya existe\",\n        prepaidNotFoundDelete: \"No se encontró la prepaga a eliminar\",\n        prepaidExists: \"Prepaga ya existe\",\n        clinicNotFound: \"La clínica no existe\",\n        prepaidNotFound: \"La prepaga elegida no existe\",\n        clinicPrepaidNotFoundDelete: \"No se encontró la prepaga a eliminar en clínica\",\n        docLoggedNotFound: \"No se encontró el doctor en sesión\",\n        doctorNotFoundEdit: \"No se encontró el doctor a editar\",\n        noLoggedDoc: \"No se encontró el email en sesión, intente cerrando sesión y volviendo a entrar\",\n        noDocEmail: \"No se encontró doctor con el email en sesión\",\n        required: \"es obligatorio\",\n        numeric: \"solo puede contener numeros\",\n        passwordTooShort: \"La contraseña es demasiado corta\",\n        alphabetic: \"solo puede contener letras\",\n        invalidEmail: \"email invalido\",\n        invalidDocumentLength: \"El documento debe ser de 8 caracteres\",\n        prepaidNumberTooLong: \"Numero de prepaga demasiado largo\",\n        docClinicNotFound: \"No se encontró doctor en clínica\",\n        imageBroken: \"Faltan datos de la imagen, intente subir la imagen de vuelta\",\n        notSupported: \"Tipo de imagen no soportada. Tipos soportados: JPEG, JPG, PNG\",\n        scheduleExists: \"Usted ya tiene agendado ese horario para esta u otra clínica\",\n        scheduleNotFoundDelete: \"No se encontró el horario a eliminar\",\n        scheduleOtherClinicDelete: \"El horario a eliminar pertenece a otra clínica\",\n        selectTime: \"Seleccione clínica, día y horario para tomar un turno\",\n        datePast: \"La fecha seleccionada es en el pasado, seleccione una fecha futura\",\n        outOfSchedule: \"La fecha seleccionada no pertenece al horario de atención del doctor\",\n        appointmentExists: \"La fecha seleccionada ya posee un turno asignado, seleccione otra fecha\",\n        doctorAppointment: \"El doctor ya posee un turno en la fecha seleccionada, seleccione otra\",\n        patientAppointment: \"Usted ya posee un turno en la fecha seleccionada, seleccione otra\",\n        noDocFound: \"No se encontró el doctor\",\n        noPatientEmail: \"No se encontró paciente con el email en sesión\",\n        favExists: \"El doctor ya es un favorito\",\n        noAppointmentFound: \"No se encontró el turno\",\n        alreadySubscribed: \"Yá está suscripto a esta clínica\"\n    },\n    CAL : {\n        hour: \"Hora\",\n        mon: \"Lunes\",\n        tue: \"Martes\",\n        wed: \"Miércoles\",\n        thu: \"Jueves\",\n        fri: \"Viernes\",\n        sat: \"Sábado\",\n        sun: \"Domingo\",\n        jan: \"Enero\",\n        feb: \"Febrero\",\n        mar: \"Marzo\",\n        apr: \"Abril\",\n        may: \"Mayo\",\n        jun: \"Junio\",\n        jul: \"Julio\",\n        aug: \"Agosto\",\n        sep: \"Septiembre\",\n        oct: \"Octubre\",\n        nov: \"Noviembre\",\n        dec: \"Diciembre\"\n    },\n    deleteButton: \"Eliminar\",\n    prevButton: \"Anterior\",\n    nextButton: \"Siguiente\",\n    closeButton: \"Cerrar\",\n    fieldRequired: \"Campo obligatorio\",\n    scheduleButton: \"Horarios\",\n    welcome: \"Bienvenido/a\",\n    editProfileButton: \"Editar Perfil\",\n    changeImgButton: \"Cambiar Imagen\",\n    deleteImgButton: \"Eliminar Imagen\",\n    cancelButton: \"Cancelar\",\n    with: \"con\",\n    nextApp: \"Próximos turnos\"\n\n}","import React, {useEffect, useState} from 'react';\nimport {Container, Nav, ButtonGroup, Button, Navbar} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PropTypes from 'prop-types';\nimport './NavBar.css'\nimport ApiCalls from \"../api/apiCalls\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../i18n/i18n\";\nimport {changeLanguage} from \"i18next\";\n\n\nfunction NavBar(props) {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const [items, setItems] = useState([]);\n    const { t } = useTranslation();\n\n    const userNavbarItems = [\n        {\n            link: '/paw-2019b-4/favorites',\n            text: \"favourites\"\n        },\n        {\n            link: '/paw-2019b-4/appointments',\n            text: 'appointments'\n        },\n        {\n            link: '/paw-2019b-4/profile',\n            text: 'profile'\n        }\n    ]\n\n    const docNavBarItems = [\n        {\n            link: '/paw-2019b-4/doctor/clinics',\n            text: \"clinics\"\n        },\n        {\n            link: '/paw-2019b-4/doctor/appointments',\n            text: 'appointments'\n        }\n    ]\n    const getItems = () => {\n        if (!props.isAuth()) return [];\n        switch (localStorage.getItem('role')) {\n            case \"ROLE_ADMIN\":\n                return [];\n            case \"ROLE_DOCTOR\":\n                return docNavBarItems;\n            case \"ROLE_USER\":\n                return userNavbarItems;\n        }\n    }\n\n    useEffect(() => {\n        setItems(getItems())\n    },[])\n\n    const handleLogout = () => {\n        ApiCalls.logout().then(() => {\n            navigate(\"/paw-2019b-4\");\n            window.location.reload()\n        })\n\n    }\n\n    const getRoleHome = () => {\n        if (!props.isAuth()) return \"/paw-2019b-4\";\n        switch (localStorage.getItem('role')) {\n            case \"ROLE_ADMIN\":\n                return '/paw-2019b-4/admin';\n            case \"ROLE_DOCTOR\":\n                return '/paw-2019b-4/doctor';\n            case \"ROLE_USER\":\n                return '/paw-2019b-4';\n        }\n    }\n\n    return (\n        <>\n            <Navbar variant=\"dark\" expand=\"lg\" sticky=\"top\" className=\"container-fluid nav-bar shadow-sm\">\n                <Container style={{justifyContent: \"flex-start\"}}>\n                    <Navbar.Brand href={getRoleHome()}>DoctorSearch</Navbar.Brand>\n                    {items.map((item) => {\n                        return (\n                            <Nav.Item class=\"ml-auto\">\n                                <Nav.Link href={item.link} style={{color: \"white\"}}>{t(\"NAVBAR.\" +item.text)}</Nav.Link>\n                            </Nav.Item>\n                        )\n                    })}\n                </Container>\n                <Container style={{justifyContent: \"flex-end\"}}>\n                    {localStorage.getItem('role') !== null ?\n                        <Nav.Item class=\"ml-auto\">\n                            <Nav.Link onClick={() => handleLogout()} style={{color: \"white\"}}>{t('NAVBAR.logout')}</Nav.Link>\n                        </Nav.Item>\n                        :\n                        <Nav.Item  class=\"ml-auto\">\n                            <Nav.Link href=\"/paw-2019b-4/signUp\" style={{color: \"white\"}}>{t('NAVBAR.signUp')}</Nav.Link>\n                        </Nav.Item>}\n                    {localStorage.getItem('role') !== null ?\n                        ''\n                        :\n                        <Nav.Item class=\"ml-auto\">\n                            <Nav.Link href=\"/paw-2019b-4/login\" style={{color: \"white\"}}>{t('NAVBAR.login')}</Nav.Link>\n                        </Nav.Item>}\n                    <ButtonGroup aria-label=\"Basic example\">\n                        <Button className=\"lang-buttons\" onClick={() =>changeLanguage('en')}>EN</Button>\n                        <Button className=\"lang-buttons\" onClick={() =>changeLanguage('es')}>ES</Button>\n                    </ButtonGroup>\n                </Container>\n            </Navbar>\n        </>\n    )\n\n}\n\nNavBar.propTypes = {\n    items: PropTypes.array.isRequired,\n    test: PropTypes.string.isRequired\n\n}\n\nexport default NavBar","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {Card, Col, Row} from \"react-bootstrap\";\nimport \"../../i18n/i18n\";\n\nimport './AdminHome.css';\nimport {useTranslation} from \"react-i18next\";\n\nfunction AdminHome(props) {\n    const { t } = useTranslation();\n\n    return (\n        <>\n            <container>\n                <Row className=\"admin_row\">\n                    <Col>\n                        <Card className=\"admin_card shadow\" style={{marginLeft: '3.5rem', marginRight: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src=\"/paw-2019b-4/images/doctor.png\" />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title style={{verticalAlign: \"bottom\"}}>{t('ADMIN.doctors')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"doctors\">{t('ADMIN.seeDocs')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{marginLeft: '2.5rem', marginRight: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src=\"/paw-2019b-4/images/clinic.png\" />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.clinics')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"clinics\">{t('ADMIN.seeClinics')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{ marginLeft: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src=\"/paw-2019b-4/images/location.png\" />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.locations')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"locations\">{t('ADMIN.seeLocations')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n                <Row className=\"admin_row\">\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{marginLeft: '3.5rem', marginRight: '1rem'}}>\n                            <Card.Img className=\"card_img\" variant=\"top\" src=\"/paw-2019b-4/images/specialty.png\" />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.specialties')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"specialties\">{t('ADMIN.seeSpecialties')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card className=\"mb-3 admin_card shadow\" style={{marginLeft: '2.5rem', marginRight: '1rem'}}>\n                            <Card.Img variant=\"top\" className=\"card_img\" src=\"/paw-2019b-4/images/prepaid.png\" />\n                            <Card.Body className=\"card_body\">\n                                <Card.Title>{t('ADMIN.prepaids')}</Card.Title>\n                                <Link className=\"btn btn-outline-dark btn-lg\"\n                                      role=\"button\"\n                                      to=\"prepaids\">{t('ADMIN.seePrepaids')}\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </container>\n        </>\n    )\n}\n\nexport default AdminHome","import React, {Component, useState} from 'react';\nimport {Button, Modal, Form} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction SinglePropertyAddModal(props) {\n    const [show, setShow] = useState(false);\n    const [newProperty, setNewProperty] = useState('');\n    const { t } = useTranslation();\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const handleAdd = (newProp) => {\n        props.handleAdd(newProp)\n        setNewProperty(\"\")\n        handleShow()\n    }\n\n    const onChange = (event) => {\n        setNewProperty(event.target.value)\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-secondary\" onClick={handleShow} size=\"lg\" className=\"add-margin\">\n                {t(\"actions.add\")} {props.property}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"actions.add\")} {props.property}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"FORM.name\")}</Form.Label>\n                        <Form.Control value={newProperty}\n                                  placeholder={t(\"FORM.enterName\")}\n                                  onChange={onChange}/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleAdd({name: newProperty})}>\n                        {t(\"actions.add\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default SinglePropertyAddModal;","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport SinglePropertyAddModal from \"../Modals/SinglePropertyAddModal\";\nimport LocationCalls from \"../../api/LocationCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction Locations(props){\n    const [locations, setLocations] = useState([])\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const navigate = useNavigate()\n    const [message, setMessage] = useState(\"\")\n    const { t } = useTranslation();\n\n    const fetchLocations = async (pag) => {\n        const response = await LocationCalls.getLocations(pag)\n        if (response && response.ok){\n            setLocations(response.data)\n            setMaxPage(response.headers.xMaxPage)\n        }\n    }\n\n     useEffect(async () => {\n        await fetchLocations(page)\n    }, [])\n\n    const deleteLocation = async (name) => {\n        const response = await LocationCalls.deleteLocation(name);\n        if (response && response.ok) {\n            await fetchLocations(page)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"location-not-found\") {\n                setMessage(\"errors.LocationNotFoundDelete\")\n            }\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        if (response.status === 409) {\n            if (response.data === \"clinics-dependency\") {\n                setMessage(\"errors.clinicDependency\")\n            }\n        }\n    }\n\n    const handleAdd = async (newLocation) => {\n        const response = await LocationCalls.addLocation(newLocation);\n        if (response && response.ok) {\n            await fetchLocations(page)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        } else if (response.status === 409) {\n            if (response.data === \"location-exists\") {\n                setMessage(\"errors.locationExists\")\n            }\n        }\n    }\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchLocations(newPage)\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchLocations(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <SinglePropertyAddModal handleAdd={handleAdd} property={t(\"ADMIN.location\")}/>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {locations.map(location => {\n                        return (\n                            <Card className=\"mb-3 shadow\"\n                                  style={{color: \"#000\", width: '20rem', height: '7rem'}} key={location.name}>\n                                <Card.Body>\n                                    <Card.Title>{location.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deleteLocation(location.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Locations","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container, Modal} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport SinglePropertyAddModal from \"../Modals/SinglePropertyAddModal\";\nimport {useNavigate} from \"react-router-dom\";\nimport SpecialtyCalls from \"../../api/SpecialtyCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction Specialties(props){\n    const [specialties, setSpecialties] = useState([])\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const navigate = useNavigate()\n    const [message, setMessage] = useState(\"\")\n    const { t } = useTranslation();\n\n    const fetchSpecialties = async (pag) => {\n        const response = await SpecialtyCalls.getSpecialties(pag);\n        if (response && response.ok) {\n            setSpecialties(response.data);\n            setMaxPage(response.headers.xMaxPage);\n        }\n    }\n\n    useEffect(async () => {\n        await fetchSpecialties(page)\n    }, [])\n\n    const deleteSpecialty = async (name) => {\n        const response = await SpecialtyCalls.deleteSpecialty(name);\n        if (response && response.ok) {\n            await fetchSpecialties(page)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"specialty-not-found\") {\n                setMessage(\"errors.specialtyNotFoundDelete\")\n            }\n        }\n        if (response.status === 409) {\n            if (response.data === \"doctors-dependency\") {\n                setMessage(\"errors.doctorDependency\")\n            }\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const handleAdd = async (newSpecialty) => {\n        const response = await SpecialtyCalls.addSpecialty(newSpecialty);\n        if (response && response.ok) {\n            await fetchSpecialties(page)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        } else if (response.status === 409) {\n            if (response.data === \"specialty-exists\") {\n                setMessage(\"errors.specialtyExists\")\n            }\n        }\n    }\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchSpecialties(newPage)\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchSpecialties(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                    onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <SinglePropertyAddModal handleAdd={handleAdd} property={t(\"ADMIN.specialty\")}/>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {specialties.map(specialty => {\n                        return (\n                            <Card className=\"mb-3 shadow\" style={{color: \"#000\", width: '20rem', height: '7rem'}}\n                                  key={specialty.name}>\n                                <Card.Body>\n                                    <Card.Title>{specialty.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deleteSpecialty(specialty.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n\n}\n\nexport default Specialties","import React, {Component, useState} from 'react';\nimport {Button, Modal, Form, Dropdown} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction ClinicEditModal(props) {\n    const [id, setId] = useState(props.clinic.id);\n    const [address, setAddress] = useState(props.clinic.address);\n    const [name, setName] = useState(props.clinic.name);\n    const [location, setLocation] = useState(props.clinic.location);\n    const { t } = useTranslation();\n\n\n    const onChange = (event) => {\n        switch(event.target.id) {\n            case \"name\":\n                setName(event.target.value);\n                break;\n            case \"address\":\n                setAddress(event.target.value);\n                break;\n            case \"location\":\n                setLocation(event.target.value);\n                break;\n        }\n    }\n\n    const handleSelect = (location) => {\n        setLocation(location)\n    }\n\n    const handleClick = () => {\n        if (props.action === \"add\") {\n            props.handleAdd(\n                {\n                    id: id,\n                    name: name,\n                    address: address,\n                    location: location\n                })\n        } else {\n            props.handleEdit(\n                {\n                    id: id,\n                    name: name,\n                    address: address,\n                    location: location\n                })\n        }\n    }\n\n    const getAction = () => {\n        if (props.action === \"add\")\n            return \"actions.add\"\n        else\n            return \"actions.edit\"\n    }\n\n    return (\n        <>\n            <Modal show={props.show} onHide={props.hideModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(getAction())} {t(\"CLINIC.clinic\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\n                            <Form.Label>{t(\"FORM.name\")}</Form.Label>\n                            <Form.Control value={name}\n                                          placeholder={t(\"FORM.enterName\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"address\">\n                            <Form.Label>{t(\"FORM.address\")}</Form.Label>\n                            <Form.Control value={address}\n                                          placeholder={t(\"FORM.enterAddress\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"location\">\n                            <Form.Label>{t(\"FORM.location\")} {location}</Form.Label>\n                            <DropDownList iterable={props.locations}\n                                          selectedElement={location}\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectLocation\")}\n                                          id='location'/>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.hideModal}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={handleClick} >\n                        {t(getAction())}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\n\nexport default ClinicEditModal;","import api from \"./index\";\nimport * as cons from './Constants.js'\nimport {PREPAIDS_PATH} from \"./Constants.js\";\n\n// Clinic calls and clinic prepaids\nconst getClinics = async (pag) => api.get(cons.CLINICS_PATH + \"?\" + cons.PAGE_QUERY + pag);\nconst getAllClinics = async () => api.get(cons.CLINICS_PATH  + cons.ALL_PATH);\nconst getClinic = async (id) => api.get(cons.CLINICS_PATH + \"/\" + id)\nconst getClinicPrepaids = async (id, pag) =>\n    api.get(cons.CLINICS_PATH + \"/\" + id + PREPAIDS_PATH + \"?\" + cons.PAGE_QUERY + pag)\nconst getAllClinicPrepaids = async (id) => api.get(cons.CLINICS_PATH + \"/\" + id + PREPAIDS_PATH + cons.ALL_PATH )\nconst addClinic = async (data) => api.post(\n    cons.CLINICS_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\nconst addClinicPrepaid = async (clinicId, prepaidId) => api.post(\n    cons.CLINICS_PATH + \"/\" + clinicId + PREPAIDS_PATH + '/' + prepaidId,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst editClinic = async (id, data) => api.put(\n    cons.CLINICS_PATH + \"/\" + id,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n    )\nconst deleteClinic = async (id) => api.delete(\n    cons.CLINICS_PATH + \"/\" + id,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst deleteClinicPrepaid = async (clinicId, prepaidId) => api.delete(\n    cons.CLINICS_PATH + \"/\" + clinicId + PREPAIDS_PATH + \"/\" + prepaidId,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nexport default {\n    getClinics,\n    getAllClinics,\n    getClinic,\n    getClinicPrepaids,\n    getAllClinicPrepaids,\n    addClinic,\n    addClinicPrepaid,\n    editClinic,\n    deleteClinic,\n    deleteClinicPrepaid\n}","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport ClinicEditModal from \"../Modals/ClinicEditModal\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport LocationCalls from \"../../api/LocationCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\";\n\nfunction Clinics(props) {\n\n    const [clinics, setClinics] = useState([])\n    const [show, setShow] = useState(false)\n    const [editableClinic, setEditableClinic] = useState( {id: ' ', name: ' ', address: ' ', location: ' '})\n    const [editIndex, setEditIndex] = useState(-1)\n    const [action, setAction] = useState(\"Add\")\n    const [locations, setLocations] = useState([])\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const [message, setMessage] = useState(\"\")\n    const navigate = useNavigate()\n    const { t } = useTranslation();\n\n    const fetchClinics = async (pag) => {\n        const response = await ClinicCalls.getClinics(pag)\n        if (response && response.ok) {\n            setClinics(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n        }\n    }\n\n    const fetchLocation = async () => {\n        const response = await LocationCalls.getAllLocations()\n        if (response && response.ok) {\n            setLocations(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    useEffect( async () => {\n        await fetchClinics(page)\n        await fetchLocation()\n    }, [])\n\n    const deleteClinic = async (id) => {\n        const response = await ClinicCalls.deleteClinic(id);\n        if (response && response.ok)\n            await fetchClinics(page);\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\")\n                setMessage(\"errors.clinicNotFoundDelete\")\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const handleAdd = async (newClinic) => {\n        const data = {\n            name: newClinic.name,\n            address: newClinic.address,\n            location: newClinic.location\n        }\n        const response = await ClinicCalls.addClinic(data);\n        setShow(false)\n        if (response && response.ok) {\n            await fetchClinics(page);\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        if (response.status === 404) {\n            if (response.data === \"location-not-found\") {\n                setMessage(\"errors.locationNotFound\")\n            }\n        }\n        if (response.status === 409) {\n            if (response.data === \"clinic-exists\") {\n                setMessage(\"errors.clinicsExists\")\n            }\n        }\n    }\n\n    const handleEdit = async (editedClinic) => {\n        const data = {\n            name: editedClinic.name,\n            address: editedClinic.address,\n            location: editedClinic.location\n        }\n        const response = await ClinicCalls.editClinic(editedClinic.id, data)\n        if (response && response.ok) {\n            await fetchClinics(page);\n            setShow(false)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFoundEdit\")\n            }\n        }\n    }\n\n    const handleShow = (index) => {\n        let action\n        let clinic\n        if (index === -1) {\n            action = \"add\"\n            clinic = {id: ' ', name: ' ', address: ' ', location: ' '}\n        } else {\n            action = \"edit\"\n            clinic = clinics[index]\n        }\n\n        setEditableClinic(clinic)\n        setEditIndex(index)\n        setShow(true)\n        setAction(action)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        await setPage(newPage)\n        setMessage(\"\")\n        await fetchClinics(newPage)\n\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        await setPage(newPage)\n        setMessage(\"\")\n        await fetchClinics(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <Button variant=\"outline-secondary\"\n                    onClick={() => handleShow(-1)}\n                    size=\"lg\"\n                    className=\"add-margin\">\n                {t(\"CLINIC.addClinic\")}\n            </Button>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            {show && <ClinicEditModal show={show}\n                             clinic={editableClinic}\n                             handleAdd={handleAdd}\n                             handleEdit={handleEdit}\n                             action={action}\n                             hideModal={hideModal}\n                             locations={locations.map(location => location.name)}\n            /> }\n            <Container>\n                <div className=\"admin-info-container admin-clinic-container\">\n                    {clinics.map(( clinic, index) => {\n                        return (\n                            <Card className=\"mb-3 shadow\" style={{color: \"#000\", width: '20rem', height: '15rem'}} key={clinic.id}>\n                                <Card.Body>\n                                    <Card.Title>{clinic.name}</Card.Title>\n                                    <Card.Text>\n                                        {clinic.address + ' (' + clinic.location + ')'}\n                                    </Card.Text>\n                                </Card.Body>\n                                <Link className=\"btn btn-outline-dark btn-lg see-prepaid-button shadow-sm\"\n                                      role=\"button\"\n                                      to={'/paw-2019b-4/admin/clinics/' + clinic.id + '/prepaids'}>{t(\"ADMIN.seePrepaids\")}\n                                </Link>\n                                <div className=\"buttons-div\">\n                                    <Button className=\"edit-remove-button remove-button-color shadow-sm\"\n                                            onClick={() => deleteClinic(clinic.id)}>\n                                        {t(\"deleteButton\")}\n                                    </Button>\n                                    <Button className=\"btn edit-remove-button edit-button doc-button-color shadow-sm\"\n                                            onClick={() => handleShow(index)}>\n                                        <i className=\"far fa-edit\"/>\n                                    </Button>\n                                </div>\n\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Clinics","import React, {Component, useEffect, useState} from 'react';\nimport {Button, Card, Container, Modal} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport SinglePropertyAddModal from \"../Modals/SinglePropertyAddModal\";\nimport {useNavigate} from \"react-router-dom\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport \"../../i18n/i18n\"\nimport {useTranslation} from \"react-i18next\";\n\n\nfunction Prepaids(props) {\n    const [prepaids, setPrepaids] = useState([]);\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const navigate = useNavigate()\n    const [message, setMessage] = useState(\"\")\n    const { t } = useTranslation();\n\n    const fetchPrepaids = async (pag) => {\n        const response = await PrepaidCalls.getPrepaids(pag);\n        if (response && response.ok){\n            setPrepaids(response.data)\n            setMaxPage(response.headers.xMaxPage)\n        }\n    }\n\n    useEffect(async () => {\n        await fetchPrepaids(page)\n    }, [])\n\n    const deletePrepaids = async (name) => {\n        const response = await PrepaidCalls.deletePrepaid(name);\n        if (response && response.ok) {\n            await fetchPrepaids(page)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"prepaid-not-found\") {\n                setMessage(\"errors.prepaidNotFoundDelete\")\n            }\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const handleAdd = async (newPrepaid) => {\n        const response = await PrepaidCalls.addPrepaid(newPrepaid)\n        if (response && response.ok) {\n            await fetchPrepaids(page)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        } else if (response.status === 409) {\n            if (response.data === \"prepaid-exists\") {\n                setMessage(\"errors.prepaidExists\")\n            }\n        }\n    }\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchPrepaids(newPage)\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchPrepaids(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage - 1) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <SinglePropertyAddModal handleAdd={handleAdd} property={t(\"ADMIN.prepaid\")}/>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {prepaids.map((prepaid) => {\n                        return (\n                            <Card className=\"mb-3 shadow\"\n                                  style={{color: \"#000\", width: '20rem', height: '7rem'}}\n                                  key={prepaid.name}>\n                                <Card.Body>\n                                    <Card.Title>{prepaid.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deletePrepaids(prepaid.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Prepaids","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\nimport '../../i18n/i18n'\nimport ApiCalls from \"../../api/apiCalls\"\nimport {useNavigate} from \"react-router-dom\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\n\nfunction SignUp() {\n    const [selectedPrepaid, setSelectedPrepaid] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [document, setDocument] = useState('')\n    const [prepaidNumber, setPrepaidNumber] = useState('')\n    const [prepaids, setPrepaids] = useState([])\n\n    const [message, setMessage] = useState(\"\")\n    const [firstNameErrors, setFirstNameErrors] = useState([])\n    const [lastNameErrors, setLastNameErrors] = useState([])\n    const [emailErrors, setEmailErrors] = useState([])\n    const [prepaidNumberErrors, setPrepaidNumberErrors] = useState([])\n    const [passwordErrors, setPasswordErrors] = useState([])\n    const [repeatPasswordErrors, setRepeatPasswordErrors] = useState([])\n    const [documentErrors, setDocumentErrors] = useState([])\n    const [invalidForm, setInvalidForm] = useState(true)\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    const handleSelect = (prepaid) => {\n        setSelectedPrepaid(prepaid)\n    }\n\n    useEffect(async () => {\n        await fetchPrepaids()\n    }, [])\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaids();\n        if (response && response.ok) {\n            setPrepaids(response.data.map(prepaid => prepaid.name))\n        }\n    }\n\n    const isPresent = (value) => {\n        let is = true\n        if(!value) {\n            is = false\n        }\n        return is\n    }\n\n    const checkRequired = (values, errors) => {\n        console.log('first name antes de required: ' + values.firstName)\n        if(!isPresent(values.firstName)) {\n            errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.lastName)) {\n            errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.required\"))\n        }\n        console.log('email antes de required: ' + values.email)\n        if(!isPresent(values.email)) {\n            console.log('entro igual')\n            errors.push(t(\"FORM.email\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.id)) {\n            errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.required\"))\n        }\n        console.log('pass antes de required: ' + values.password)\n        if(!isPresent(values.password)) {\n            console.log('fallo pass')\n            errors.push(t(\"FORM.password\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.repeatPassword)) {\n            errors.push(t(\"FORM.repeatPassword\") + \"  \" + t(\"errors.required\"))\n        }\n        if(!isPresent(values.prepaidNumber)) {\n            errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.required\"))\n        }\n    }\n\n    const checkDigits = (values, errors) => {\n        if(!/^\\d+$/.test(values.id)) {\n            errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.numeric\"))\n        }\n        if(!/^\\d+$/.test(values.prepaidNumber)) {\n            errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.numeric\"))\n        }\n    }\n\n    const checkPassword = (values, errors) => {\n        if(values.password !== values.repeatPassword) {\n            errors.push(t(\"errors.passwordMismatch\"))\n        }\n        if(values.password.length < 8) {\n            errors.push(t(\"errors.passwordTooShort\"))\n        }\n    }\n\n    const checkAlpha = (values, errors) => {\n        if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.firstName)) {\n            errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.alphabetic\"))\n        }\n        if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(values.lastName)) {\n            errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.alphabetic\"))        }\n    }\n\n    const checkEmail = (values, errors) => {\n        if(!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(values.email)) {\n            errors.push(t(\"errors.invalidEmail\"))\n        }\n    }\n\n    const handleSignUp = async (e) => {\n        e.preventDefault();\n        setInvalidForm(true)\n        let data = {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            repeatPassword: repeatPassword,\n            id: document,\n            prepaid: selectedPrepaid,\n            prepaidNumber: prepaidNumber\n        }\n\n        const resp = await ApiCalls.signUp(data)\n\n        if (resp.status === 201) {\n            navigate(\"/paw-2019b-4/login\");\n            window.location.reload()\n        }\n        if (resp.status === 409) {\n            if (resp.data === \"user-exists\") {\n                setMessage(t(\"errors.emailInUse\"))\n            }\n        }\n        setInvalidForm(false)\n    }\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        let error = false\n        let errors = []\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setFirstNameErrors(errors)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setLastNameErrors(errors)\n                break;\n            case \"document\":\n                setDocument(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(event.target.value.length !== 8) {\n                    errors.push(t(\"errors.invalidDocumentLength\"))\n                    error = true\n                }\n                if(event.target.value.length > 20) {\n                    errors.push(t(\"errors.prepaidNumberTooLong\"))\n                    error = true\n                }\n                if(!/^\\d+$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.document\") + \"  \" + t(\"errors.numeric\"))\n                    error = true\n                }\n                setDocumentErrors(errors)\n                break;\n            case \"email\":\n                setEmail(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.email\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(event.target.value)) {\n                    errors.push(t(\"errors.invalidEmail\"))\n                    error = true\n                }\n                setEmailErrors(errors)\n                break;\n            case \"password\":\n                setPassword(event.target.value)\n                if(event.target.value !== '' && event.target.value.length < 8) {\n                    errors.push(t(\"errors.passwordTooShort\"))\n                    error = true\n                }\n                if(event.target.value !== '' && repeatPassword !== event.target.value) {\n                    setRepeatPasswordErrors([t(\"errors.passwordMismatch\")])\n                    error = true\n                }\n                setPasswordErrors(errors)\n                break;\n            case \"prepaidNumber\":\n                setPrepaidNumber(event.target.value)\n                if(!/^\\d+$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.numeric\"))\n                    error = true\n                }\n                if(event.target.value.length > 20) {\n                    errors.push(t(\"errors.prepaidNumberTooLong\"))\n                    error = true\n                }\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                setPrepaidNumberErrors(errors)\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value)\n                if(event.target.value !== '' && password !== '' && password !== event.target.value) {\n                    errors.push(t(\"errors.passwordMismatch\"))\n                    error = true\n                }\n                setRepeatPasswordErrors(errors)\n                break;\n        }\n        setInvalidForm(error)\n    }\n\n    return (\n        <div className=\"m-3\">\n            <h3>{t(\"FORM.signUp\")}</h3>\n            <Form onSubmit={handleSignUp}>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"firstName\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.firstName\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterFirstName\")}\n                                          value={firstName}\n                                          onChange={onChange}\n                            />\n                        </Form.Group>\n                        {firstNameErrors.length !== 0 && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    <ul>\n                                        {firstNameErrors.map((error) => {\n                                            return (\n                                                <li>{error}</li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"lastName\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.lastName\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterLastName\")}\n                                          value={lastName}\n                                          onChange={onChange}\n                            />\n                        </Form.Group>\n                        {lastNameErrors.length !== 0 && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    <ul>\n                                        {lastNameErrors.map((error) => {\n                                            return (\n                                                <li>{error}</li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"prepaids\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.prepaid\")}</Form.Label>\n                            <DropDownList iterable={prepaids}\n                                          selectedElement=''\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectPrepaid\")}\n                                          id='prepaids'\n                            />\n                            <Form.Label className=\"label-signup m-3\">{selectedPrepaid}</Form.Label>\n                        </Form.Group>\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"prepaidNumber\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.prepaidNumber\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterPrepaidNumber\")}\n                                          value={prepaidNumber}\n                                          onChange={onChange}\n                            />\n                            {prepaidNumberErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {prepaidNumberErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"document\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.document\")}</Form.Label>\n                            <Form.Control placeholder={t(\"FORM.enterDocument\")}\n                                          value={document}\n                                          onChange={onChange}\n                            />\n                        </Form.Group>\n                        {documentErrors.length !== 0 && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    <ul>\n                                        {documentErrors.map((error) => {\n                                            return (\n                                                <li>{error}</li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"email\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.email\")}</Form.Label>\n                            <Form.Control type=\"email\"\n                                          placeholder={t(\"FORM.enterEmail\")}\n                                          value={email}\n                                          onChange={onChange}\n                            />\n                            {emailErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {emailErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"password\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.password\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.password\")}\n                                          value={password} onChange={onChange}\n                            />\n                            {passwordErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {passwordErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                    <Col className=\"mx-4\">\n                        <Form.Group className=\"mb-3 div-signup\" controlId=\"repeatPassword\">\n                            <Form.Label className=\"label-signup m-3\">{t(\"FORM.repeatPassword\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.repeatPassword\")}\n                                          value={repeatPassword}\n                                          onChange={onChange}\n                            />\n                            {repeatPasswordErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {repeatPasswordErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <br/>\n                <Button type=\"submit\" disabled={invalidForm && selectedPrepaid !== ''} variant=\"secondary\" >\n                    {t(\"FORM.signUp\")}\n                </Button>\n            </Form>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger m-3\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default SignUp;","import React, { useState} from 'react';\nimport {Button, Modal, Form} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport '../CardContainer.css'\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\n function ClinicPrepaidAddModal(props) {\n    const [show, setShow] = useState(false);\n    const [newPrepaid, setNewPrepaid] = useState('');\n     const { t } = useTranslation();\n\n    const handleSelect = (prepaid) => {\n        setNewPrepaid(prepaid)\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const handleAdd = async () => {\n        setNewPrepaid(\"\")\n        await props.handleAdd(newPrepaid)\n        handleShow()\n\n    }\n\n    const remainingPrepaids = () => {\n        return props.allPrepaids.filter(prepaid => !props.prepaids.includes(prepaid));\n    }\n\n\n    return (\n        <>\n            <Button variant=\"outline-secondary add-margin\" onClick={handleShow} size=\"lg\">\n                {t(\"CLINIC.addPrepaid\")}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"CLINIC.addPrepaid\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"FORM.name\")}: {newPrepaid}</Form.Label>\n                        <DropDownList iterable={remainingPrepaids()}\n                                      selectedElement=''\n                                      handleSelect={handleSelect}\n                                      elementType={t(\"FORM.selectPrepaid\")}\n                                      id='prepaid'/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={handleAdd}>\n                        {t(\"actions.add\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\n\nexport default ClinicPrepaidAddModal;","import {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport ClinicPrepaidAddModal from \"../Modals/ClinicPrepaidAddModal\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport {useTranslation} from \"react-i18next\";\nimport \"../../i18n/i18n\"\n\nfunction ClinicPrepaids() {\n\n    let {id} = useParams()\n    const [prepaidClinics, setPrepaidClinics] = useState([])\n    const [allPrepaidClinics, setAllPrepaidClinics] = useState([])\n    const [allPrepaids, setAllPrepaids] = useState([])\n    const [clinic, setClinic] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const { t } = useTranslation();\n\n    const navigate = useNavigate()\n\n    const fetchAllClinicPrepaids = async () => {\n        const response = await ClinicCalls.getAllClinicPrepaids(id);\n        if (response && response.ok) {\n            setAllPrepaidClinics(response.data)\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n\n    }\n\n    const fetchClinicPrepaids = async (pag) => {\n        const response = await ClinicCalls.getClinicPrepaids(id, pag);\n        if (response && response.ok) {\n            setPrepaidClinics(response.data)\n            setMaxPage(response.headers.xMaxPage)\n        }\n        if (response.status === 404) {\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n\n    }\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaids();\n        if (response && response.ok) {\n            setAllPrepaids(response.data)\n        }\n    }\n\n    const fetchClinic = async (id) => {\n        const response = await ClinicCalls.getClinic(id);\n        if (response && response.ok) {\n            setClinic(response.data)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            setMessage(\"errors.clinicNotFound\")\n        }\n    }\n\n    useEffect(async () => {\n        await fetchClinicPrepaids(page)\n        await fetchAllClinicPrepaids()\n        await fetchPrepaids()\n        await fetchClinic(id)\n    }, [])\n\n    const handleAdd = async (newPrepaid) => {\n        const response = await ClinicCalls.addClinicPrepaid(id, newPrepaid)\n        if (response && response.ok) {\n            await fetchAllClinicPrepaids()\n            await fetchClinicPrepaids(page)\n            setMessage(\"\")\n        }\n        if(response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        if (response.status === 404) {\n            if (response.data === \"prepaid-not-found\") {\n                setMessage(\"errors.prepaidNotFound\")\n            }\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n        }\n    }\n\n    const deletePrepaid = async (name) => {\n        const response = await ClinicCalls.deleteClinicPrepaid(id, name)\n        if (response && response.ok) {\n            await fetchAllClinicPrepaids()\n            await fetchClinicPrepaids(page)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"prepaid-not-found\") {\n                setMessage(\"errors.prepaidNotFound\")\n            }\n            if (response.data === \"clinic-not-found\") {\n                setMessage(\"errors.clinicNotFound\")\n            }\n            if (response.data === \"clinic-prepaid-not-found\") {\n                setMessage(\"errors.clinicPrepaidNotFoundDelete\")\n            }\n        }\n        if(response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n\n    }\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        await fetchClinicPrepaids(newPage)\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        await fetchClinicPrepaids(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t(\"prevButton\")}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage - 1) {\n            return <Button className=\"remove-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t(\"nextButton\")}</Button>\n        }\n    }\n\n    return (\n        <>\n            <h3 className=\"clinic-prepaid-title\">{t(\"CLINIC.clinic\")} {clinic.name}</h3>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <ClinicPrepaidAddModal\n                handleAdd={handleAdd}\n                prepaids={allPrepaidClinics.map(prepaid => prepaid.name)}\n                allPrepaids={allPrepaids.map(prepaid => prepaid.name)}\n                id={id}\n                navigate={{navigate}}\n            />\n            <Container>\n                <div className=\"admin-info-container admin-clinic-prepaid-container\">\n                    {prepaidClinics.map((prepaidClinics, index) => {\n                        return (\n                            <Card className=\"mb-3 shadow\"\n                                  style={{color: \"#000\", width: '20rem', height: '7rem'}}\n                                  key={prepaidClinics.name}>\n                                <Card.Body>\n                                    <Card.Title>{prepaidClinics.name}</Card.Title>\n                                </Card.Body>\n                                <Button className=\"remove-button-color remove-button shadow-sm\"\n                                        onClick={() => deletePrepaid(prepaidClinics.name)}>\n                                    {t(\"deleteButton\")}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </>\n    )\n}\n\nexport default ClinicPrepaids","import React, { useState } from 'react';\nimport {Button, Col, Form, Modal, Row} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\n\n\nfunction DoctorAddModal(props) {\n    const [show, setShow] = useState(false)\n    const [selectedSpecialty, setSelectedSpecialty] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [license, setLicense] = useState('')\n    const [phoneNumber, setPhoneNumber] = useState('')\n    const [message, setMessage] = useState('')\n    const { t } = useTranslation();\n\n    const handleSelect = (specialty) => {\n        setSelectedSpecialty(specialty)\n    }\n\n    const handleShow = () =>{\n        setShow(!show)\n    }\n\n    const handleAdd = (doctor) => {\n        if (password !== repeatPassword)\n            setMessage(\"errors.passwordMismatch\")\n        else {\n            setMessage('')\n            setSelectedSpecialty(\"\")\n            props.handleAdd(doctor)\n            handleShow()\n        }\n    }\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                break;\n            case \"license\":\n                setLicense(event.target.value)\n                break;\n            case \"email\":\n                setEmail(event.target.value)\n                break;\n            case \"password\":\n                setPassword(event.target.value)\n                break;\n            case \"phoneNumber\":\n                setPhoneNumber(event.target.value)\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value)\n                break;\n        }\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-secondary\" onClick={() => handleShow()} size=\"lg\" className=\"add-margin\">\n                {t(\"DOC.addDoc\")}\n            </Button>\n            <Modal show={show} onHide={() => handleShow()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"DOC.addDoc\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                                    <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterFirstName\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                                    <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterLastName\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"specialty\">\n                                    <Form.Label>{t(\"FORM.specialty\")} {selectedSpecialty}</Form.Label>\n                                    <DropDownList iterable={props.specialties}\n                                                  selectedElement=''\n                                                  handleSelect={handleSelect}\n                                                  elementType={t(\"FORM.selectSpecialty\")}\n                                                  id='specialty'\n                                    />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"license\">\n                                    <Form.Label>{t(\"DOC.license\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterLicense\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"phoneNumber\">\n                                    <Form.Label>{t(\"FORM.phoneNumber\")}</Form.Label>\n                                    <Form.Control placeholder={t(\"FORM.enterPhone\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"email\">\n                                    <Form.Label>{t(\"FORM.email\")}</Form.Label>\n                                    <Form.Control type=\"email\" placeholder={t(\"FORM.enterEmail\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"password\">\n                                    <Form.Label>{t(\"FORM.password\")}</Form.Label>\n                                    <Form.Control type=\"password\" placeholder={t(\"FORM.password\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n                                    <Form.Label>{t(\"FORM.repeatPassword\")}</Form.Label>\n                                    <Form.Control type=\"password\" placeholder={t(\"FORM.repeatPassword\")} onChange={onChange}/>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        {message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {t(message)}\n                                </div>\n                            </div>\n                        )}\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => handleShow()}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleAdd({\n                        firstName: firstName,\n                        lastName: lastName,\n                        email: email,\n                        password: password,\n                        repeatPassword: repeatPassword,\n                        license: license,\n                        specialty: selectedSpecialty,\n                        phoneNumber: phoneNumber\n                    })\n                    }>\n                        {t(\"DOC.addDoc\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default DoctorAddModal","import React, { useState, useEffect } from 'react';\nimport {Button, Card, Container} from \"react-bootstrap\";\nimport '../CardContainer.css'\nimport DoctorAddModal from \"../Modals/DoctorAddModal\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport SpecialtyCalls from \"../../api/SpecialtyCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport \"../../i18n/i18n\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction Doctors() {\n    const [doctors, setDoctors] = useState([])\n    const [specialties, setSpecialties] = useState([])\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const [message, setMessage] = useState(\"\")\n    const navigate = useNavigate()\n    const { t } = useTranslation();\n\n    const fetchDoctors = async (pag) => {\n        const response = await DoctorCalls.getDoctorsAdmin(pag)\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n        }\n\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getAllSpecialties()\n        if (response && response.ok) {\n            setSpecialties(response.data)\n        }\n    }\n\n    useEffect(async () => {\n        await fetchDoctors(page)\n        await fetchSpecialties()\n    }, [])\n\n    const handleAdd = async (newDoctor) => {\n        const response = await DoctorCalls.addDoctor(newDoctor);\n        if (response && response.ok) {\n            await fetchDoctors(page)\n            setMessage(\"\")\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        } else if (response.status === 409) {\n            if (response.data === 'license-in-use')\n                setMessage(\"errors.licenseInUse\")\n            if (response.data === 'email-in-use')\n                setMessage(\"errors.emailInUse\")\n        } else if (response.status === 404) {\n            if (response.data === \"specialty-not-found\") {\n                setMessage(\"errors.specialtyNotFound\")\n            }\n        } else if (response.status === 400) {\n            if (response.data === \"password-mismatch\") {\n                setMessage(\"errors.passwordMismatch\")\n            }\n        }\n    }\n\n    const deleteDoctors = async (license) => {\n        const response = await DoctorCalls.deleteDoctor(license)\n        if (response && response.status === 204) {\n            await fetchDoctors(page)\n            setMessage(\"\")\n        }\n        else if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.doctorsNotFound\")\n            }\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchDoctors(newPage)\n\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchDoctors(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage - 1) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return (\n        <div className=\"background\">\n            <DoctorAddModal\n                handleAdd={handleAdd}\n                specialties={specialties.map(specialty => specialty.name)}\n            />\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-doctor-container\">\n                    {doctors.map((doctor) => {\n                        return (\n                            <Card className=\"mb-3 doc-card shadow\"\n                                  key={doctor.license}>\n                                <Card.Body>\n                                    <Card.Title><b>{doctor.user.firstName + ' ' + doctor.user.lastName}</b></Card.Title>\n                                    <Card.Text>\n                                        <b>{t('DOC.license')}</b>: {doctor.license}\n                                    </Card.Text>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => deleteDoctors(doctor.license)}>\n                                    {t('deleteButton')}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </div>\n    )\n}\n\nexport default Doctors","import React, {Component, useState} from \"react\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport ApiCalls from \"../../api/apiCalls\"\nimport \"./Login.css\"\nimport './AdminHome.css';\nimport '../CardContainer.css'\nimport '../../i18n/i18n'\n\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst WrappedLogin = props => {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const {t} = useTranslation()\n\n    return <Login navigate={navigate} t={t} location={location} {...props} />\n}\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            ApiCalls.login(this.state.email, this.state.password).then(\n                (resp) => {\n                    if (resp.status === 200) {\n                        switch (localStorage.getItem('role')) {\n                            case \"ROLE_ADMIN\":\n                                this.props.navigate(\"/paw-2019b-4/admin\");\n                                window.location.reload()\n                                break;\n                            case \"ROLE_DOCTOR\":\n                                this.props.navigate(\"/paw-2019b-4/doctor\");\n                                window.location.reload()\n                                break;\n                            case \"ROLE_USER\":\n                                if (localStorage.getItem(\"path\") !== null) {\n                                    this.props.navigate(localStorage.getItem(\"path\"));\n                                    localStorage.removeItem(\"path\")\n                                    window.location.reload()\n                                } else {\n                                    this.props.navigate(\"/paw-2019b-4\");\n                                    window.location.reload()\n                                }\n                                break;\n                        }\n                    }\n                    if (resp.status === 401) {\n                        this.setState({\n                            loading: false,\n                            message: \"Email or password are not correct. Try again\"\n                        });\n                        this.props.navigate(\"/paw-2019b-4/login\")\n                    }\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"col-md-12\">\n                <div className=\"card card-container centered background\">\n                    <Form\n                        onSubmit={this.handleLogin}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n                        <div className=\"form-group\" className=\"labels mb-4\">\n                            <label htmlFor=\"email\" >{this.props.t(\"FORM.email\")}</label>\n                            <Input\n                                type=\"email\"\n                                className=\"form-contro text-fields\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                validations={[required]}\n                            />\n                        </div>\n\n                        <div className=\"form-group\" className=\"labels\">\n                            <label htmlFor=\"password\">{this.props.t(\"FORM.password\")}</label>\n                            <Input\n                                type=\"password\"\n                                className=\"form-control text-fields\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                validations={[required]}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button\n                                className=\"btn btn-block login-button\"\n                                disabled={this.state.loading}\n                            >\n                                {this.state.loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"/>\n                                )}\n                                <span>{this.props.t(\"NAVBAR.login\")}</span>\n                            </button>\n                        </div>\n\n                        {this.state.message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {this.state.message}\n                                </div>\n                            </div>\n                        )}\n                        <CheckButton\n                            style={{ display: \"none\" }}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default WrappedLogin","import {useTranslation} from \"react-i18next\";\nimport React, {useState} from \"react\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\n\nfunction EditDocProfileModal(props) {\n    const [firstName, setFirstName] = useState(localStorage.getItem('firstName'))\n    const [lastName, setLastName] = useState(localStorage.getItem('lastName'))\n    const [newPassword, setNewPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [selectedSpecialty, setSelectedSpecialty] = useState(localStorage.getItem('specialty'))\n    const [phoneNumber, setPhoneNumber] = useState(localStorage.getItem('phone'))\n    const [show, setShow] = useState(false)\n    const [message, setMessage] = useState('')\n    const {t} = useTranslation()\n\n    const onChange = (event) => {\n        switch(event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value);\n                break;\n            case \"lastName\":\n                setLastName(event.target.value);\n                break;\n            case \"newPassword\":\n                setNewPassword(event.target.value);\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value);\n                break;\n            case \"phoneNumber\":\n                setPhoneNumber(event.target.value);\n                break;\n        }\n    }\n\n    const handleSelect = (specialty) => {\n        setSelectedSpecialty(specialty)\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n\n    }\n\n    const handleClick = () => {\n        if (selectedSpecialty === '')\n            console.log(localStorage.getItem('specialty'))\n            setSelectedSpecialty(localStorage.getItem('specialty'))\n        const doctor = {\n            firstName: firstName,\n            lastName: lastName,\n            newPassword: newPassword,\n            repeatPassword: repeatPassword,\n            specialty: selectedSpecialty,\n            phoneNumber: phoneNumber\n        }\n        if (newPassword !== repeatPassword)\n            setMessage(\"errors.passwordMismatch\")\n        else {\n            setMessage('')\n            props.handleEdit(doctor)\n            handleShow()\n        }\n    }\n\n    return (\n        <>\n            <Button variant=\"edit-remove-button doc-button-color shadow-sm edit-button\"\n                    onClick={() => handleShow()} size=\"lg\"\n                    className=\"add-margin\">\n                {t(\"editProfileButton\")}\n            </Button>\n            <Modal show={show} onHide={() => handleShow()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t('editProfileButton')}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                            <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                            <Form.Control value={firstName}\n                                          placeholder={t(\"FORM.enterFirstName\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                            <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                            <Form.Control value={lastName}\n                                          placeholder={t(\"FORM.enterLastName\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"specialty\">\n                            <Form.Label>{t(\"FORM.specialty\")} {selectedSpecialty}</Form.Label>\n                            <DropDownList iterable={props.specialties}\n                                          selectedElement={selectedSpecialty}\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectSpecialty\")}\n                                          id='specialty'/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"phoneNumber\">\n                            <Form.Label>{t(\"FORM.phoneNumber\")}</Form.Label>\n                            <Form.Control value={phoneNumber}\n                                          type=\"text\"\n                                          placeholder={t(\"FORM.enterPhone\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"newPassword\">\n                            <Form.Label>{t(\"FORM.password\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.password\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n                            <Form.Label>{t(\"FORM.repeatPassword\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.repeatPassword\")}\n                                          onChange={onChange}/>\n                        </Form.Group>\n                    </Form>\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {t(message)}\n                            </div>\n                        </div>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => handleShow()}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleClick()} >\n                        {t('actions.edit')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default EditDocProfileModal","import React, {useState} from \"react\";\nimport {use} from \"i18next\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction ImageSelectModal(props) {\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [show, setShow] = useState(false)\n    const {t} = useTranslation()\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const onFileChange = (event) => {\n        setSelectedImage(event.target.files[0]);\n    }\n\n    const onUploadImage = () => {\n        const formData = new FormData();\n        formData.append(\n            \"profileImage\",\n            selectedImage,\n            selectedImage.name\n        );\n        props.handleUpload(formData)\n        handleShow();\n\n    }\n\n    return (\n        <>\n            <Button className=\"mx-3 shadow-sm doc-button-color\" onClick={handleShow}>\n                {t('changeImgButton')}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"DOC.editPrice\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"DOC.image\")}</Form.Label>\n                        <Form.Control type=\"file\"\n                                      onChange={onFileChange}/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => onUploadImage()}>\n                        {t(\"actions.upload\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default ImageSelectModal","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst uploadImage = async (license, img) => api.post(cons.DOCTORS_PATH + \"/\" + license + cons.IMAGE_PATH,\n    img,\n    {headers: {\n            'X-AUTH-TOKEN': localStorage.getItem('token'),\n            'Content-Type': 'multipart/form-data'\n    }}\n);\nconst getImage = async (license) => api.get(\n    cons.DOCTORS_PATH + \"/\" + license + cons.IMAGE_PATH,\n    {},\n    {headers: {'Accept': '*'}}\n    )\n\nconst deleteImage = async (license) => api.delete(\n    cons.DOCTORS_PATH + \"/\" + license + cons.IMAGE_PATH,\n    {},\n    {headers: {\n            'X-AUTH-TOKEN': localStorage.getItem('token')}}\n    )\n\nexport default {\n    uploadImage,\n    getImage,\n    deleteImage\n}","import React, {useEffect, useState} from \"react\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image'\nimport './DoctorHome.css'\nimport '../CardContainer.css'\nimport {useTranslation} from \"react-i18next\";\nimport EditDocProfileModal from \"../Modals/EditDocProfileModal\";\nimport SpecialtyCalls from \"../../api/SpecialtyCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport ImageSelectModal from \"../Modals/ImageSelectModal\";\nimport ImageCalls from \"../../api/ImageCalls\";\nimport {BASE_URL} from \"../../Constants\";\n\nfunction DoctorHome(props) {\n    const [doctor, setDoctor] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [specialties, setSpecialties] = useState([])\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n    const [image, setImage] = useState(null)\n\n    const fetchDoctor = async () => {\n        const email = localStorage.getItem('email')\n        if (email) {\n            const response = await DoctorCalls.getDocByEmail(email)\n            if (response && response.ok) {\n                setDoctor(response.data)\n                localStorage.setItem('license', response.data.license)\n                localStorage.setItem('firstName', response.data.userData.firstName)\n                localStorage.setItem('lastName', response.data.userData.lastName)\n                localStorage.setItem('specialty', response.data.specialty)\n                localStorage.setItem('phone', response.data.phoneNumber)\n            }\n            if (response.status === 404)\n                setMessage(\"errors.noDocEmail\")\n        }\n        else {\n            setMessage(\"errors.noLoggedDoc\")\n        }\n\n    }\n\n    const fetchImage = async () => {\n        const license = localStorage.getItem('license');\n        const response = await ImageCalls.getImage(license)\n        if (response && response.ok) {\n           setImage(response.data)\n        }\n        if (response.status === 404) {\n            if (response.data === \"image-not-found\") {\n                setImage(null)\n            }\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.docLoggedNotFound\")\n            }\n        }\n    }\n\n    const fetchSpecialties = async () => {\n        const response = await SpecialtyCalls.getAllSpecialties();\n        if (response && response.ok) {\n            setSpecialties(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    const getDoctorsFirstName = () => {\n        if(doctor.userData === undefined)\n            return \"Doctor!\";\n        else\n            return doctor.userData.firstName + \" \"\n    }\n\n    const getDoctorsLastName = () => {\n        if(doctor.userData !== undefined)\n            return doctor.userData.lastName\n        return ''\n    }\n\n    const handleEdit = async (doctor) => {\n        const license = localStorage.getItem('license')\n        const response = await DoctorCalls.editDoctor(license, doctor)\n        if (response && response.ok) {\n            await fetchDoctor()\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            setMessage('errors.doctorNotFoundEdit')\n        }\n        if (response.status === 401) {\n            handleUnauth()\n        }\n    }\n\n    const handleUpload = async (formData) => {\n        const response = await ImageCalls.uploadImage(localStorage.getItem(\"license\"), formData)\n        if (response && response.ok) {\n            await fetchImage()\n            setMessage(\"\")\n            window.location.reload()\n        }\n        if (response.status === 401) {\n            handleUnauth();\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.docLoggedNotFound\")\n            }\n        }\n        if (response.status === 400) {\n            if (response.data === \"image-info-missing\") {\n                setMessage(\"errors.imageBroken\")\n            }\n        }\n        if (response.status === 415) {\n            if (response.data === \"image-type-not-supported\") {\n                setMessage(\"errors.notSupported\")\n            }\n        }\n\n    }\n\n    const handleDeleteImage = async () => {\n        const response = await ImageCalls.deleteImage(localStorage.getItem(\"license\"));\n        if (response && response.ok) {\n            setImage(null)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            handleUnauth()\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.docLoggedNotFound\")\n            }\n        }\n    }\n\n    const handleUnauth = () => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n        localStorage.removeItem('license')\n        localStorage.removeItem('firstName')\n        localStorage.removeItem('lastName')\n        localStorage.removeItem('specialty')\n        localStorage.removeItem('phone')\n        navigate('/paw-2019b-4/login')\n    }\n\n\n    useEffect(async () => {\n        await fetchDoctor();\n        await fetchSpecialties();\n        await fetchImage();\n    }, [])\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <h3 className=\"mt-3\">\n                            {t('welcome')}, {getDoctorsFirstName()}{getDoctorsLastName()}!\n                        </h3>\n                        <hr />\n                    </Col>\n                </Row>\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {t(message)}\n                        </div>\n                    </div>\n                )}\n                <Row>\n                    <Col className=\"info-col\">\n                        <h4>\n                            {t('NAVBAR.profile')}\n                        </h4>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.name')}:</b> {getDoctorsFirstName()}{getDoctorsLastName()}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.email')}:</b> {localStorage.getItem('email')}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('DOC.license')}:</b> {doctor.license}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.phoneNumber')}:</b> {doctor.phoneNumber}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('ADMIN.specialty')}:</b> {doctor.specialty}\n                        </div>\n                        <EditDocProfileModal specialties={specialties.map(specialty=> specialty.name)}\n                                             handleEdit={handleEdit}\n                        />\n                    </Col>\n                    <Col>\n                        <img className=\"img-size\"\n                             src={image === null?\n                                 \"/paw-2019b-4/images/docpic.jpg\": BASE_URL + \"/doctors/\" + localStorage.getItem('license') +\"/image\"} />\n                        <div className=\"mt-3\">\n                            <ImageSelectModal handleUpload={handleUpload} />\n                            <Button className=\"mx-3 shadow-sm doc-button-color\" onClick={handleDeleteImage}> {t('deleteImgButton')}</Button>\n                        </div>\n                    </Col>\n                </Row>\n                <hr/>\n                <Row>\n                </Row>\n            </Container>\n        </>\n    )\n}\nexport default DoctorHome","import {Button, Form, Modal} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction DoctorClinicAddModal(props) {\n    const [show, setShow] = useState(false)\n    const [selectedClinic, setSelectedClinic] = useState({})\n    const [price, setPrice] = useState(0)\n    const {t} = useTranslation()\n\n    const handleSelect = (clinicName) => {\n        const selected = props.allClinics.filter(clinic => clinic.name + \" (\" + clinic.location + \")\" === clinicName)\n        setSelectedClinic(selected[0])\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const onChange = (event) => {\n        setPrice(event.target.value)\n    }\n\n    const handleAdd = async () => {\n        const data = {\n            clinic: selectedClinic.id,\n            consultPrice: Number(price)\n        }\n        setSelectedClinic({})\n        props.handleAdd(data)\n        handleShow()\n    }\n\n    const remainingClinics = () => {\n        return props.allClinics.filter(clinic => !props.clinics.includes(clinic.id))\n            .map(clinic => clinic.name + \" (\" + clinic.location + \")\");\n\n    }\n\n    return(\n        <>\n            <Button variant=\"outline-secondary add-margin\" onClick={handleShow} size=\"lg\">\n                {t('DOC.subscribeClinic')}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t('DOC.subscribeClinic')}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t('CLINIC.clinic')}: {selectedClinic.name} - {selectedClinic.location}</Form.Label>\n                        <DropDownList iterable={remainingClinics()}\n                                      selectedElement=''\n                                      handleSelect={handleSelect}\n                                      elementType={t('FORM.selectClinic')}\n                                      id='clinic'/>\n                        <Form.Group className=\"mb-3 mt-3\" controlId=\"price\">\n                            <Form.Label>{t('DOC.price')}</Form.Label>\n                            <Form.Control type=\"number\" placeholder={t(\"FORM.enterPrice\")} onChange={onChange}/>\n                        </Form.Group>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={handleAdd}>\n                        {t(\"actions.add\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default DoctorClinicAddModal","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\n\nfunction EditPriceModal(props) {\n    const [show, setShow] = useState(false);\n    const [newPrice, setNewPrice] = useState(props.price);\n    const { t } = useTranslation();\n\n    const handleShow = () => {\n        setShow(!show)\n    }\n\n    const handleEdit = () => {\n        props.handleEdit(newPrice)\n        setNewPrice(0)\n        handleShow()\n    }\n\n    const onChange = (event) => {\n        setNewPrice(event.target.value)\n    }\n\n    return (\n        <>\n            <Button className=\"mx-3 shadow-sm doc-button-color\" onClick={handleShow}>\n                <i className=\"far fa-edit\"/>\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"DOC.editPrice\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\n                        <Form.Label>{t(\"DOC.price\")}</Form.Label>\n                        <Form.Control value={newPrice}\n                                      placeholder={t(\"FORM.enterPrice\")}\n                                      onChange={onChange}/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleEdit()}>\n                        {t(\"actions.edit\")}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default EditPriceModal","import React, {useEffect, useState} from \"react\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport {Button, Card, Container, Row} from \"react-bootstrap\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport DoctorClinicAddModal from \"../Modals/DoctorClinicAddModal\";\nimport EditPriceModal from \"../Modals/EditPriceModal\";\n\nfunction DoctorClinics(props) {\n    const [clinics, setClinics] = useState([]);\n    const [allClinics, setAllClinics] = useState([])\n    const [allDoctorClinics, setAllDoctorClinics] = useState([])\n    const [page, setPage] = useState(0);\n    const [maxPage, setMaxPage] = useState(0);\n    const [message, setMessage] = useState(\"\")\n    const license = localStorage.getItem('license');\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n\n    const fetchDoctorsClinics = async (pag) => {\n        const response = await DoctorCalls.getClinics(license, pag)\n        if (response && response.ok) {\n            setClinics(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n            setMessage(\"\")\n        }\n        if(response.status === 404) {\n            setMessage(\"errors.docLoggedNotFound\")\n        }\n    }\n\n    const fetchAllDoctorClinics = async () => {\n        const response = await DoctorCalls.getAllClinics(license)\n        if (response && response.ok) {\n            setAllDoctorClinics(response.data)\n            setMessage(\"\")\n        }\n        if(response.status === 404) {\n            setMessage(\"errors.docLoggedNotFound\")\n        }\n    }\n\n    const fetchAllClinics = async () => {\n        const response = await ClinicCalls.getAllClinics();\n        if (response && response.ok) {\n            setAllClinics(response.data);\n        }\n\n    }\n\n    const handleAdd = async (newDocClinic) => {\n        const response = await DoctorCalls.addDoctorToClinic(newDocClinic, license);\n        if (response && response.ok) {\n            await fetchDoctorsClinics(page)\n        }\n        if (response.status === 409){\n            if (response.data === \"doctor-clinic-exists\")\n                setMessage(\"errors.alreadySubscribed\")\n        }\n        else {\n            handleErrors(response);\n        }\n    }\n\n    const handleEditPrice = async (clinicId, price) => {\n        const response = await DoctorCalls.editPrice(license, clinicId, price)\n        if (response && response.ok) {\n            await fetchDoctorsClinics(page)\n            await fetchAllDoctorClinics()\n            setMessage('')\n        } else {\n            handleErrors(response);\n        }\n    }\n\n\n    const handleDelete = async (clinicId) => {\n        const response = await DoctorCalls.deleteDoctorsClinic(license, clinicId)\n        if (response && response.ok) {\n            await fetchDoctorsClinics(page)\n            await fetchAllDoctorClinics()\n            setMessage('')\n        } else {\n            handleErrors(response);\n        }\n    }\n\n    const handleErrors = (response) => {\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.docLoggedNotFound\")\n            if (response.data === \"clinic-not-found\")\n                setMessage(\"errors.clinicNotFound\")\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.removeItem('license')\n            localStorage.removeItem('firstName')\n            localStorage.removeItem('lastName')\n            localStorage.removeItem('specialty')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n    useEffect(async () => {\n        await fetchDoctorsClinics(page);\n        await fetchAllClinics();\n        await fetchAllDoctorClinics();\n    },[])\n\n    return (\n        <>\n            <DoctorClinicAddModal\n                handleAdd={handleAdd}\n                allClinics={allClinics}\n                clinics={allDoctorClinics.map(clinic => clinic.id)}\n            />\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Container>\n                <div className=\"admin-info-container admin-clinic-container\">\n                    {clinics.map((dc) => {\n                        return (\n                            <Card className=\"mb-3 shadow\" style={{color: \"#000\", width: '20rem', height: '16.5rem'}} key={dc.id}>\n                                <Card.Body>\n                                    <Card.Title>{dc.clinic.name}</Card.Title>\n                                    <Card.Text>\n                                        {dc.clinic.address + ' (' + dc.clinic.location + ')'}\n                                    </Card.Text>\n                                    <Card.Text>\n                                        {t('DOC.price')}: {String(dc.consultPrice)}\n                                        <EditPriceModal handleEdit={(newPrice) => handleEditPrice(dc.clinic.id, newPrice)}\n                                                        price={dc.consultPrice}\n                                        />\n                                    </Card.Text>\n                                    <Link className=\"btn btn-outline-dark btn-lg see-prepaid-button shadow-sm\"\n                                          role=\"button\"\n                                          to={`/paw-2019b-4/doctor/${license}/clinics/${dc.clinic.id}/schedule`}>\n                                        {t('scheduleButton')}\n                                    </Link>\n                                </Card.Body>\n                                <div className=\"buttons-div\">\n                                    <Button className=\"edit-remove-button remove-button-color shadow-sm\"\n                                            onClick={() => handleDelete(dc.clinic.id)}\n                                    >\n                                        {t(\"deleteButton\")}\n                                    </Button>\n                                </div>\n\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default DoctorClinics","export const getWeekDate = (weekDate) => {\n    switch (weekDate) {\n        case 1:\n            return \"CAL.mon\";\n        case 2:\n            return \"CAL.tue\";\n        case 3:\n            return \"CAL.wed\";\n        case 4:\n            return \"CAL.thu\";\n        case 5:\n            return \"CAL.fri\";\n        case 6:\n            return \"CAL.sat\";\n        case 7:\n            return \"CAL.sun\";\n    }\n}\n\nexport const getMonth = (monthInt) => {\n    switch (monthInt){\n        case 1:\n            return \"CAL.jan\";\n        case 2:\n            return \"CAL.feb\";\n        case 3:\n            return \"CAL.mar\";\n        case 4:\n            return \"CAL.apr\";\n        case 5:\n            return \"CAL.may\";\n        case 6:\n            return \"CAL.jun\";\n        case 7:\n            return \"CAL.jul\";\n        case 8:\n            return \"CAL.aug\";\n        case 9:\n            return \"CAL.sep\";\n        case 10:\n            return \"CAL.oct\";\n        case 11:\n            return \"CAL.nov\";\n        case 12:\n            return \"CAL.dec\";\n    }\n\n}\n\nexport const dateToString = (app, t) => {\n    return t(getWeekDate(app.dayWeek)) + \" \" + app.day + \" \" + t(getMonth(app.month)) + \", \" + app.year +\n        \" \" + app.hour + \":00\"\n}","import {Button, Form, Modal} from \"react-bootstrap\";\nimport React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport DropDownList from \"../DropDownList\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport {getWeekDate} from \"../../utils/dateHelper\";\n\nfunction ModifyScheduleModal(props) {\n    const [show, setShow] = useState(false);\n    const {t} = useTranslation()\n    const [day, setDay] = useState(null);\n    const [hour, setHour] = useState(null);\n    const [available, setAvailable] = useState([])\n\n    const handleShow = () => {\n        setShow(!show);\n    }\n\n    useEffect(async () => {\n        setAvailable(getAllSchedules());\n    },[])\n\n    const getAllSchedules = () => {\n        const availableList = []\n        for (let i = 9; i < 19; i++) {\n            for (let j = 1; j < 8; j++) {\n                availableList.push({day: j, hour: i})\n\n            }\n        }\n        return availableList;\n\n    }\n    const handleSelectDay = (selectedDay) => {\n        setDay(parseDays(selectedDay))\n    }\n\n    const handleSelectHour = (selectedHour) => {\n        setHour(selectedHour)\n    }\n\n    const handleClick = () => {\n        props.handleClick(day, hour)\n        setDay(null)\n        setHour(null)\n        handleShow()\n\n    }\n\n    const getDays = () => {\n        return [t(\"CAL.mon\"), t(\"CAL.tue\"), t(\"CAL.wed\"), t(\"CAL.thu\"), t(\"CAL.fri\"), t(\"CAL.sat\"), t(\"CAL.sun\")]\n    }\n\n    const parseDays = (dayString) => {\n        switch (dayString) {\n            case t(\"CAL.mon\"):\n                return 1;\n            case t(\"CAL.tue\"):\n                return 2;\n            case t(\"CAL.wed\"):\n                return 3;\n            case t(\"CAL.thu\"):\n                return 4;\n            case t(\"CAL.fri\"):\n                return 5;\n            case t(\"CAL.sat\"):\n                return 6;\n            case t(\"CAL.sun\"):\n                return 7;\n        }\n    }\n    const getHours = () => {\n        if (day === null) {\n            return []\n        }\n        return available.filter(s => s.day === day).map(s => s.hour)\n\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-secondary\" onClick={handleShow} size=\"lg\" className=\"add-margin\">\n                {t(\"actions.\" + props.action)} {t(\"FORM.schedule\")}\n            </Button>\n            <Modal show={show} onHide={handleShow}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t(\"actions.\"  + props.action)} {t(\"FORM.schedule\")}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"day\">\n                        <Form.Label>{t(\"FORM.day\")} {day === null? \"\": t(getWeekDate(day))}</Form.Label>\n                        <DropDownList iterable={getDays()}\n                                      selectedElement={day}\n                                      handleSelect={handleSelectDay}\n                                      elementType={t(\"FORM.daySelect\")}\n                                      id='day'/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"hour\">\n                        <Form.Label>{t(\"FORM.hour\")} {hour === null? \"\": hour}</Form.Label>\n                        <DropDownList iterable={getHours()}\n                                      selectedElement={hour}\n                                      handleSelect={handleSelectHour}\n                                      elementType={t(\"FORM.hourSelect\")}\n                                      id='hour'/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleShow}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" onClick={() => handleClick()}>\n                        {t(\"actions.\" + props.action)}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n\n    )\n}\n\nexport default ModifyScheduleModal","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Table} from \"react-bootstrap\";\nimport './DoctorClinicSchedule.css'\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ClinicCalls from \"../../api/ClinicCalls\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport ModifyScheduleModal from \"../Modals/ModifyScheduleModal\";\n\nfunction DoctorClinicSchedule(props) {\n    const [schedule, setSchedule] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [clinic, setClinic] = useState(null);\n    const [doctor, setDoctor] = useState(null);\n    const {t} = useTranslation();\n    const navigate = useNavigate()\n    let {id} = useParams();\n    let {license} = useParams()\n\n    const fetchDoctor = async () => {\n        const email = localStorage.getItem('email');\n        const response = await DoctorCalls.getDocByEmail(email);\n        if (response && response.ok) {\n            setDoctor(response.data);\n            setMessage(\"\")\n        }\n    }\n\n    const fetchClinic = async () => {\n        const response = await ClinicCalls.getClinic(id);\n        if (response && response.ok) {\n            setClinic(response.data);\n            setMessage(\"\");\n        }\n    }\n\n    const fetchSchedule = async () => {\n        const response = await DoctorCalls.getSchedule(license)\n        if (response && response.ok) {\n            setSchedule(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    const getClinicName = () => {\n        if (clinic === null)\n            return \"\";\n        return clinic.name\n    }\n\n    const getRow = (row) => {\n        const rowSchedule = schedule.filter(schedule => schedule.hour === row)\n        const days = []\n        for (let i = 1; i < 8; i++) {\n            const scheduleDay = rowSchedule.filter(schedule => (schedule.day) === i)\n            if (scheduleDay.length > 0) {\n             days[i - 1] = scheduleDay[0].clinic\n            } else {\n                days[i - 1] = null\n            }\n\n        }\n        return days\n    }\n\n    const getAllRows = () => {\n        const hours = []\n        for (let i = 9; i < 19; i++) {\n            hours[i] = getRow(i)\n        }\n        return hours\n    }\n\n    useEffect(async () => {\n        await fetchDoctor();\n        await fetchClinic();\n        await fetchSchedule()\n    },[])\n\n    const handleAdd = async (day, hour) => {\n        const response = await DoctorCalls.addSchedule(license, id, day, hour)\n        if (response && response.ok) {\n            await fetchSchedule();\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n        }\n        if (response.status === 409) {\n            if (response.data === \"schedule-exists\")\n                setMessage(\"errors.scheduleExists\")\n        }\n        if (response.status === 401)\n            handleUnauth()\n    }\n\n    const handleDelete = async (day, hour) => {\n        const response = await DoctorCalls.deleteSchedule(license, id, day, hour)\n        if (response && response.ok) {\n            await fetchSchedule();\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n            if (response.data === \"schedule-not-found\")\n                setMessage(\"errors.scheduleNotFoundDelete\")\n            if (response.data === \"schedule-clinic-not-found\")\n                setMessage(\"errors.scheduleOtherClinicDelete\")\n        }\n        if (response.status === 409) {\n            if (response.data === \"schedule-exists\")\n                setMessage(\"errors.scheduleExists\")\n        }\n\n        if (response.status === 401)\n            handleUnauth()\n    }\n\n    const handleUnauth = () => {\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n        localStorage.removeItem('license')\n        localStorage.removeItem('firstName')\n        localStorage.removeItem('lastName')\n        localStorage.removeItem('specialty')\n        navigate('/paw-2019b-4/login')\n    }\n\n    return (\n        <div className=\"content\">\n            <h3 className=\"clinic-prepaid-title\">{t(\"CLINIC.clinic\")} {getClinicName()}</h3>\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {t(message)}\n                    </div>\n                </div>\n            )}\n            <Table className=\"schedule-table\">\n                <thead>\n                    <tr>\n                        <th width=\"9%\">{t('CAL.hour')}</th>\n                        <th width=\"13%\">{t('CAL.mon')}</th>\n                        <th width=\"13%\">{t('CAL.tue')}</th>\n                        <th width=\"13%\">{t('CAL.wed')}</th>\n                        <th width=\"13%\">{t('CAL.thu')}</th>\n                        <th width=\"13%\">{t('CAL.fri')}</th>\n                        <th width=\"13%\">{t('CAL.sat')}</th>\n                        <th width=\"13%\">{t('CAL.sun')}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {getAllRows().map((row, index) => {\n                    return (\n                        <tr>\n                            <td>{index}:00</td>\n                            {row.map((clinic => {\n                                if (clinic === null) {\n                                   return <td/>\n                                }\n                                if (clinic.id === Number(id)) {\n                                    return (\n                                        <td className=\"current-clinic\"><b>{clinic.name} ({clinic.location})</b></td>\n                                    )\n                                } else {\n                                    return (\n                                        <td className=\"other-clinic\">{clinic.name} ({clinic.location})</td>\n                                    )\n                                }\n\n                            }))}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </Table>\n            <div>\n                <ModifyScheduleModal handleClick={handleAdd}\n                                     action=\"add\"\n                />\n                <ModifyScheduleModal handleClick={handleDelete}\n                                     action=\"delete\"\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default DoctorClinicSchedule;","import api from \"./index\";\nimport * as cons from './Constants.js'\n\nconst getAvailableAppointments = async (license) => api.get(\n    cons.APPOINTMENT_PATH + cons.AVAILABLE_PATH + '/' + license);\n\nconst makeAppointment = async (data) => api.post(\n    cons.APPOINTMENT_PATH,\n    data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n    )\n\nconst getAppointment = async (email, page) => api.get(\n    cons.APPOINTMENT_PATH + '/' + email + \"?\" + cons.PAGE_QUERY + page,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\n\nconst deleteAppointment = async (email, license, clinic, year, month, day, time) => api.delete(\n    cons.APPOINTMENT_PATH + '/' + email + '?' + deleteQueryParams(license, clinic, year, month, day, time),\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\n\nconst deleteQueryParams = (license, clinic, year, month, day, time) => {\n    return cons.LICENSE_QUERY + license + '&' + cons.CLINIC_QUERY + clinic + '&' + cons.YEAR_QUERY + year + '&' +\n        cons.MONTH_QUERY + month + '&' + cons.DAY_QUERY + day + '&' + cons.TIME_QUERY + time;\n}\nexport default {\n    getAvailableAppointments,\n    makeAppointment,\n    getAppointment,\n    deleteAppointment\n}","import api from \"./index\";\nimport {FAVORITE_PATH, LICENSE_QUERY, PATIENT_PATH} from \"./Constants.js\";\nimport * as cons from \"./Constants\";\n\nconst getFavoriteDoctors = async (id, pag) => api.get(PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + cons.PAGE_QUERY + pag,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n    )\nconst deleteFavoriteDoctor = async (id, license) => api.delete(\n    PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + LICENSE_QUERY + license,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\nconst isFavorite = async (id, license) => api.get(PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"/\" + license,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n    )\nconst addFavoriteDoctor = async (id, license) => api.post(\n    PATIENT_PATH + \"/\" + id + FAVORITE_PATH + \"?\" + LICENSE_QUERY + license,\n    {},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}}\n)\n\nconst getProfile = async (id) => api.get(PATIENT_PATH + \"/\" + id,{},\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\n\nconst updateProfile = async (data, id) => api.put(PATIENT_PATH + \"/\" + id, data,\n    {headers: {'X-AUTH-TOKEN': localStorage.getItem('token')}})\n\nexport default {\n    getFavoriteDoctors,\n    deleteFavoriteDoctor,\n    isFavorite,\n    addFavoriteDoctor,\n    updateProfile,\n    getProfile\n}","import {useNavigate, useParams} from \"react-router-dom\";\nimport {Button, Col, Container, Form, Row, Table} from \"react-bootstrap\";\nimport {BASE_URL} from \"../../Constants\";\nimport React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport DoctorCalls from \"../../api/DoctorCalls\";\nimport ImageCalls from \"../../api/ImageCalls\";\nimport AppointmentCalls from \"../../api/AppointmentCalls\";\nimport DropDownList from \"../DropDownList\";\nimport {dateToString, getMonth, getWeekDate} from \"../../utils/dateHelper\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport './UserDoctorProfile.css'\n\n\nfunction UserDoctorProfile(props) {\n    const {license} = useParams()\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n    const [image, setImage] = useState(null)\n    const [doctor, setDoctor] = useState({})\n    const [message, setMessage] = useState(\"\")\n    const [schedule, setSchedule] = useState([])\n    const [available, setAvailable] = useState([])\n    const [clinics, setClinics] = useState([])\n    const [selectedClinic, setSelectedClinic] = useState(null)\n    const [selectedDateTime, setSelectedDateTime] = useState(null)\n    const [isFavorite, setIsFavorite] = useState(false)\n\n    const fetchDoctor = async () => {\n        const response = await DoctorCalls.getDocByLicense(license);\n        if (response && response.ok) {\n            setDoctor(response.data)\n        }\n    }\n\n    const fetchAvailableAppointments = async () => {\n        const response = await AppointmentCalls.getAvailableAppointments(license);\n        if (response && response.ok) {\n            setAvailable(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    const fetchClinics = async () => {\n        const response = await DoctorCalls.getAllClinics(license);\n        if (response && response.ok) {\n            setClinics(response.data)\n            setMessage(\"\")\n        }\n\n    }\n\n    const fetchImage = async () => {\n        const response = await ImageCalls.getImage(license);\n        if (response && response.ok) {\n            setImage(response.data)\n        }\n        if (response.status === 404) {\n            if (response.data === \"image-not-found\") {\n                setImage(null)\n            }\n            if (response.data === \"doctor-not-found\") {\n                setMessage(\"errors.noDocFound\")\n            }\n        }\n    }\n\n    const fetchSchedule = async () => {\n        const response = await DoctorCalls.getSchedule(license)\n        if (response && response.ok) {\n            setSchedule(response.data)\n            setMessage(\"\")\n        }\n    }\n\n    const fetchIsFavorite = async () => {\n        if (localStorage.getItem('email') === null) {\n            setIsFavorite(false)\n        }\n        const response = await PatientCalls.isFavorite(localStorage.getItem('email'), license)\n        if (response && response.ok) {\n            setIsFavorite(true)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.noDocFound\")\n            if (response.data === \"not-favorite\"){\n                setIsFavorite(false)\n                setMessage(\"\")\n            }\n        }\n\n    }\n\n\n    useEffect(async () => {\n        await fetchDoctor();\n        await fetchImage();\n        await fetchSchedule();\n        await fetchClinics();\n        await fetchAvailableAppointments();\n        await fetchIsFavorite();\n    },[])\n\n    const getName = () => {\n        if (doctor.user === undefined) {\n            return \"\"\n        }\n        return doctor.user.firstName + \" \" + doctor.user.lastName\n    }\n\n    const handleMakeApp = async () => {\n        if (localStorage.getItem('email') === null) {\n            navigate(\"/paw-2019b-4/login\")\n        }\n        if (selectedClinic === null) {\n            setMessage(\"errors.selectTime\")\n        }\n        if (selectedDateTime === null) {\n            setMessage(\"errors.selectTime\")\n        }\n        else {\n            const data = {\n                license: license,\n                clinic: selectedClinic.clinic.id,\n                patient: localStorage.getItem('email'),\n                time: selectedDateTime.hour,\n                day: selectedDateTime.day,\n                month: selectedDateTime.month,\n                year: selectedDateTime.year\n            }\n            const response = await AppointmentCalls.makeAppointment(data);\n            if (response && response.ok) {\n                navigate(\"/paw-2019b-4/appointments\")\n            }\n            if (response.status === 401) {\n                localStorage.removeItem('token')\n                localStorage.removeItem('role')\n                localStorage.setItem('path', \"/\" + license + \"/profile\")\n                navigate('/paw-2019b-4/login')\n            }\n            if (response.status === 400) {\n                if (response.data === \"past-date\")\n                    setMessage(\"errors.datePast\")\n            }\n            if (response.status === 409) {\n                if (response.data === \"out-of-schedule\")\n                    setMessage(\"errors.outOfSchedule\")\n                if (response.data === \"appointment-exists\")\n                    setMessage(\"errors.appointmentExists\")\n                if (response.data === \"doctor-already-has-appointment\")\n                    setMessage(\"errors.doctorAppointment\")\n                if (response.data === \"patient-already-has-appointment\")\n                    setMessage(\"errors.patientAppointment\")\n             }\n        }\n\n    }\n\n    const makeFavorite = async () => {\n        if (localStorage.getItem('email') === null) {\n            navigate(\"/paw-2019b-4/login\")\n        }\n        const response = await PatientCalls.addFavoriteDoctor(localStorage.getItem('email'), license)\n        if (response && response.ok) {\n            setIsFavorite(true)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.noDocFound\")\n            if (response.data === \"patient-not-found\")\n                setMessage(\"errors.noPatientEmail\")\n        }\n        if (response.status === 409) {\n            if (response.data === \"favorite-exists\")\n                setMessage(\"errors.favExists\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.setItem('path', \"/\" + license + \"/profile\")\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const deleteFavorite = async () => {\n        if (localStorage.getItem('email') === null) {\n            navigate(\"/paw-2019b-4/login\")\n        }\n        const response = await PatientCalls.deleteFavoriteDoctor(localStorage.getItem('email'), license)\n        if (response && response.ok) {\n            setIsFavorite(false)\n            setMessage(\"\")\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-not-found\")\n                setMessage(\"errors.noDocFound\")\n            if (response.data === \"patient-not-found\")\n                setMessage(\"errors.noPatientEmail\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.setItem('path', \"/\" + license + \"/profile\")\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const getEmail = () => {\n        if (doctor.user === undefined) {\n            return \"\"\n        }\n        return doctor.user.email\n    }\n\n    const getRow = (row) => {\n        const rowSchedule = schedule.filter(schedule => schedule.hour === row)\n        const days = []\n        for (let i = 1; i < 8; i++) {\n            const scheduleDay = rowSchedule.filter(schedule => (schedule.day) === i)\n            if (scheduleDay.length > 0) {\n                days[i - 1] = scheduleDay[0].clinic\n            } else {\n                days[i - 1] = null\n            }\n\n        }\n        return days\n    }\n\n    const handleSelectClinic = (clinicName) => {\n        const selected = clinics.filter(dc => dc.clinic.name + \" (\" + dc.clinic.location + \")\" === clinicName)\n        setSelectedClinic(selected[0])\n    }\n\n    const handleSelectDateTime = (dateFormated) => {\n        const selected = getDateTimes().filter(date => t(getWeekDate(date.dayWeek)) + \" \" + date.day + \" \" + t(getMonth(date.month)) + \", \" + date.year +\n            \" \" + date.hour + \":00\" === dateFormated)\n        setSelectedDateTime(selected[0])\n    }\n\n    const getAllRows = () => {\n        const hours = []\n        for (let i = 9; i < 19; i++) {\n            hours[i] = getRow(i)\n        }\n        return hours\n    }\n\n    const getDateTimes = () => {\n        if (selectedClinic === null) {\n            return []\n        }\n        return available.filter(appointment => appointment.doctorClinic.clinic.id === selectedClinic.clinic.id)\n    }\n\n    return (\n        <>\n            <Container>\n                <Row className=\"mt-3\">\n\n                    <Col className=\"info-col-user\">\n                        <h4 style={{display: \"flex\"}}>\n                            <div style={{alignSelf: \"center\"}}>{t('USER.dataProfile')}</div>\n                            {isFavorite ? <Button className=\"m-2 fav-button\" onClick={deleteFavorite}>\n                                <img src=\"/paw-2019b-4/images/yesfav.png\"/>\n                            </Button>:<Button className=\"m-2 fav-button\" onClick={makeFavorite}>\n                                <img src=\"/paw-2019b-4/images/nofav.png\"/>\n                            </Button>}\n                        </h4>\n                        <div className=\"user-info-label\">\n                            <b>{t('FORM.name')}:</b> {getName()}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('FORM.email')}:</b> {getEmail()}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('DOC.license')}:</b> {doctor.license}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('FORM.phoneNumber')}:</b> {doctor.phoneNumber}\n                        </div>\n                        <div className=\"user-info-label\">\n                            <b>{t('ADMIN.specialty')}:</b> {doctor.specialty}\n                        </div>\n                    </Col>\n                    <Col className=\"img-col-user mx-3\">\n                        <img className=\"user-img-size\"\n                             src={image === null?\n                                 \"/paw-2019b-4/images/docpic.jpg\": BASE_URL + \"/doctors/\" + license +\"/image\"} />\n                    </Col>\n                </Row>\n                <hr/>\n                <Row>\n                    <Col className=\"col-8\">\n                        <Table className=\"user-schedule-table\">\n                            <thead>\n                            <tr>\n                                <th width=\"9%\">{t('CAL.hour')}</th>\n                                <th width=\"13%\">{t('CAL.mon')}</th>\n                                <th width=\"13%\">{t('CAL.tue')}</th>\n                                <th width=\"13%\">{t('CAL.wed')}</th>\n                                <th width=\"13%\">{t('CAL.thu')}</th>\n                                <th width=\"13%\">{t('CAL.fri')}</th>\n                                <th width=\"13%\">{t('CAL.sat')}</th>\n                                <th width=\"13%\">{t('CAL.sun')}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {getAllRows().map((row, index) => {\n                                return (\n                                    <tr>\n                                        <td>{index}:00</td>\n                                        {row.map((clinic => {\n                                            if (clinic === null) {\n                                                return <td/>\n                                            } else {\n                                                return (\n                                                    <td className=\"user-clinic\">{clinic.name} ({clinic.location})</td>\n                                                )\n                                            }\n\n                                        }))}\n                                    </tr>\n                                )\n                            })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                    <Col>\n                        <h4 className=\"m-3\">\n                            {t(\"actions.makeApp\")}\n                        </h4>\n                        <Form.Group className=\"m-3\">\n                            <Form.Label><b>{t(\"CLINIC.clinic\")}</b>: {selectedClinic === null? \"\":\n                                selectedClinic.clinic.name + \" - \" + selectedClinic.clinic.location}</Form.Label>\n                            <DropDownList iterable={clinics.map(dc => dc.clinic.name + \" (\" + dc.clinic.location + \")\")}\n                                          selectedElement=''\n                                          handleSelect={handleSelectClinic}\n                                          elementType={t('FORM.selectClinic')}\n                                          id='clinic'/>\n                        </Form.Group>\n                        <Form.Group className=\"m-3\">\n                            <Form.Label><b>{t(\"FORM.dateTime\")}</b>: {selectedDateTime === null? \"\":\n                                dateToString(selectedDateTime, t)}</Form.Label>\n                            <DropDownList iterable={getDateTimes().map(date => dateToString(date, t))}\n                                          selectedElement=''\n                                          handleSelect={handleSelectDateTime}\n                                          elementType={t('FORM.selectDateTime')}\n                                          id='time'/>\n                        </Form.Group>\n                        <Button className=\"doc-button-color m-5\" onClick={handleMakeApp}>\n                            {t(\"actions.makeApp\")}\n                        </Button>\n                        {message && (\n                            <div className=\"form-group\">\n                                <div className=\"alert alert-danger\" role=\"alert\">\n                                    {t(message)}\n                                </div>\n                            </div>\n                        )}\n                    </Col>\n\n                </Row>\n            </Container>\n        </>\n    )\n\n}\n\nexport default UserDoctorProfile","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport {Button, Card, Col, Container, Row} from \"react-bootstrap\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport './Favorites.css'\n\nfunction Favorites() {\n    const [doctors, setDoctors] = useState([])\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const [message, setMessage] = useState(\"\")\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const {t} = useTranslation()\n\n\n    const fetchFavorites = async (pag) => {\n        let id = localStorage.getItem('email')\n        if (id === null) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        setIsLoading(true)\n        const response = await PatientCalls.getFavoriteDoctors(id, pag)\n        if (response && response.ok) {\n            setDoctors(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n            setIsLoading(false)\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.removeItem('email')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const removeFromFavorites = async (license) => {\n        let id = localStorage.getItem('email')\n        if (id === null) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        const response = await PatientCalls.deleteFavoriteDoctor(id, license);\n        if (response && response.ok) {\n            await fetchFavorites(page);\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    useEffect(async () => {\n        await fetchFavorites(page);\n    }, [])\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchFavorites(newPage)\n\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchFavorites(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage - 1) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return (\n        <>\n            <Row style={{display:\"flex\"}}>\n                <h2 className=\"m-3 fav-title\">{t(\"USER.fav\")}</h2>\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {t(message)}\n                        </div>\n                    </div>\n                )}\n                {doctors.length === 0 && !isLoading && <h4 className=\"m-3 no-fav\">{t(\"USER.emptyFavorites\")}</h4>}\n            </Row>\n            <Row>\n                <Col>\n                    <Container>\n                        <div className=\"admin-info-container favorite-doctor-container\">\n                            {doctors.map((doctor) => {\n                                return (\n                                    <Card className=\"mb-3 fav-doc-card shadow\"\n                                          key={doctor.license}>\n                                        <Card.Body className=\"card-body-doc\">\n                                            <Card.Title>{doctor.user.firstName + ' ' + doctor.user.lastName}</Card.Title>\n                                            <Card.Text>\n                                                {doctor.specialty}\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <div className=\"buttons-div\">\n                                            <Link className=\"doc-button-color btn m-1\"\n                                                  role=\"button\"\n                                                  to={'/paw-2019b-4/' + doctor.license + '/profile'}>{t(\"USER.seeProfile\")}\n                                            </Link>\n                                            <Button className=\"edit-remove-button remove-button-color shadow-sm\"\n                                                    onClick={() => removeFromFavorites(doctor.license)}>\n                                                {t(\"deleteButton\")}\n                                            </Button>\n                                        </div>\n                                    </Card>\n                                )\n                            })}\n                        </div>\n                    </Container>\n                    {renderPrevButton()}\n                    {renderNextButton()}\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Favorites;","import React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Form, Modal} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport {useNavigate} from \"react-router-dom\";\nimport '../Pages/Profile.css'\n\nfunction EditUserProfileModal(props) {\n    const [firstName, setFirstName] = useState(localStorage.getItem('firstName'))\n    const [lastName, setLastName] = useState(localStorage.getItem('lastName'))\n    const [newPassword, setNewPassword] = useState('')\n    const [repeatPassword, setRepeatPassword] = useState('')\n    const [selectedPrepaid, setSelectedPrepaid] = useState(localStorage.getItem('prepaid'))\n    const [prepaidNumber, setPrepaidNumber] = useState(localStorage.getItem('prepaidNumber'))\n    const [show, setShow] = useState(false)\n    const [invalidForm, setInvalidForm] = useState(true)\n\n    const [firstNameErrors, setFirstNameErrors] = useState([])\n    const [lastNameErrors, setLastNameErrors] = useState([])\n    const [prepaidNumberErrors, setPrepaidNumberErrors] = useState([])\n    const [passwordErrors, setPasswordErrors] = useState([])\n    const [repeatPasswordErrors, setRepeatPasswordErrors] = useState([])\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n\n    const onChange = (event) => {\n        // eslint-disable-next-line default-case\n        let error = false\n        let errors = []\n        switch (event.target.id) {\n            case \"firstName\":\n                setFirstName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.firstName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setFirstNameErrors(errors)\n                break;\n            case \"lastName\":\n                setLastName(event.target.value)\n                if(!isPresent(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.required\"))\n                    error = true\n                }\n                if(!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.lastName\") + \"  \" + t(\"errors.alphabetic\"))\n                    error = true\n                }\n                setLastNameErrors(errors)\n                break;\n            case \"password\":\n                setNewPassword(event.target.value)\n                if(event.target.value !== '' && event.target.value.length < 8) {\n                    errors.push(t(\"errors.passwordTooShort\"))\n                    error = true\n                }\n                if(event.target.value !== '' && repeatPassword !== event.target.value) {\n                    setRepeatPasswordErrors([t(\"errors.passwordMismatch\")])\n                    error = true\n                }\n                setPasswordErrors(errors)\n                break;\n            case \"prepaidNumber\":\n                setPrepaidNumber(event.target.value)\n                if(!/^\\d+$/.test(event.target.value)) {\n                    errors.push(t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.numeric\"))\n                    error = true\n                }\n                if(event.target.value.length > 20) {\n                    errors.push(t(\"errors.prepaidNumberTooLong\"))\n                    error = true\n                }\n                setPrepaidNumberErrors(errors)\n                break;\n            case \"repeatPassword\":\n                setRepeatPassword(event.target.value)\n                if(event.target.value !== '' && newPassword !== '' && newPassword !== event.target.value) {\n                    errors.push(t(\"errors.passwordMismatch\"))\n                    error = true\n                }\n                setRepeatPasswordErrors(errors)\n                break;\n        }\n        setInvalidForm(error)\n    }\n\n    const isPresent = (value) => {\n        let is = true\n        if(!value) {\n            is = false\n        }\n        return is\n    }\n\n    const handleSelect = (prepaid) => {\n        setSelectedPrepaid(prepaid)\n        if(prepaidNumber === '') {\n            let error = t(\"FORM.prepaidNumber\") + \"  \" + t(\"errors.required\")\n            setPrepaidNumberErrors([error])\n        }\n    }\n\n    const handleShow = () => {\n        setShow(!show)\n\n    }\n\n    const handleProfileUpdate = async () => {\n        setInvalidForm(true)\n        const response = await PatientCalls.updateProfile({\n            firstName: firstName,\n            lastName: lastName,\n            newPassword: newPassword,\n            repeatPassword: repeatPassword,\n            prepaid: selectedPrepaid,\n            prepaidNumber: prepaidNumber\n        }, localStorage.getItem('email'))\n        if (response && response.ok) {\n            props.handleOk()\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        setInvalidForm(false)\n        handleShow()\n    }\n\n    return (\n        <>\n            <Button variant=\"edit-remove-button doc-button-color shadow-sm edit-button app-btn\"\n                    onClick={() => handleShow()} size=\"lg\"\n                    className=\"add-margin\">\n                {t(\"editProfileButton\")}\n            </Button>\n            <Modal show={show} onHide={() => handleShow()}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{t('editProfileButton')}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"firstName\">\n                            <Form.Label>{t(\"FORM.firstName\")}</Form.Label>\n                            <Form.Control value={firstName}\n                                          placeholder={t(\"FORM.enterFirstName\")}\n                                          onChange={onChange}/>\n                            {firstNameErrors.length !== 0 && (\n                                    <div className=\"form-group\">\n                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                            <ul>\n                                                {firstNameErrors.map((error) => {\n                                                    return (\n                                                        <li>{error}</li>\n                                                    )\n                                                })}\n                                            </ul>\n                                        </div>\n                                    </div>\n                            )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"lastName\">\n                            <Form.Label>{t(\"FORM.lastName\")}</Form.Label>\n                            <Form.Control value={lastName}\n                                          placeholder={t(\"FORM.enterLastName\")}\n                                          onChange={onChange}/>\n                            {lastNameErrors.length !== 0 && (\n                                                        <div className=\"form-group\">\n                                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                                <ul>\n                                                                    {lastNameErrors.map((error) => {\n                                                                        return (\n                                                                            <li>{error}</li>\n                                                                        )\n                                                                    })}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"prepaid\">\n                            <Form.Label>{t(\"FORM.prepaid\")}: {selectedPrepaid === \"undefined\"? \"\":selectedPrepaid}</Form.Label>\n                            <DropDownList iterable={props.prepaids}\n                                          selectedElement={selectedPrepaid}\n                                          handleSelect={handleSelect}\n                                          elementType={t(\"FORM.selectPrepaid\")}\n                                          id='prepaid'/>\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"prepaidNumber\">\n                            <Form.Label>{t(\"FORM.prepaidNumber\")}</Form.Label>\n                            <Form.Control value={prepaidNumber}\n                                          type=\"text\"\n                                          placeholder={t(\"FORM.enterPrepaidNumber\")}\n                                          onChange={onChange}/>\n                            {prepaidNumberErrors.length !== 0 && (\n                                                    <div className=\"form-group\">\n                                                        <div className=\"alert alert-danger\" role=\"alert\">\n                                                            <ul>\n                                                                {prepaidNumberErrors.map((error) => {\n                                                                    return (\n                                                                        <li>{error}</li>\n                                                                    )\n                                                                })}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"newPassword\">\n                            <Form.Label>{t(\"FORM.password\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.password\")}\n                                          onChange={onChange}/>\n                            {passwordErrors.length !== 0 && (\n                                <div className=\"form-group\">\n                                    <div className=\"alert alert-danger\" role=\"alert\">\n                                        <ul>\n                                            {passwordErrors.map((error) => {\n                                                return (\n                                                    <li>{error}</li>\n                                                )\n                                            })}\n                                        </ul>\n                                    </div>\n                                </div>\n                            )}\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"repeatPassword\">\n                            <Form.Label>{t(\"FORM.repeatPassword\")}</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder={t(\"FORM.repeatPassword\")}\n                                          onChange={onChange}/>\n\n                            {repeatPasswordErrors.length !== 0 && (\n                                                        <div className=\"form-group\">\n                                                            <div className=\"alert alert-danger\" role=\"alert\">\n                                                                <ul>\n                                                                    {repeatPasswordErrors.map((error) => {\n                                                                        return (\n                                                                            <li>{error}</li>\n                                                                        )\n                                                                    })}\n                                                                </ul>\n                                                            </div>\n                                                        </div>\n                                                    )}\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => handleShow()}>\n                        {t(\"closeButton\")}\n                    </Button>\n                    <Button className=\"doc-button-color\" disabled={invalidForm} onClick={handleProfileUpdate}>\n                        {t('actions.edit')}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n\n}\nexport default EditUserProfileModal","import React, {useEffect, useState} from 'react';\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\nimport DropDownList from \"../DropDownList\";\nimport {useTranslation} from \"react-i18next\";\nimport '../../i18n/i18n'\nimport {Link, useNavigate} from \"react-router-dom\";\nimport PatientCalls from \"../../api/PatientCalls\";\nimport PrepaidCalls from \"../../api/PrepaidCalls\";\nimport EditUserProfileModal from \"../Modals/EditUserProfileModal\";\nimport AppointmentCalls from \"../../api/AppointmentCalls\";\nimport {dateToString} from \"../../utils/dateHelper\";\nimport './Profile.css'\n\nfunction Profile() {\n    const [selectedPrepaid, setSelectedPrepaid] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [id, setId] = useState('')\n    const [prepaidNumber, setPrepaidNumber] = useState('')\n    const [prepaids, setPrepaids] = useState([])\n    const [appointments, setAppointments] = useState([])\n\n\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n\n    useEffect(async () => {\n        await fetchProfile()\n        await fetchPrepaids()\n        await fetchAppointments()\n    }, [])\n\n    const fetchPrepaids = async () => {\n        const response = await PrepaidCalls.getAllPrepaids();\n        if (response && response.ok) {\n            setPrepaids(response.data.map(prepaid => prepaid.name))\n        }\n    }\n\n    const fetchProfile = async () => {\n        const response = await PatientCalls.getProfile(localStorage.getItem('email'));\n        if (response && response.ok) {\n            setFirstName(response.data.userData.firstName)\n            localStorage.setItem('firstName', response.data.userData.firstName)\n            setLastName(response.data.userData.lastName)\n            localStorage.setItem('lastName', response.data.userData.lastName)\n            setSelectedPrepaid(response.data.prepaid)\n            localStorage.setItem('prepaid', response.data.prepaid)\n            setPrepaidNumber(response.data.prepaidNumber)\n            localStorage.setItem('prepaidNumber', response.data.prepaidNumber)\n            setId(response.data.id)\n        } else if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n\n    const fetchAppointments = async () => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        const response = await AppointmentCalls.getAppointment(email, 0)\n        if (response && response.ok) {\n            setAppointments(response.data.slice(0, 3))\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.removeItem('email')\n            navigate('/paw-2019b-4/login')\n        }\n    }\n    const handleProfileUpdateOk = async () => {\n            await fetchProfile()\n            await fetchPrepaids()\n    }\n\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col>\n                        <h3 className=\"mt-3\">\n                            {t(\"welcome\")}, {firstName} {lastName}!\n                        </h3>\n                        <hr />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"info-col\">\n                        <h4>\n                            {t('NAVBAR.profile')}\n                        </h4>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.name')}:</b> {firstName} {lastName}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.email')}:</b> {localStorage.getItem('email')}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.id')}:</b> {id}\n                        </div>\n                        <div className=\"info-label\">\n                            <b>{t('FORM.prepaid')}:</b> {selectedPrepaid !== undefined? selectedPrepaid: t(\"FORM.none\")}\n                        </div>\n                        {selectedPrepaid &&\n                            <div className=\"info-label\">\n                                <b>{t('FORM.prepaidNumber')}:</b> {prepaidNumber}\n                            </div>\n                        }\n                    </Col>\n                    <Col>\n                        <h4>{t('nextApp')}</h4>\n                        <ul style={{display:\"grid\", justifyItems:\"flex-start\"}}>\n                            {appointments.map(app => {\n                                return(\n                                    <li className=\"my-3\">\n                                        <b>{dateToString(app, t)}</b> {t(\"with\")} <b>{app.doctorClinic.doctor.user.firstName + ' ' + app.doctorClinic.doctor.user.lastName}</b> ({app.doctorClinic.clinic.name})\n                                    </li>\n                                )\n                            })}\n                        </ul>\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"col-button\">\n                        <EditUserProfileModal prepaids={prepaids}\n                                              handleOk={handleProfileUpdateOk}\n                                              prepaidNumber={prepaidNumber}\n                        />\n                    </Col>\n                    <Col className=\"col-button\">\n                        <Link\n                            className=\"edit-remove-button doc-button-color shadow-sm edit-button btn app-btn\"\n                            role=\"button\"\n                            to=\"/paw-2019b-4/appointments\">{t('NAVBAR.appointments')}\n                        </Link>\n                    </Col>\n                </Row>\n                <hr/>\n                <Row>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default Profile;","import React, {useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {useNavigate} from \"react-router-dom\";\nimport AppointmentCalls from \"../../api/AppointmentCalls\";\nimport {Button, Card, Container, Row} from \"react-bootstrap\";\nimport './Favorites.css'\nimport {dateToString, getMonth, getWeekDate} from \"../../utils/dateHelper\";\n\nfunction Appointments(props) {\n    const [appointments, setAppointments] = useState([])\n    const [page, setPage] = useState(0)\n    const [maxPage, setMaxPage] = useState(0)\n    const [message, setMessage] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n    const {t} = useTranslation()\n    const navigate = useNavigate()\n\n    const fetchAppointments = async (pag) => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        setIsLoading(true)\n        const response = await AppointmentCalls.getAppointment(email, pag)\n        if (response && response.ok) {\n            setAppointments(response.data)\n            setMaxPage(Number(response.headers.xMaxPage))\n            setMessage(\"\")\n            setIsLoading(false)\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.removeItem('email')\n            navigate('/paw-2019b-4/login')\n        }\n        if (response.status === 404) {\n            if (response.data === \"user-not-found\")\n                setMessage(\"errors.noLoggedDoc\")\n        }\n    }\n\n    const deleteAppointment = async (app) => {\n        const email = localStorage.getItem('email')\n        if (email === null) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            navigate('/paw-2019b-4/login')\n        }\n        const response = await AppointmentCalls.deleteAppointment(\n            email,\n            app.doctorClinic.doctor.license,\n            app.doctorClinic.clinic.id,\n            app.year,\n            app.month,\n            app.day,\n            app.hour)\n        if (response && response.ok) {\n            await fetchAppointments(page)\n            setMessage(\"\")\n        }\n        if (response.status === 401) {\n            localStorage.removeItem('token')\n            localStorage.removeItem('role')\n            localStorage.removeItem('email')\n            navigate('/paw-2019b-4/login')\n        }\n        if (response.status === 404) {\n            if (response.data === \"doctor-clinic-not-found\")\n                setMessage(\"errors.docClinicNotFound\")\n            if (response.data === \"appointment-not-found\")\n                setMessage(\"errors.noAppointmentFound\")\n        }\n    }\n\n    useEffect(async () => {\n        await fetchAppointments(page);\n    }, [])\n\n    const nextPage = async () => {\n        const newPage = page + 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchAppointments(newPage)\n\n    }\n    const prevPage = async () => {\n        const newPage = page - 1\n        setPage(newPage)\n        setMessage(\"\")\n        await fetchAppointments(newPage)\n    }\n\n    const renderPrevButton = () => {\n        if (page !== 0) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => prevPage()}>{t('prevButton')}</Button>\n        }\n    }\n\n    const renderNextButton = () => {\n        if (page < maxPage - 1) {\n            return <Button className=\"doc-button doc-button-color shadow-sm\"\n                           onClick={() => nextPage()}>{t('nextButton')}</Button>\n        }\n    }\n\n    return(\n        <>\n            <Row style={{display:\"flex\"}}>\n                <h2 className=\"m-3 fav-title\">{t(\"NAVBAR.appointments\")}</h2>\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {t(message)}\n                        </div>\n                    </div>\n                )}\n                {appointments.length === 0 && !isLoading && <h4 className=\"m-3 no-fav\">{t(\"USER.noApp\")}</h4>}\n            </Row>\n            <Container>\n                <div className=\"admin-info-container app-user-container\">\n                    {appointments.map((ap) => {\n                        return (\n                            <Card className=\"mb-3 app-card shadow\">\n                                <Card.Body>\n                                    <Card.Title><b>{dateToString(ap, t)}</b></Card.Title>\n                                    <Card.Text>\n                                        {props.user === \"patient\"? <div>\n                                            {t(\"USER.doc\")}{ap.doctorClinic.doctor.user.firstName + ' ' + ap.doctorClinic.doctor.user.lastName}\n                                        </div>: <div>\n                                            {t(\"USER.patient\")}{ap.patient.firstName + ' ' + ap.patient.lastName} ({ap.patient.email})\n                                        </div> }\n\n                                        <div>\n                                            {t(\"USER.clinic\")} {ap.doctorClinic.clinic.name} - {ap.doctorClinic.clinic.location} ({ap.doctorClinic.clinic.address})\n                                        </div>\n\n                                    </Card.Text>\n                                </Card.Body>\n                                <Button className=\"remove-button remove-button-color shadow-sm\"\n                                        onClick={() => {deleteAppointment(ap)}}>\n                                    {t('cancelButton')}\n                                </Button>\n                            </Card>\n                        )\n                    })}\n                </div>\n            </Container>\n            {renderPrevButton()}\n            {renderNextButton()}\n        </>\n    )\n\n}\nexport default Appointments;","import './App.css';\nimport {BrowserRouter as Router, Routes, Route, Navigate} from \"react-router-dom\";\nimport Home from './Components/Pages/Home'\nimport Navbar from \"./Components/NavBar\";\nimport AdminHome from \"./Components/Pages/AdminHome\";\nimport Locations from \"./Components/Pages/Locations\";\nimport Specialties from \"./Components/Pages/Specialties\";\nimport Clinics from \"./Components/Pages/Clinics\";\nimport Prepaids from \"./Components/Pages/Prepaids\";\nimport SignUp from \"./Components/Pages/SignUp\";\nimport ClinicPrepaids from './Components/Pages/ClinicPrepaids';\nimport Doctors from \"./Components/Pages/Doctors\";\nimport WrappedLogin from \"./Components/Pages/Login\";\nimport \"../src/i18n/i18n\"\nimport DoctorHome from \"./Components/Pages/DoctorHome\";\nimport DoctorClinics from \"./Components/Pages/DoctorClinics\";\nimport DoctorClinicSchedule from \"./Components/Pages/DoctorClinicSchedule\";\nimport UserDoctorProfile from \"./Components/Pages/UserDoctorProfile\";\nimport Favorites from \"./Components/Pages/Favorites\";\nimport Profile from \"./Components/Pages/Profile\";\nimport Appointments from \"./Components/Pages/Appointments\";\n\nfunction App() {\n\n    const isAuth = () => localStorage.getItem('role') !== null;\n\n    const isAdmin = () => isAuth()? localStorage.getItem('role') === 'ROLE_ADMIN' : false;\n    const isDoc = () => isAuth()? localStorage.getItem('role') === 'ROLE_DOCTOR' : false;\n    const isUser = () => isAuth()? localStorage.getItem('role') === 'ROLE_USER' : false;\n\n    function AdminRoute({ children }) {\n        const auth = isAdmin();\n        return auth ? children : <Navigate to=\"/paw-2019b-4/login\" />;\n    }\n\n    function DoctorRoute ({children}) {\n        const auth = isDoc();\n        return auth ? children : <Navigate to=\"/paw-2019b-4/login\" />;\n    }\n\n    function UserRoute ({children}) {\n        const auth = isUser();\n        return auth ? children : <Navigate to=\"/paw-2019b-4/login\" />;\n    }\n\n  return (\n    <div className=\"App\">\n        <div className=\"App-header\">\n            <Router>\n                <Navbar isAuth={isAuth}/>\n                <Routes>\n                    <Route exact path='/paw-2019b-4' element={<Home/>}/>\n                    <Route exact path='/paw-2019b-4/appointments' element={<UserRoute><Appointments user=\"patient\" /></UserRoute>}/>\n                    <Route exact path='/paw-2019b-4/:license/profile' element={<UserDoctorProfile />}/>\n                    <Route exact path=\"/paw-2019b-4/doctor\" element={<DoctorRoute><DoctorHome /></DoctorRoute>} />\n                    <Route exact path=\"/paw-2019b-4/doctor/clinics\" element={<DoctorRoute><DoctorClinics/></DoctorRoute>} />\n                    <Route exact path=\"/paw-2019b-4/doctor/appointments\" element={<DoctorRoute><Appointments user=\"doctor\" /></DoctorRoute>} />\n                    <Route exact path=\"/paw-2019b-4/doctor/:license/clinics/:id/schedule\"\n                           element={<DoctorRoute><DoctorClinicSchedule /></DoctorRoute>} />\n                    <Route exact path='/paw-2019b-4/admin/' exact element={<AdminRoute><AdminHome /></AdminRoute>}/>\n                    <Route exact path='/paw-2019b-4/admin/locations' element={<AdminRoute><Locations /></AdminRoute>}/>\n                    <Route exact path='/paw-2019b-4/admin/specialties' element={<AdminRoute><Specialties /></AdminRoute>}/>\n                    <Route exact path='/paw-2019b-4/admin/clinics' element={<AdminRoute><Clinics /></AdminRoute>} />\n                    <Route exact path='/paw-2019b-4/admin/prepaids' element={<AdminRoute><Prepaids /></AdminRoute>}/>\n                    <Route exact path='/paw-2019b-4/admin/clinics/:id/prepaids' element={<AdminRoute><ClinicPrepaids/></AdminRoute>}/>\n                    <Route exact path='/paw-2019b-4/admin/doctors' element={<AdminRoute><Doctors/></AdminRoute>}/>\n                    <Route exact path='/paw-2019b-4/login' element={<WrappedLogin />}/>\n                    <Route exact path='/paw-2019b-4/signUp' element={<SignUp />}/>\n                    <Route exact path='/paw-2019b-4/favorites' element={<UserRoute><Favorites /></UserRoute>}/>\n                    <Route exact path='/paw-2019b-4/profile' element={<UserRoute><Profile/></UserRoute>}/>\n                </Routes>\n            </Router>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}